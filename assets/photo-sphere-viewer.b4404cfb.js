var Dh=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},dc={exports:{}},A={};/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */Object.defineProperty(A,"__esModule",{value:!0});const ko="146",rf={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},of={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Oh=0,Wa=1,Nh=2,af=3,lf=0,Cl=1,Fh=2,xs=3,Hi=0,sn=1,Bn=2,Hn=0,Fi=1,Xa=2,qa=3,Ya=4,Uh=5,Li=100,Bh=101,zh=102,Za=103,Ja=104,kh=200,Hh=201,Gh=202,Vh=203,Rl=204,Ll=205,Wh=206,Xh=207,qh=208,Yh=209,Zh=210,Jh=0,Kh=1,$h=2,No=3,jh=4,Qh=5,eu=6,tu=7,xr=0,nu=1,iu=2,En=0,su=1,ru=2,ou=3,au=4,lu=5,Ho=300,oi=301,ai=302,tr=303,nr=304,Cs=306,ir=1e3,Ht=1001,sr=1002,Ct=1003,Fo=1004,cf=1004,Uo=1005,hf=1005,St=1006,Pl=1007,uf=1007,qi=1008,df=1008,li=1009,cu=1010,hu=1011,Il=1012,uu=1013,ii=1014,zn=1015,Es=1016,du=1017,fu=1018,Ui=1020,pu=1021,mu=1022,nn=1023,gu=1024,_u=1025,ri=1026,Gi=1027,vu=1028,xu=1029,yu=1030,Mu=1031,bu=1033,Ao=33776,Co=33777,Ro=33778,Lo=33779,Ka=35840,$a=35841,ja=35842,Qa=35843,wu=36196,el=37492,tl=37496,nl=37808,il=37809,sl=37810,rl=37811,ol=37812,al=37813,ll=37814,cl=37815,hl=37816,ul=37817,dl=37818,fl=37819,pl=37820,ml=37821,gl=36492,Su=2200,Eu=2201,Tu=2202,rr=2300,or=2301,Po=2302,Ii=2400,Di=2401,ar=2402,Go=2500,Dl=2501,ff=0,pf=1,mf=2,ci=3e3,xt=3001,Au=3200,Cu=3201,ui=0,Ru=1,gf="",Sn="srgb",si="srgb-linear",_f=0,Io=7680,vf=7681,xf=7682,yf=7683,Mf=34055,bf=34056,wf=5386,Sf=512,Ef=513,Tf=514,Af=515,Cf=516,Rf=517,Lf=518,Lu=519,lr=35044,Pf=35048,If=35040,Df=35045,Of=35049,Nf=35041,Ff=35046,Uf=35050,Bf=35042,zf="100",_l="300 es",Bo=1035;class Vn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const kt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let fc=1234567;const Bi=Math.PI/180,cr=180/Math.PI;function rn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(kt[r&255]+kt[r>>8&255]+kt[r>>16&255]+kt[r>>24&255]+"-"+kt[e&255]+kt[e>>8&255]+"-"+kt[e>>16&15|64]+kt[e>>24&255]+"-"+kt[t&63|128]+kt[t>>8&255]+"-"+kt[t>>16&255]+kt[t>>24&255]+kt[n&255]+kt[n>>8&255]+kt[n>>16&255]+kt[n>>24&255]).toLowerCase()}function Et(r,e,t){return Math.max(e,Math.min(t,r))}function Ol(r,e){return(r%e+e)%e}function kf(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Hf(r,e,t){return r!==e?(t-r)/(e-r):0}function js(r,e,t){return(1-t)*r+t*e}function Gf(r,e,t,n){return js(r,e,1-Math.exp(-t*n))}function Vf(r,e=1){return e-Math.abs(Ol(r,e*2)-e)}function Wf(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Xf(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function qf(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Yf(r,e){return r+Math.random()*(e-r)}function Zf(r){return r*(.5-Math.random())}function Jf(r){r!==void 0&&(fc=r);let e=fc+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Kf(r){return r*Bi}function $f(r){return r*cr}function vl(r){return(r&r-1)===0&&r!==0}function Pu(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function zo(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function jf(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),h=s((e+n)/2),u=o((e+n)/2),d=s((e-n)/2),f=o((e-n)/2),p=s((n-e)/2),_=o((n-e)/2);switch(i){case"XYX":r.set(a*u,l*d,l*f,a*h);break;case"YZY":r.set(l*f,a*u,l*d,a*h);break;case"ZXZ":r.set(l*d,l*f,a*u,a*h);break;case"XZX":r.set(a*u,l*_,l*p,a*h);break;case"YXY":r.set(l*p,a*u,l*_,a*h);break;case"ZYZ":r.set(l*_,l*p,a*u,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function kn(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function mt(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var Qf=Object.freeze({__proto__:null,DEG2RAD:Bi,RAD2DEG:cr,generateUUID:rn,clamp:Et,euclideanModulo:Ol,mapLinear:kf,inverseLerp:Hf,lerp:js,damp:Gf,pingpong:Vf,smoothstep:Wf,smootherstep:Xf,randInt:qf,randFloat:Yf,randFloatSpread:Zf,seededRandom:Jf,degToRad:Kf,radToDeg:$f,isPowerOfTwo:vl,ceilPowerOfTwo:Pu,floorPowerOfTwo:zo,setQuaternionFromProperEuler:jf,normalize:mt,denormalize:kn});class ae{constructor(e=0,t=0){ae.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Zt{constructor(){Zt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,s,o,a,l,h){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],h=n[1],u=n[4],d=n[7],f=n[2],p=n[5],_=n[8],g=i[0],m=i[3],x=i[6],C=i[1],S=i[4],w=i[7],R=i[2],I=i[5],B=i[8];return s[0]=o*g+a*C+l*R,s[3]=o*m+a*S+l*I,s[6]=o*x+a*w+l*B,s[1]=h*g+u*C+d*R,s[4]=h*m+u*S+d*I,s[7]=h*x+u*w+d*B,s[2]=f*g+p*C+_*R,s[5]=f*m+p*S+_*I,s[8]=f*x+p*w+_*B,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],h=e[7],u=e[8];return t*o*u-t*a*h-n*s*u+n*a*l+i*s*h-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],h=e[7],u=e[8],d=u*o-a*h,f=a*l-u*s,p=h*s-o*l,_=t*d+n*f+i*p;if(_===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/_;return e[0]=d*g,e[1]=(i*h-u*n)*g,e[2]=(a*n-i*o)*g,e[3]=f*g,e[4]=(u*t-i*l)*g,e[5]=(i*s-a*t)*g,e[6]=p*g,e[7]=(n*l-h*t)*g,e[8]=(o*t-n*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const l=Math.cos(s),h=Math.sin(s);return this.set(n*l,n*h,-n*(l*o+h*a)+o+e,-i*h,i*l,-i*(-h*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],h=i[4],u=i[7];return i[0]=t*s+n*l,i[3]=t*o+n*h,i[6]=t*a+n*u,i[1]=-n*s+t*l,i[4]=-n*o+t*h,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Iu(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const ep={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ys(r,e){return new ep[r](e)}function hr(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function zi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Do(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const ca={[Sn]:{[si]:zi},[si]:{[Sn]:Do}},hn={legacyMode:!0,get workingColorSpace(){return si},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(ca[e]&&ca[e][t]!==void 0){const n=ca[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Du={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Pt={r:0,g:0,b:0},gn={h:0,s:0,l:0},kr={h:0,s:0,l:0};function ha(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function Hr(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class Se{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Sn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,hn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=si){return this.r=e,this.g=t,this.b=n,hn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=si){if(e=Ol(e,1),t=Et(t,0,1),n=Et(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=ha(o,s,e+1/3),this.g=ha(o,s,e),this.b=ha(o,s,e-1/3)}return hn.toWorkingColorSpace(this,i),this}setStyle(e,t=Sn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,hn.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,hn.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,h=parseFloat(s[2])/100,u=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,h,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,hn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,hn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Sn){const n=Du[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=zi(e.r),this.g=zi(e.g),this.b=zi(e.b),this}copyLinearToSRGB(e){return this.r=Do(e.r),this.g=Do(e.g),this.b=Do(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Sn){return hn.fromWorkingColorSpace(Hr(this,Pt),e),Et(Pt.r*255,0,255)<<16^Et(Pt.g*255,0,255)<<8^Et(Pt.b*255,0,255)<<0}getHexString(e=Sn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=si){hn.fromWorkingColorSpace(Hr(this,Pt),t);const n=Pt.r,i=Pt.g,s=Pt.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,h;const u=(a+o)/2;if(a===o)l=0,h=0;else{const d=o-a;switch(h=u<=.5?d/(o+a):d/(2-o-a),o){case n:l=(i-s)/d+(i<s?6:0);break;case i:l=(s-n)/d+2;break;case s:l=(n-i)/d+4;break}l/=6}return e.h=l,e.s=h,e.l=u,e}getRGB(e,t=si){return hn.fromWorkingColorSpace(Hr(this,Pt),t),e.r=Pt.r,e.g=Pt.g,e.b=Pt.b,e}getStyle(e=Sn){return hn.fromWorkingColorSpace(Hr(this,Pt),e),e!==Sn?`color(${e} ${Pt.r} ${Pt.g} ${Pt.b})`:`rgb(${Pt.r*255|0},${Pt.g*255|0},${Pt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(gn),gn.h+=e,gn.s+=t,gn.l+=n,this.setHSL(gn.h,gn.s,gn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(gn),e.getHSL(kr);const n=js(gn.h,kr.h,t),i=js(gn.s,kr.s,t),s=js(gn.l,kr.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Se.NAMES=Du;let ts;class Nl{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ts===void 0&&(ts=hr("canvas")),ts.width=e.width,ts.height=e.height;const n=ts.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ts}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=hr("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=zi(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(zi(t[n]/255)*255):t[n]=zi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Oi{constructor(e=null){this.isSource=!0,this.uuid=rn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(ua(i[o].image)):s.push(ua(i[o]))}else s=ua(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function ua(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?Nl.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let tp=0;class It extends Vn{constructor(e=It.DEFAULT_IMAGE,t=It.DEFAULT_MAPPING,n=Ht,i=Ht,s=St,o=qi,a=nn,l=li,h=1,u=ci){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:tp++}),this.uuid=rn(),this.name="",this.source=new Oi(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ae(0,0),this.repeat=new ae(1,1),this.center=new ae(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ho)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ir:e.x=e.x-Math.floor(e.x);break;case Ht:e.x=e.x<0?0:1;break;case sr:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ir:e.y=e.y-Math.floor(e.y);break;case Ht:e.y=e.y<0?0:1;break;case sr:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}It.DEFAULT_IMAGE=null;It.DEFAULT_MAPPING=Ho;class ht{constructor(e=0,t=0,n=0,i=1){ht.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,h=l[0],u=l[4],d=l[8],f=l[1],p=l[5],_=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(u-f)<.01&&Math.abs(d-g)<.01&&Math.abs(_-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(d+g)<.1&&Math.abs(_+m)<.1&&Math.abs(h+p+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,w=(p+1)/2,R=(x+1)/2,I=(u+f)/4,B=(d+g)/4,E=(_+m)/4;return S>w&&S>R?S<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(S),i=I/n,s=B/n):w>R?w<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(w),n=I/i,s=E/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=B/s,i=E/s),this.set(n,i,s,t),this}let C=Math.sqrt((m-_)*(m-_)+(d-g)*(d-g)+(f-u)*(f-u));return Math.abs(C)<.001&&(C=1),this.x=(m-_)/C,this.y=(d-g)/C,this.z=(f-u)/C,this.w=Math.acos((h+p+x-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class fn extends Vn{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ht(0,0,e,t),this.scissorTest=!1,this.viewport=new ht(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new It(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:St,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Oi(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class yr extends It{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Ct,this.minFilter=Ct,this.wrapR=Ht,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class np extends fn{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new yr(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vo extends It{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Ct,this.minFilter=Ct,this.wrapR=Ht,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ip extends fn{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Vo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class sp extends fn{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Jt{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,o,a){let l=n[i+0],h=n[i+1],u=n[i+2],d=n[i+3];const f=s[o+0],p=s[o+1],_=s[o+2],g=s[o+3];if(a===0){e[t+0]=l,e[t+1]=h,e[t+2]=u,e[t+3]=d;return}if(a===1){e[t+0]=f,e[t+1]=p,e[t+2]=_,e[t+3]=g;return}if(d!==g||l!==f||h!==p||u!==_){let m=1-a;const x=l*f+h*p+u*_+d*g,C=x>=0?1:-1,S=1-x*x;if(S>Number.EPSILON){const R=Math.sqrt(S),I=Math.atan2(R,x*C);m=Math.sin(m*I)/R,a=Math.sin(a*I)/R}const w=a*C;if(l=l*m+f*w,h=h*m+p*w,u=u*m+_*w,d=d*m+g*w,m===1-a){const R=1/Math.sqrt(l*l+h*h+u*u+d*d);l*=R,h*=R,u*=R,d*=R}}e[t]=l,e[t+1]=h,e[t+2]=u,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],l=n[i+1],h=n[i+2],u=n[i+3],d=s[o],f=s[o+1],p=s[o+2],_=s[o+3];return e[t]=a*_+u*d+l*p-h*f,e[t+1]=l*_+u*f+h*d-a*p,e[t+2]=h*_+u*p+a*f-l*d,e[t+3]=u*_-a*d-l*f-h*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,h=a(n/2),u=a(i/2),d=a(s/2),f=l(n/2),p=l(i/2),_=l(s/2);switch(o){case"XYZ":this._x=f*u*d+h*p*_,this._y=h*p*d-f*u*_,this._z=h*u*_+f*p*d,this._w=h*u*d-f*p*_;break;case"YXZ":this._x=f*u*d+h*p*_,this._y=h*p*d-f*u*_,this._z=h*u*_-f*p*d,this._w=h*u*d+f*p*_;break;case"ZXY":this._x=f*u*d-h*p*_,this._y=h*p*d+f*u*_,this._z=h*u*_+f*p*d,this._w=h*u*d-f*p*_;break;case"ZYX":this._x=f*u*d-h*p*_,this._y=h*p*d+f*u*_,this._z=h*u*_-f*p*d,this._w=h*u*d+f*p*_;break;case"YZX":this._x=f*u*d+h*p*_,this._y=h*p*d+f*u*_,this._z=h*u*_-f*p*d,this._w=h*u*d-f*p*_;break;case"XZY":this._x=f*u*d-h*p*_,this._y=h*p*d-f*u*_,this._z=h*u*_+f*p*d,this._w=h*u*d+f*p*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],l=t[9],h=t[2],u=t[6],d=t[10],f=n+a+d;if(f>0){const p=.5/Math.sqrt(f+1);this._w=.25/p,this._x=(u-l)*p,this._y=(s-h)*p,this._z=(o-i)*p}else if(n>a&&n>d){const p=2*Math.sqrt(1+n-a-d);this._w=(u-l)/p,this._x=.25*p,this._y=(i+o)/p,this._z=(s+h)/p}else if(a>d){const p=2*Math.sqrt(1+a-n-d);this._w=(s-h)/p,this._x=(i+o)/p,this._y=.25*p,this._z=(l+u)/p}else{const p=2*Math.sqrt(1+d-n-a);this._w=(o-i)/p,this._x=(s+h)/p,this._y=(l+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Et(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,l=t._y,h=t._z,u=t._w;return this._x=n*u+o*a+i*h-s*l,this._y=i*u+o*l+s*a-n*h,this._z=s*u+o*h+n*l-i*a,this._w=o*u-n*a-i*l-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const p=1-t;return this._w=p*o+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(l),u=Math.atan2(h,a),d=Math.sin((1-t)*u)/h,f=Math.sin(t*u)/h;return this._w=o*d+this._w*f,this._x=n*d+this._x*f,this._y=i*d+this._y*f,this._z=s*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(pc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(pc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,l=e.w,h=l*t+o*i-a*n,u=l*n+a*t-s*i,d=l*i+s*n-o*t,f=-s*t-o*n-a*i;return this.x=h*l+f*-s+u*-a-d*-o,this.y=u*l+f*-o+d*-s-h*-a,this.z=d*l+f*-a+h*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return da.copy(this).projectOnVector(e),this.sub(da)}reflect(e){return this.sub(da.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Et(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const da=new N,pc=new Jt;class Yi{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,h=e.length;l<h;l+=3){const u=e[l],d=e[l+1],f=e[l+2];u<t&&(t=u),d<n&&(n=d),f<i&&(i=f),u>s&&(s=u),d>o&&(o=d),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,h=e.count;l<h;l++){const u=e.getX(l),d=e.getY(l),f=e.getZ(l);u<t&&(t=u),d<n&&(n=d),f<i&&(i=f),u>s&&(s=u),d>o&&(o=d),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Mi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Mi.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Mi)}else n.boundingBox===null&&n.computeBoundingBox(),fa.copy(n.boundingBox),fa.applyMatrix4(e.matrixWorld),this.union(fa);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Mi),Mi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Gs),Gr.subVectors(this.max,Gs),ns.subVectors(e.a,Gs),is.subVectors(e.b,Gs),ss.subVectors(e.c,Gs),Zn.subVectors(is,ns),Jn.subVectors(ss,is),bi.subVectors(ns,ss);let t=[0,-Zn.z,Zn.y,0,-Jn.z,Jn.y,0,-bi.z,bi.y,Zn.z,0,-Zn.x,Jn.z,0,-Jn.x,bi.z,0,-bi.x,-Zn.y,Zn.x,0,-Jn.y,Jn.x,0,-bi.y,bi.x,0];return!pa(t,ns,is,ss,Gr)||(t=[1,0,0,0,1,0,0,0,1],!pa(t,ns,is,ss,Gr))?!1:(Vr.crossVectors(Zn,Jn),t=[Vr.x,Vr.y,Vr.z],pa(t,ns,is,ss,Gr))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Mi.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Mi).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Pn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Pn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Pn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Pn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Pn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Pn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Pn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Pn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Pn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Pn=[new N,new N,new N,new N,new N,new N,new N,new N],Mi=new N,fa=new Yi,ns=new N,is=new N,ss=new N,Zn=new N,Jn=new N,bi=new N,Gs=new N,Gr=new N,Vr=new N,wi=new N;function pa(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){wi.fromArray(r,s);const a=i.x*Math.abs(wi.x)+i.y*Math.abs(wi.y)+i.z*Math.abs(wi.z),l=e.dot(wi),h=t.dot(wi),u=n.dot(wi);if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>a)return!1}return!0}const rp=new Yi,Vs=new N,ma=new N;class Zi{constructor(e=new N,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):rp.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Vs.subVectors(e,this.center);const t=Vs.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Vs,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(ma.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Vs.copy(e.center).add(ma)),this.expandByPoint(Vs.copy(e.center).sub(ma))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const In=new N,ga=new N,Wr=new N,Kn=new N,_a=new N,Xr=new N,va=new N;class Mr{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,In)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=In.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(In.copy(this.direction).multiplyScalar(t).add(this.origin),In.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ga.copy(e).add(t).multiplyScalar(.5),Wr.copy(t).sub(e).normalize(),Kn.copy(this.origin).sub(ga);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Wr),a=Kn.dot(this.direction),l=-Kn.dot(Wr),h=Kn.lengthSq(),u=Math.abs(1-o*o);let d,f,p,_;if(u>0)if(d=o*l-a,f=o*a-l,_=s*u,d>=0)if(f>=-_)if(f<=_){const g=1/u;d*=g,f*=g,p=d*(d+o*f+2*a)+f*(o*d+f+2*l)+h}else f=s,d=Math.max(0,-(o*f+a)),p=-d*d+f*(f+2*l)+h;else f=-s,d=Math.max(0,-(o*f+a)),p=-d*d+f*(f+2*l)+h;else f<=-_?(d=Math.max(0,-(-o*s+a)),f=d>0?-s:Math.min(Math.max(-s,-l),s),p=-d*d+f*(f+2*l)+h):f<=_?(d=0,f=Math.min(Math.max(-s,-l),s),p=f*(f+2*l)+h):(d=Math.max(0,-(o*s+a)),f=d>0?s:Math.min(Math.max(-s,-l),s),p=-d*d+f*(f+2*l)+h);else f=o>0?-s:s,d=Math.max(0,-(o*f+a)),p=-d*d+f*(f+2*l)+h;return n&&n.copy(this.direction).multiplyScalar(d).add(this.origin),i&&i.copy(Wr).multiplyScalar(f).add(ga),p}intersectSphere(e,t){In.subVectors(e.center,this.origin);const n=In.dot(this.direction),i=In.dot(In)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,l;const h=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,f=this.origin;return h>=0?(n=(e.min.x-f.x)*h,i=(e.max.x-f.x)*h):(n=(e.max.x-f.x)*h,i=(e.min.x-f.x)*h),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),d>=0?(a=(e.min.z-f.z)*d,l=(e.max.z-f.z)*d):(a=(e.max.z-f.z)*d,l=(e.min.z-f.z)*d),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,In)!==null}intersectTriangle(e,t,n,i,s){_a.subVectors(t,e),Xr.subVectors(n,e),va.crossVectors(_a,Xr);let o=this.direction.dot(va),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Kn.subVectors(this.origin,e);const l=a*this.direction.dot(Xr.crossVectors(Kn,Xr));if(l<0)return null;const h=a*this.direction.dot(_a.cross(Kn));if(h<0||l+h>o)return null;const u=-a*Kn.dot(va);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Xe{constructor(){Xe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,s,o,a,l,h,u,d,f,p,_,g,m){const x=this.elements;return x[0]=e,x[4]=t,x[8]=n,x[12]=i,x[1]=s,x[5]=o,x[9]=a,x[13]=l,x[2]=h,x[6]=u,x[10]=d,x[14]=f,x[3]=p,x[7]=_,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Xe().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/rs.setFromMatrixColumn(e,0).length(),s=1/rs.setFromMatrixColumn(e,1).length(),o=1/rs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),h=Math.sin(i),u=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const f=o*u,p=o*d,_=a*u,g=a*d;t[0]=l*u,t[4]=-l*d,t[8]=h,t[1]=p+_*h,t[5]=f-g*h,t[9]=-a*l,t[2]=g-f*h,t[6]=_+p*h,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,p=l*d,_=h*u,g=h*d;t[0]=f+g*a,t[4]=_*a-p,t[8]=o*h,t[1]=o*d,t[5]=o*u,t[9]=-a,t[2]=p*a-_,t[6]=g+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,p=l*d,_=h*u,g=h*d;t[0]=f-g*a,t[4]=-o*d,t[8]=_+p*a,t[1]=p+_*a,t[5]=o*u,t[9]=g-f*a,t[2]=-o*h,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,p=o*d,_=a*u,g=a*d;t[0]=l*u,t[4]=_*h-p,t[8]=f*h+g,t[1]=l*d,t[5]=g*h+f,t[9]=p*h-_,t[2]=-h,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,p=o*h,_=a*l,g=a*h;t[0]=l*u,t[4]=g-f*d,t[8]=_*d+p,t[1]=d,t[5]=o*u,t[9]=-a*u,t[2]=-h*u,t[6]=p*d+_,t[10]=f-g*d}else if(e.order==="XZY"){const f=o*l,p=o*h,_=a*l,g=a*h;t[0]=l*u,t[4]=-d,t[8]=h*u,t[1]=f*d+g,t[5]=o*u,t[9]=p*d-_,t[2]=_*d-p,t[6]=a*u,t[10]=g*d+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(op,e,ap)}lookAt(e,t,n){const i=this.elements;return en.subVectors(e,t),en.lengthSq()===0&&(en.z=1),en.normalize(),$n.crossVectors(n,en),$n.lengthSq()===0&&(Math.abs(n.z)===1?en.x+=1e-4:en.z+=1e-4,en.normalize(),$n.crossVectors(n,en)),$n.normalize(),qr.crossVectors(en,$n),i[0]=$n.x,i[4]=qr.x,i[8]=en.x,i[1]=$n.y,i[5]=qr.y,i[9]=en.y,i[2]=$n.z,i[6]=qr.z,i[10]=en.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],h=n[12],u=n[1],d=n[5],f=n[9],p=n[13],_=n[2],g=n[6],m=n[10],x=n[14],C=n[3],S=n[7],w=n[11],R=n[15],I=i[0],B=i[4],E=i[8],O=i[12],z=i[1],J=i[5],le=i[9],Y=i[13],H=i[2],te=i[6],X=i[10],de=i[14],se=i[3],W=i[7],Z=i[11],fe=i[15];return s[0]=o*I+a*z+l*H+h*se,s[4]=o*B+a*J+l*te+h*W,s[8]=o*E+a*le+l*X+h*Z,s[12]=o*O+a*Y+l*de+h*fe,s[1]=u*I+d*z+f*H+p*se,s[5]=u*B+d*J+f*te+p*W,s[9]=u*E+d*le+f*X+p*Z,s[13]=u*O+d*Y+f*de+p*fe,s[2]=_*I+g*z+m*H+x*se,s[6]=_*B+g*J+m*te+x*W,s[10]=_*E+g*le+m*X+x*Z,s[14]=_*O+g*Y+m*de+x*fe,s[3]=C*I+S*z+w*H+R*se,s[7]=C*B+S*J+w*te+R*W,s[11]=C*E+S*le+w*X+R*Z,s[15]=C*O+S*Y+w*de+R*fe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],l=e[9],h=e[13],u=e[2],d=e[6],f=e[10],p=e[14],_=e[3],g=e[7],m=e[11],x=e[15];return _*(+s*l*d-i*h*d-s*a*f+n*h*f+i*a*p-n*l*p)+g*(+t*l*p-t*h*f+s*o*f-i*o*p+i*h*u-s*l*u)+m*(+t*h*d-t*a*p-s*o*d+n*o*p+s*a*u-n*h*u)+x*(-i*a*u-t*l*d+t*a*f+i*o*d-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],h=e[7],u=e[8],d=e[9],f=e[10],p=e[11],_=e[12],g=e[13],m=e[14],x=e[15],C=d*m*h-g*f*h+g*l*p-a*m*p-d*l*x+a*f*x,S=_*f*h-u*m*h-_*l*p+o*m*p+u*l*x-o*f*x,w=u*g*h-_*d*h+_*a*p-o*g*p-u*a*x+o*d*x,R=_*d*l-u*g*l-_*a*f+o*g*f+u*a*m-o*d*m,I=t*C+n*S+i*w+s*R;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const B=1/I;return e[0]=C*B,e[1]=(g*f*s-d*m*s-g*i*p+n*m*p+d*i*x-n*f*x)*B,e[2]=(a*m*s-g*l*s+g*i*h-n*m*h-a*i*x+n*l*x)*B,e[3]=(d*l*s-a*f*s-d*i*h+n*f*h+a*i*p-n*l*p)*B,e[4]=S*B,e[5]=(u*m*s-_*f*s+_*i*p-t*m*p-u*i*x+t*f*x)*B,e[6]=(_*l*s-o*m*s-_*i*h+t*m*h+o*i*x-t*l*x)*B,e[7]=(o*f*s-u*l*s+u*i*h-t*f*h-o*i*p+t*l*p)*B,e[8]=w*B,e[9]=(_*d*s-u*g*s-_*n*p+t*g*p+u*n*x-t*d*x)*B,e[10]=(o*g*s-_*a*s+_*n*h-t*g*h-o*n*x+t*a*x)*B,e[11]=(u*a*s-o*d*s-u*n*h+t*d*h+o*n*p-t*a*p)*B,e[12]=R*B,e[13]=(u*g*i-_*d*i+_*n*f-t*g*f-u*n*m+t*d*m)*B,e[14]=(_*a*i-o*g*i-_*n*l+t*g*l+o*n*m-t*a*m)*B,e[15]=(o*d*i-u*a*i+u*n*l-t*d*l-o*n*f+t*a*f)*B,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,h=s*o,u=s*a;return this.set(h*o+n,h*a-i*l,h*l+i*a,0,h*a+i*l,u*a+n,u*l-i*o,0,h*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,h=s+s,u=o+o,d=a+a,f=s*h,p=s*u,_=s*d,g=o*u,m=o*d,x=a*d,C=l*h,S=l*u,w=l*d,R=n.x,I=n.y,B=n.z;return i[0]=(1-(g+x))*R,i[1]=(p+w)*R,i[2]=(_-S)*R,i[3]=0,i[4]=(p-w)*I,i[5]=(1-(f+x))*I,i[6]=(m+C)*I,i[7]=0,i[8]=(_+S)*B,i[9]=(m-C)*B,i[10]=(1-(f+g))*B,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=rs.set(i[0],i[1],i[2]).length();const o=rs.set(i[4],i[5],i[6]).length(),a=rs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],_n.copy(this);const h=1/s,u=1/o,d=1/a;return _n.elements[0]*=h,_n.elements[1]*=h,_n.elements[2]*=h,_n.elements[4]*=u,_n.elements[5]*=u,_n.elements[6]*=u,_n.elements[8]*=d,_n.elements[9]*=d,_n.elements[10]*=d,t.setFromRotationMatrix(_n),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){const a=this.elements,l=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i),f=-(o+s)/(o-s),p=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=h,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,l=1/(t-e),h=1/(n-i),u=1/(o-s),d=(t+e)*l,f=(n+i)*h,p=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*h,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const rs=new N,_n=new Xe,op=new N(0,0,0),ap=new N(1,1,1),$n=new N,qr=new N,en=new N,mc=new Xe,gc=new Jt;class Rs{constructor(e=0,t=0,n=0,i=Rs.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],l=i[1],h=i[5],u=i[9],d=i[2],f=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(Et(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Et(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(Et(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Et(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(Et(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-Et(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,h),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return mc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(mc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return gc.setFromEuler(this),this.setFromQuaternion(gc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Rs.DefaultOrder="XYZ";Rs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Wo{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let lp=0;const _c=new N,os=new Jt,Dn=new Xe,Yr=new N,Ws=new N,cp=new N,hp=new Jt,vc=new N(1,0,0),xc=new N(0,1,0),yc=new N(0,0,1),up={type:"added"},Mc={type:"removed"};class rt extends Vn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:lp++}),this.uuid=rn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=rt.DefaultUp.clone();const e=new N,t=new Rs,n=new Jt,i=new N(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Xe},normalMatrix:{value:new Zt}}),this.matrix=new Xe,this.matrixWorld=new Xe,this.matrixAutoUpdate=rt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=rt.DefaultMatrixWorldAutoUpdate,this.layers=new Wo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return os.setFromAxisAngle(e,t),this.quaternion.multiply(os),this}rotateOnWorldAxis(e,t){return os.setFromAxisAngle(e,t),this.quaternion.premultiply(os),this}rotateX(e){return this.rotateOnAxis(vc,e)}rotateY(e){return this.rotateOnAxis(xc,e)}rotateZ(e){return this.rotateOnAxis(yc,e)}translateOnAxis(e,t){return _c.copy(e).applyQuaternion(this.quaternion),this.position.add(_c.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(vc,e)}translateY(e){return this.translateOnAxis(xc,e)}translateZ(e){return this.translateOnAxis(yc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Dn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Yr.copy(e):Yr.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ws.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Dn.lookAt(Ws,Yr,this.up):Dn.lookAt(Yr,Ws,this.up),this.quaternion.setFromRotationMatrix(Dn),i&&(Dn.extractRotation(i.matrixWorld),os.setFromRotationMatrix(Dn),this.quaternion.premultiply(os.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(up)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Mc)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Mc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Dn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Dn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Dn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ws,e,cp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ws,hp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const a=i[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let h=0,u=l.length;h<u;h++){const d=l[h];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,h=this.material.length;l<h;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),h=o(e.textures),u=o(e.images),d=o(e.shapes),f=o(e.skeletons),p=o(e.animations),_=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),h.length>0&&(n.textures=h),u.length>0&&(n.images=u),d.length>0&&(n.shapes=d),f.length>0&&(n.skeletons=f),p.length>0&&(n.animations=p),_.length>0&&(n.nodes=_)}return n.object=i,n;function o(a){const l=[];for(const h in a){const u=a[h];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}rt.DefaultUp=new N(0,1,0);rt.DefaultMatrixAutoUpdate=!0;rt.DefaultMatrixWorldAutoUpdate=!0;const vn=new N,On=new N,xa=new N,Nn=new N,as=new N,ls=new N,bc=new N,ya=new N,Ma=new N,ba=new N;class dn{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),vn.subVectors(e,t),i.cross(vn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){vn.subVectors(i,t),On.subVectors(n,t),xa.subVectors(e,t);const o=vn.dot(vn),a=vn.dot(On),l=vn.dot(xa),h=On.dot(On),u=On.dot(xa),d=o*h-a*a;if(d===0)return s.set(-2,-1,-1);const f=1/d,p=(h*l-a*u)*f,_=(o*u-a*l)*f;return s.set(1-p-_,_,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Nn),Nn.x>=0&&Nn.y>=0&&Nn.x+Nn.y<=1}static getUV(e,t,n,i,s,o,a,l){return this.getBarycoord(e,t,n,i,Nn),l.set(0,0),l.addScaledVector(s,Nn.x),l.addScaledVector(o,Nn.y),l.addScaledVector(a,Nn.z),l}static isFrontFacing(e,t,n,i){return vn.subVectors(n,t),On.subVectors(e,t),vn.cross(On).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return vn.subVectors(this.c,this.b),On.subVectors(this.a,this.b),vn.cross(On).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return dn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return dn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return dn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return dn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return dn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;as.subVectors(i,n),ls.subVectors(s,n),ya.subVectors(e,n);const l=as.dot(ya),h=ls.dot(ya);if(l<=0&&h<=0)return t.copy(n);Ma.subVectors(e,i);const u=as.dot(Ma),d=ls.dot(Ma);if(u>=0&&d<=u)return t.copy(i);const f=l*d-u*h;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(as,o);ba.subVectors(e,s);const p=as.dot(ba),_=ls.dot(ba);if(_>=0&&p<=_)return t.copy(s);const g=p*h-l*_;if(g<=0&&h>=0&&_<=0)return a=h/(h-_),t.copy(n).addScaledVector(ls,a);const m=u*_-p*d;if(m<=0&&d-u>=0&&p-_>=0)return bc.subVectors(s,i),a=(d-u)/(d-u+(p-_)),t.copy(i).addScaledVector(bc,a);const x=1/(m+g+f);return o=g*x,a=f*x,t.copy(n).addScaledVector(as,o).addScaledVector(ls,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let dp=0;class Gt extends Vn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:dp++}),this.uuid=rn(),this.name="",this.type="Material",this.blending=Fi,this.side=Hi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Rl,this.blendDst=Ll,this.blendEquation=Li,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=No,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Lu,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Io,this.stencilZFail=Io,this.stencilZPass=Io,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Fi&&(n.blending=this.blending),this.side!==Hi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class di extends Gt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const At=new N,Zr=new ae;class gt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=lr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Zr.fromBufferAttribute(this,t),Zr.applyMatrix3(e),this.setXY(t,Zr.x,Zr.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)At.fromBufferAttribute(this,t),At.applyMatrix3(e),this.setXYZ(t,At.x,At.y,At.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)At.fromBufferAttribute(this,t),At.applyMatrix4(e),this.setXYZ(t,At.x,At.y,At.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)At.fromBufferAttribute(this,t),At.applyNormalMatrix(e),this.setXYZ(t,At.x,At.y,At.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)At.fromBufferAttribute(this,t),At.transformDirection(e),this.setXYZ(t,At.x,At.y,At.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=kn(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=kn(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=kn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=kn(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==lr&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class fp extends gt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class pp extends gt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class mp extends gt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class gp extends gt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Fl extends gt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class _p extends gt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Ul extends gt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class vp extends gt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class Ce extends gt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class xp extends gt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let yp=0;const cn=new Xe,wa=new rt,cs=new N,tn=new Yi,Xs=new Yi,Nt=new N;class $e extends Vn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:yp++}),this.uuid=rn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Iu(e)?Ul:Fl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Zt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return cn.makeRotationFromQuaternion(e),this.applyMatrix4(cn),this}rotateX(e){return cn.makeRotationX(e),this.applyMatrix4(cn),this}rotateY(e){return cn.makeRotationY(e),this.applyMatrix4(cn),this}rotateZ(e){return cn.makeRotationZ(e),this.applyMatrix4(cn),this}translate(e,t,n){return cn.makeTranslation(e,t,n),this.applyMatrix4(cn),this}scale(e,t,n){return cn.makeScale(e,t,n),this.applyMatrix4(cn),this}lookAt(e){return wa.lookAt(e),wa.updateMatrix(),this.applyMatrix4(wa.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(cs).negate(),this.translate(cs.x,cs.y,cs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ce(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Yi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];tn.setFromBufferAttribute(s),this.morphTargetsRelative?(Nt.addVectors(this.boundingBox.min,tn.min),this.boundingBox.expandByPoint(Nt),Nt.addVectors(this.boundingBox.max,tn.max),this.boundingBox.expandByPoint(Nt)):(this.boundingBox.expandByPoint(tn.min),this.boundingBox.expandByPoint(tn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Zi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(tn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Xs.setFromBufferAttribute(a),this.morphTargetsRelative?(Nt.addVectors(tn.min,Xs.min),tn.expandByPoint(Nt),Nt.addVectors(tn.max,Xs.max),tn.expandByPoint(Nt)):(tn.expandByPoint(Xs.min),tn.expandByPoint(Xs.max))}tn.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)Nt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Nt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let h=0,u=a.count;h<u;h++)Nt.fromBufferAttribute(a,h),l&&(cs.fromBufferAttribute(e,h),Nt.add(cs)),i=Math.max(i,n.distanceToSquared(Nt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new gt(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,h=[],u=[];for(let z=0;z<a;z++)h[z]=new N,u[z]=new N;const d=new N,f=new N,p=new N,_=new ae,g=new ae,m=new ae,x=new N,C=new N;function S(z,J,le){d.fromArray(i,z*3),f.fromArray(i,J*3),p.fromArray(i,le*3),_.fromArray(o,z*2),g.fromArray(o,J*2),m.fromArray(o,le*2),f.sub(d),p.sub(d),g.sub(_),m.sub(_);const Y=1/(g.x*m.y-m.x*g.y);!isFinite(Y)||(x.copy(f).multiplyScalar(m.y).addScaledVector(p,-g.y).multiplyScalar(Y),C.copy(p).multiplyScalar(g.x).addScaledVector(f,-m.x).multiplyScalar(Y),h[z].add(x),h[J].add(x),h[le].add(x),u[z].add(C),u[J].add(C),u[le].add(C))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let z=0,J=w.length;z<J;++z){const le=w[z],Y=le.start,H=le.count;for(let te=Y,X=Y+H;te<X;te+=3)S(n[te+0],n[te+1],n[te+2])}const R=new N,I=new N,B=new N,E=new N;function O(z){B.fromArray(s,z*3),E.copy(B);const J=h[z];R.copy(J),R.sub(B.multiplyScalar(B.dot(J))).normalize(),I.crossVectors(E,J);const Y=I.dot(u[z])<0?-1:1;l[z*4]=R.x,l[z*4+1]=R.y,l[z*4+2]=R.z,l[z*4+3]=Y}for(let z=0,J=w.length;z<J;++z){const le=w[z],Y=le.start,H=le.count;for(let te=Y,X=Y+H;te<X;te+=3)O(n[te+0]),O(n[te+1]),O(n[te+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new gt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,p=n.count;f<p;f++)n.setXYZ(f,0,0,0);const i=new N,s=new N,o=new N,a=new N,l=new N,h=new N,u=new N,d=new N;if(e)for(let f=0,p=e.count;f<p;f+=3){const _=e.getX(f+0),g=e.getX(f+1),m=e.getX(f+2);i.fromBufferAttribute(t,_),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,m),u.subVectors(o,s),d.subVectors(i,s),u.cross(d),a.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),h.fromBufferAttribute(n,m),a.add(u),l.add(u),h.add(u),n.setXYZ(_,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,h.x,h.y,h.z)}else for(let f=0,p=t.count;f<p;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),d.subVectors(i,s),u.cross(d),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Nt.fromBufferAttribute(e,t),Nt.normalize(),e.setXYZ(t,Nt.x,Nt.y,Nt.z)}toNonIndexed(){function e(a,l){const h=a.array,u=a.itemSize,d=a.normalized,f=new h.constructor(l.length*u);let p=0,_=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?p=l[g]*a.data.stride+a.offset:p=l[g]*u;for(let x=0;x<u;x++)f[_++]=h[p++]}return new gt(f,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new $e,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],h=e(l,n);t.setAttribute(a,h)}const s=this.morphAttributes;for(const a in s){const l=[],h=s[a];for(let u=0,d=h.length;u<d;u++){const f=h[u],p=e(f,n);l.push(p)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const h=o[a];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const h in l)l[h]!==void 0&&(e[h]=l[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const h=n[l];e.data.attributes[l]=h.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const h=this.morphAttributes[l],u=[];for(let d=0,f=h.length;d<f;d++){const p=h[d];u.push(p.toJSON(e.data))}u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const u=i[h];this.setAttribute(h,u.clone(t))}const s=e.morphAttributes;for(const h in s){const u=[],d=s[h];for(let f=0,p=d.length;f<p;f++)u.push(d[f].clone(t));this.morphAttributes[h]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,u=o.length;h<u;h++){const d=o[h];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const wc=new Xe,hs=new Mr,Sa=new Zi,jn=new N,Qn=new N,ei=new N,Ea=new N,Ta=new N,Aa=new N,Jr=new N,Kr=new N,$r=new N,jr=new ae,Qr=new ae,eo=new ae,Ca=new N,to=new N;class Bt extends rt{constructor(e=new $e,t=new di){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Sa.copy(n.boundingSphere),Sa.applyMatrix4(s),e.ray.intersectsSphere(Sa)===!1)||(wc.copy(s).invert(),hs.copy(e.ray).applyMatrix4(wc),n.boundingBox!==null&&hs.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,h=n.morphAttributes.position,u=n.morphTargetsRelative,d=n.attributes.uv,f=n.attributes.uv2,p=n.groups,_=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=p.length;g<m;g++){const x=p[g],C=i[x.materialIndex],S=Math.max(x.start,_.start),w=Math.min(a.count,Math.min(x.start+x.count,_.start+_.count));for(let R=S,I=w;R<I;R+=3){const B=a.getX(R),E=a.getX(R+1),O=a.getX(R+2);o=no(this,C,e,hs,l,h,u,d,f,B,E,O),o&&(o.faceIndex=Math.floor(R/3),o.face.materialIndex=x.materialIndex,t.push(o))}}else{const g=Math.max(0,_.start),m=Math.min(a.count,_.start+_.count);for(let x=g,C=m;x<C;x+=3){const S=a.getX(x),w=a.getX(x+1),R=a.getX(x+2);o=no(this,i,e,hs,l,h,u,d,f,S,w,R),o&&(o.faceIndex=Math.floor(x/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=p.length;g<m;g++){const x=p[g],C=i[x.materialIndex],S=Math.max(x.start,_.start),w=Math.min(l.count,Math.min(x.start+x.count,_.start+_.count));for(let R=S,I=w;R<I;R+=3){const B=R,E=R+1,O=R+2;o=no(this,C,e,hs,l,h,u,d,f,B,E,O),o&&(o.faceIndex=Math.floor(R/3),o.face.materialIndex=x.materialIndex,t.push(o))}}else{const g=Math.max(0,_.start),m=Math.min(l.count,_.start+_.count);for(let x=g,C=m;x<C;x+=3){const S=x,w=x+1,R=x+2;o=no(this,i,e,hs,l,h,u,d,f,S,w,R),o&&(o.faceIndex=Math.floor(x/3),t.push(o))}}}}function Mp(r,e,t,n,i,s,o,a){let l;if(e.side===sn?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,e.side!==Bn,a),l===null)return null;to.copy(a),to.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(to);return h<t.near||h>t.far?null:{distance:h,point:to.clone(),object:r}}function no(r,e,t,n,i,s,o,a,l,h,u,d){jn.fromBufferAttribute(i,h),Qn.fromBufferAttribute(i,u),ei.fromBufferAttribute(i,d);const f=r.morphTargetInfluences;if(s&&f){Jr.set(0,0,0),Kr.set(0,0,0),$r.set(0,0,0);for(let _=0,g=s.length;_<g;_++){const m=f[_],x=s[_];m!==0&&(Ea.fromBufferAttribute(x,h),Ta.fromBufferAttribute(x,u),Aa.fromBufferAttribute(x,d),o?(Jr.addScaledVector(Ea,m),Kr.addScaledVector(Ta,m),$r.addScaledVector(Aa,m)):(Jr.addScaledVector(Ea.sub(jn),m),Kr.addScaledVector(Ta.sub(Qn),m),$r.addScaledVector(Aa.sub(ei),m)))}jn.add(Jr),Qn.add(Kr),ei.add($r)}r.isSkinnedMesh&&(r.boneTransform(h,jn),r.boneTransform(u,Qn),r.boneTransform(d,ei));const p=Mp(r,e,t,n,jn,Qn,ei,Ca);if(p){a&&(jr.fromBufferAttribute(a,h),Qr.fromBufferAttribute(a,u),eo.fromBufferAttribute(a,d),p.uv=dn.getUV(Ca,jn,Qn,ei,jr,Qr,eo,new ae)),l&&(jr.fromBufferAttribute(l,h),Qr.fromBufferAttribute(l,u),eo.fromBufferAttribute(l,d),p.uv2=dn.getUV(Ca,jn,Qn,ei,jr,Qr,eo,new ae));const _={a:h,b:u,c:d,normal:new N,materialIndex:0};dn.getNormal(jn,Qn,ei,_.normal),p.face=_}return p}class fi extends $e{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],h=[],u=[],d=[];let f=0,p=0;_("z","y","x",-1,-1,n,t,e,o,s,0),_("z","y","x",1,-1,n,t,-e,o,s,1),_("x","z","y",1,1,e,n,t,i,o,2),_("x","z","y",1,-1,e,n,-t,i,o,3),_("x","y","z",1,-1,e,t,n,i,s,4),_("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new Ce(h,3)),this.setAttribute("normal",new Ce(u,3)),this.setAttribute("uv",new Ce(d,2));function _(g,m,x,C,S,w,R,I,B,E,O){const z=w/B,J=R/E,le=w/2,Y=R/2,H=I/2,te=B+1,X=E+1;let de=0,se=0;const W=new N;for(let Z=0;Z<X;Z++){const fe=Z*J-Y;for(let ce=0;ce<te;ce++){const _e=ce*z-le;W[g]=_e*C,W[m]=fe*S,W[x]=H,h.push(W.x,W.y,W.z),W[g]=0,W[m]=0,W[x]=I>0?1:-1,u.push(W.x,W.y,W.z),d.push(ce/B),d.push(1-Z/E),de+=1}}for(let Z=0;Z<E;Z++)for(let fe=0;fe<B;fe++){const ce=f+fe+te*Z,_e=f+fe+te*(Z+1),Ee=f+(fe+1)+te*(Z+1),ze=f+(fe+1)+te*Z;l.push(ce,_e,ze),l.push(_e,Ee,ze),se+=6}a.addGroup(p,se,O),p+=se,f+=de}}static fromJSON(e){return new fi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ts(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Xt(r){const e={};for(let t=0;t<r.length;t++){const n=Ts(r[t]);for(const i in n)e[i]=n[i]}return e}function bp(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}const Ou={clone:Ts,merge:Xt};var wp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Sp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class An extends Gt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=wp,this.fragmentShader=Sp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ts(e.uniforms),this.uniformsGroups=bp(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Xo extends rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Xe,this.projectionMatrix=new Xe,this.projectionMatrixInverse=new Xe}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Ut extends Xo{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=cr*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Bi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return cr*2*Math.atan(Math.tan(Bi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Bi*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/l,t-=o.offsetY*n/h,i*=o.width/l,n*=o.height/h}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const us=90,ds=1;class Nu extends rt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new Ut(us,ds,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new N(1,0,0)),this.add(i);const s=new Ut(us,ds,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new N(-1,0,0)),this.add(s);const o=new Ut(us,ds,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new N(0,1,0)),this.add(o);const a=new Ut(us,ds,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new N(0,-1,0)),this.add(a);const l=new Ut(us,ds,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new N(0,0,1)),this.add(l);const h=new Ut(us,ds,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new N(0,0,-1)),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,h]=this.children,u=e.getRenderTarget(),d=e.toneMapping,f=e.xr.enabled;e.toneMapping=En,e.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=p,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(u),e.toneMapping=d,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class br extends It{constructor(e,t,n,i,s,o,a,l,h,u){e=e!==void 0?e:[],t=t!==void 0?t:oi,super(e,t,n,i,s,o,a,l,h,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Fu extends fn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new br(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:St}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new fi(5,5,5),s=new An({name:"CubemapFromEquirect",uniforms:Ts(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:sn,blending:Hn});s.uniforms.tEquirect.value=t;const o=new Bt(i,s),a=t.minFilter;return t.minFilter===qi&&(t.minFilter=St),new Nu(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const Ra=new N,Ep=new N,Tp=new Zt;class ni{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ra.subVectors(n,t).cross(Ep.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Ra),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Tp.getNormalMatrix(e),i=this.coplanarPoint(Ra).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const fs=new Zi,io=new N;class qo{constructor(e=new ni,t=new ni,n=new ni,i=new ni,s=new ni,o=new ni){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],_=n[10],g=n[11],m=n[12],x=n[13],C=n[14],S=n[15];return t[0].setComponents(a-i,d-l,g-f,S-m).normalize(),t[1].setComponents(a+i,d+l,g+f,S+m).normalize(),t[2].setComponents(a+s,d+h,g+p,S+x).normalize(),t[3].setComponents(a-s,d-h,g-p,S-x).normalize(),t[4].setComponents(a-o,d-u,g-_,S-C).normalize(),t[5].setComponents(a+o,d+u,g+_,S+C).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),fs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(fs)}intersectsSprite(e){return fs.center.set(0,0,0),fs.radius=.7071067811865476,fs.applyMatrix4(e.matrixWorld),this.intersectsSphere(fs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(io.x=i.normal.x>0?e.max.x:e.min.x,io.y=i.normal.y>0?e.max.y:e.min.y,io.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(io)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Uu(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function Ap(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,u){const d=h.array,f=h.usage,p=r.createBuffer();r.bindBuffer(u,p),r.bufferData(u,d,f),h.onUploadCallback();let _;if(d instanceof Float32Array)_=r.FLOAT;else if(d instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)_=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else _=r.UNSIGNED_SHORT;else if(d instanceof Int16Array)_=r.SHORT;else if(d instanceof Uint32Array)_=r.UNSIGNED_INT;else if(d instanceof Int32Array)_=r.INT;else if(d instanceof Int8Array)_=r.BYTE;else if(d instanceof Uint8Array)_=r.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)_=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:_,bytesPerElement:d.BYTES_PER_ELEMENT,version:h.version}}function s(h,u,d){const f=u.array,p=u.updateRange;r.bindBuffer(d,h),p.count===-1?r.bufferSubData(d,0,f):(t?r.bufferSubData(d,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count):r.bufferSubData(d,p.offset*f.BYTES_PER_ELEMENT,f.subarray(p.offset,p.offset+p.count)),p.count=-1)}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function a(h){h.isInterleavedBufferAttribute&&(h=h.data);const u=n.get(h);u&&(r.deleteBuffer(u.buffer),n.delete(h))}function l(h,u){if(h.isGLBufferAttribute){const f=n.get(h);(!f||f.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d===void 0?n.set(h,i(h,u)):d.version<h.version&&(s(d.buffer,h,u),d.version=h.version)}return{get:o,remove:a,update:l}}class Ls extends $e{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),h=a+1,u=l+1,d=e/a,f=t/l,p=[],_=[],g=[],m=[];for(let x=0;x<u;x++){const C=x*f-o;for(let S=0;S<h;S++){const w=S*d-s;_.push(w,-C,0),g.push(0,0,1),m.push(S/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let C=0;C<a;C++){const S=C+h*x,w=C+h*(x+1),R=C+1+h*(x+1),I=C+1+h*x;p.push(S,w,I),p.push(w,R,I)}this.setIndex(p),this.setAttribute("position",new Ce(_,3)),this.setAttribute("normal",new Ce(g,3)),this.setAttribute("uv",new Ce(m,2))}static fromJSON(e){return new Ls(e.width,e.height,e.widthSegments,e.heightSegments)}}var Cp=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Rp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Lp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Pp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Ip=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Dp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Op="vec3 transformed = vec3( position );",Np=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Fp=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
		float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
		float x2 = x * x;
		float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
		return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Up=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,	0.0556434,
		-1.5371385,	1.8760108, -0.2040259,
		-0.4985314,	0.0415560,	1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Bp=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,zp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,kp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Hp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Gp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Vp=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Wp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Xp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,qp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Yp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Zp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Jp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Kp=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,$p=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,jp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Qp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,em="gl_FragColor = linearToOutputTexel( gl_FragColor );",tm=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,nm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,im=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,sm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,rm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,om=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,am=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,lm=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,cm=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,hm=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,um=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,dm=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,fm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,pm=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,mm=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,gm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,_m=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,vm=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,xm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,ym=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Mm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,bm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,wm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(		0, 1,		0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Sm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Em=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Tm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Am=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Cm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Rm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Lm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Pm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Im=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Dm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Om=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Nm=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Fm=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Um=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Bm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,zm=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,km=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Hm=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Gm=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Vm=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Wm=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Xm=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,qm=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Ym=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Zm=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Jm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Km=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,$m=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,jm=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Qm=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,eg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,tg=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ng=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ig=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,sg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,rg=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
							f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
							f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,og=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,ag=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,lg=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,cg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,hg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,ug=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,dg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,fg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,pg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,mg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,gg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(	1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,	1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,	1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,_g=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,vg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,xg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,yg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Mg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,bg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,wg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Sg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Eg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Tg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Ag=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Cg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Rg=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Lg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Pg=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ig=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Dg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Og=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Ng=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Fg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Ug=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Bg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,kg=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Hg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gg=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vg=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Xg=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qg=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Yg=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Zg=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jg=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Kg=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,$g=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jg=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Qg=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,e_=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,t_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,n_=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,i_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,s_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,r_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ke={alphamap_fragment:Cp,alphamap_pars_fragment:Rp,alphatest_fragment:Lp,alphatest_pars_fragment:Pp,aomap_fragment:Ip,aomap_pars_fragment:Dp,begin_vertex:Op,beginnormal_vertex:Np,bsdfs:Fp,iridescence_fragment:Up,bumpmap_pars_fragment:Bp,clipping_planes_fragment:zp,clipping_planes_pars_fragment:kp,clipping_planes_pars_vertex:Hp,clipping_planes_vertex:Gp,color_fragment:Vp,color_pars_fragment:Wp,color_pars_vertex:Xp,color_vertex:qp,common:Yp,cube_uv_reflection_fragment:Zp,defaultnormal_vertex:Jp,displacementmap_pars_vertex:Kp,displacementmap_vertex:$p,emissivemap_fragment:jp,emissivemap_pars_fragment:Qp,encodings_fragment:em,encodings_pars_fragment:tm,envmap_fragment:nm,envmap_common_pars_fragment:im,envmap_pars_fragment:sm,envmap_pars_vertex:rm,envmap_physical_pars_fragment:_m,envmap_vertex:om,fog_vertex:am,fog_pars_vertex:lm,fog_fragment:cm,fog_pars_fragment:hm,gradientmap_pars_fragment:um,lightmap_fragment:dm,lightmap_pars_fragment:fm,lights_lambert_fragment:pm,lights_lambert_pars_fragment:mm,lights_pars_begin:gm,lights_toon_fragment:vm,lights_toon_pars_fragment:xm,lights_phong_fragment:ym,lights_phong_pars_fragment:Mm,lights_physical_fragment:bm,lights_physical_pars_fragment:wm,lights_fragment_begin:Sm,lights_fragment_maps:Em,lights_fragment_end:Tm,logdepthbuf_fragment:Am,logdepthbuf_pars_fragment:Cm,logdepthbuf_pars_vertex:Rm,logdepthbuf_vertex:Lm,map_fragment:Pm,map_pars_fragment:Im,map_particle_fragment:Dm,map_particle_pars_fragment:Om,metalnessmap_fragment:Nm,metalnessmap_pars_fragment:Fm,morphcolor_vertex:Um,morphnormal_vertex:Bm,morphtarget_pars_vertex:zm,morphtarget_vertex:km,normal_fragment_begin:Hm,normal_fragment_maps:Gm,normal_pars_fragment:Vm,normal_pars_vertex:Wm,normal_vertex:Xm,normalmap_pars_fragment:qm,clearcoat_normal_fragment_begin:Ym,clearcoat_normal_fragment_maps:Zm,clearcoat_pars_fragment:Jm,iridescence_pars_fragment:Km,output_fragment:$m,packing:jm,premultiplied_alpha_fragment:Qm,project_vertex:eg,dithering_fragment:tg,dithering_pars_fragment:ng,roughnessmap_fragment:ig,roughnessmap_pars_fragment:sg,shadowmap_pars_fragment:rg,shadowmap_pars_vertex:og,shadowmap_vertex:ag,shadowmask_pars_fragment:lg,skinbase_vertex:cg,skinning_pars_vertex:hg,skinning_vertex:ug,skinnormal_vertex:dg,specularmap_fragment:fg,specularmap_pars_fragment:pg,tonemapping_fragment:mg,tonemapping_pars_fragment:gg,transmission_fragment:_g,transmission_pars_fragment:vg,uv_pars_fragment:xg,uv_pars_vertex:yg,uv_vertex:Mg,uv2_pars_fragment:bg,uv2_pars_vertex:wg,uv2_vertex:Sg,worldpos_vertex:Eg,background_vert:Tg,background_frag:Ag,backgroundCube_vert:Cg,backgroundCube_frag:Rg,cube_vert:Lg,cube_frag:Pg,depth_vert:Ig,depth_frag:Dg,distanceRGBA_vert:Og,distanceRGBA_frag:Ng,equirect_vert:Fg,equirect_frag:Ug,linedashed_vert:Bg,linedashed_frag:zg,meshbasic_vert:kg,meshbasic_frag:Hg,meshlambert_vert:Gg,meshlambert_frag:Vg,meshmatcap_vert:Wg,meshmatcap_frag:Xg,meshnormal_vert:qg,meshnormal_frag:Yg,meshphong_vert:Zg,meshphong_frag:Jg,meshphysical_vert:Kg,meshphysical_frag:$g,meshtoon_vert:jg,meshtoon_frag:Qg,points_vert:e_,points_frag:t_,shadow_vert:n_,shadow_frag:i_,sprite_vert:s_,sprite_frag:r_},ve={common:{diffuse:{value:new Se(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Zt},uv2Transform:{value:new Zt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ae(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Se(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Se(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Zt}},sprite:{diffuse:{value:new Se(16777215)},opacity:{value:1},center:{value:new ae(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Zt}}},xn={basic:{uniforms:Xt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.fog]),vertexShader:Ke.meshbasic_vert,fragmentShader:Ke.meshbasic_frag},lambert:{uniforms:Xt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,ve.lights,{emissive:{value:new Se(0)}}]),vertexShader:Ke.meshlambert_vert,fragmentShader:Ke.meshlambert_frag},phong:{uniforms:Xt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,ve.lights,{emissive:{value:new Se(0)},specular:{value:new Se(1118481)},shininess:{value:30}}]),vertexShader:Ke.meshphong_vert,fragmentShader:Ke.meshphong_frag},standard:{uniforms:Xt([ve.common,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.roughnessmap,ve.metalnessmap,ve.fog,ve.lights,{emissive:{value:new Se(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ke.meshphysical_vert,fragmentShader:Ke.meshphysical_frag},toon:{uniforms:Xt([ve.common,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.gradientmap,ve.fog,ve.lights,{emissive:{value:new Se(0)}}]),vertexShader:Ke.meshtoon_vert,fragmentShader:Ke.meshtoon_frag},matcap:{uniforms:Xt([ve.common,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,{matcap:{value:null}}]),vertexShader:Ke.meshmatcap_vert,fragmentShader:Ke.meshmatcap_frag},points:{uniforms:Xt([ve.points,ve.fog]),vertexShader:Ke.points_vert,fragmentShader:Ke.points_frag},dashed:{uniforms:Xt([ve.common,ve.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ke.linedashed_vert,fragmentShader:Ke.linedashed_frag},depth:{uniforms:Xt([ve.common,ve.displacementmap]),vertexShader:Ke.depth_vert,fragmentShader:Ke.depth_frag},normal:{uniforms:Xt([ve.common,ve.bumpmap,ve.normalmap,ve.displacementmap,{opacity:{value:1}}]),vertexShader:Ke.meshnormal_vert,fragmentShader:Ke.meshnormal_frag},sprite:{uniforms:Xt([ve.sprite,ve.fog]),vertexShader:Ke.sprite_vert,fragmentShader:Ke.sprite_frag},background:{uniforms:{uvTransform:{value:new Zt},t2D:{value:null}},vertexShader:Ke.background_vert,fragmentShader:Ke.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:Ke.backgroundCube_vert,fragmentShader:Ke.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ke.cube_vert,fragmentShader:Ke.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ke.equirect_vert,fragmentShader:Ke.equirect_frag},distanceRGBA:{uniforms:Xt([ve.common,ve.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ke.distanceRGBA_vert,fragmentShader:Ke.distanceRGBA_frag},shadow:{uniforms:Xt([ve.lights,ve.fog,{color:{value:new Se(0)},opacity:{value:1}}]),vertexShader:Ke.shadow_vert,fragmentShader:Ke.shadow_frag}};xn.physical={uniforms:Xt([xn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ae(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Se(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ae},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Se(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Se(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ke.meshphysical_vert,fragmentShader:Ke.meshphysical_frag};function o_(r,e,t,n,i,s,o){const a=new Se(0);let l=s===!0?0:1,h,u,d=null,f=0,p=null;function _(m,x){let C=!1,S=x.isScene===!0?x.background:null;S&&S.isTexture&&(S=(x.backgroundBlurriness>0?t:e).get(S));const w=r.xr,R=w.getSession&&w.getSession();R&&R.environmentBlendMode==="additive"&&(S=null),S===null?g(a,l):S&&S.isColor&&(g(S,1),C=!0),(r.autoClear||C)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),S&&(S.isCubeTexture||S.mapping===Cs)?(u===void 0&&(u=new Bt(new fi(1,1,1),new An({name:"BackgroundCubeMaterial",uniforms:Ts(xn.backgroundCube.uniforms),vertexShader:xn.backgroundCube.vertexShader,fragmentShader:xn.backgroundCube.fragmentShader,side:sn,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(I,B,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=S,u.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,(d!==S||f!==S.version||p!==r.toneMapping)&&(u.material.needsUpdate=!0,d=S,f=S.version,p=r.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new Bt(new Ls(2,2),new An({name:"BackgroundMaterial",uniforms:Ts(xn.background.uniforms),vertexShader:xn.background.vertexShader,fragmentShader:xn.background.fragmentShader,side:Hi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(d!==S||f!==S.version||p!==r.toneMapping)&&(h.material.needsUpdate=!0,d=S,f=S.version,p=r.toneMapping),h.layers.enableAll(),m.unshift(h,h.geometry,h.material,0,0,null))}function g(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(m,x=1){a.set(m),l=x,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:_}}function a_(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=m(null);let h=l,u=!1;function d(H,te,X,de,se){let W=!1;if(o){const Z=g(de,X,te);h!==Z&&(h=Z,p(h.object)),W=x(H,de,X,se),W&&C(H,de,X,se)}else{const Z=te.wireframe===!0;(h.geometry!==de.id||h.program!==X.id||h.wireframe!==Z)&&(h.geometry=de.id,h.program=X.id,h.wireframe=Z,W=!0)}se!==null&&t.update(se,r.ELEMENT_ARRAY_BUFFER),(W||u)&&(u=!1,E(H,te,X,de),se!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(se).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function p(H){return n.isWebGL2?r.bindVertexArray(H):s.bindVertexArrayOES(H)}function _(H){return n.isWebGL2?r.deleteVertexArray(H):s.deleteVertexArrayOES(H)}function g(H,te,X){const de=X.wireframe===!0;let se=a[H.id];se===void 0&&(se={},a[H.id]=se);let W=se[te.id];W===void 0&&(W={},se[te.id]=W);let Z=W[de];return Z===void 0&&(Z=m(f()),W[de]=Z),Z}function m(H){const te=[],X=[],de=[];for(let se=0;se<i;se++)te[se]=0,X[se]=0,de[se]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:te,enabledAttributes:X,attributeDivisors:de,object:H,attributes:{},index:null}}function x(H,te,X,de){const se=h.attributes,W=te.attributes;let Z=0;const fe=X.getAttributes();for(const ce in fe)if(fe[ce].location>=0){const Ee=se[ce];let ze=W[ce];if(ze===void 0&&(ce==="instanceMatrix"&&H.instanceMatrix&&(ze=H.instanceMatrix),ce==="instanceColor"&&H.instanceColor&&(ze=H.instanceColor)),Ee===void 0||Ee.attribute!==ze||ze&&Ee.data!==ze.data)return!0;Z++}return h.attributesNum!==Z||h.index!==de}function C(H,te,X,de){const se={},W=te.attributes;let Z=0;const fe=X.getAttributes();for(const ce in fe)if(fe[ce].location>=0){let Ee=W[ce];Ee===void 0&&(ce==="instanceMatrix"&&H.instanceMatrix&&(Ee=H.instanceMatrix),ce==="instanceColor"&&H.instanceColor&&(Ee=H.instanceColor));const ze={};ze.attribute=Ee,Ee&&Ee.data&&(ze.data=Ee.data),se[ce]=ze,Z++}h.attributes=se,h.attributesNum=Z,h.index=de}function S(){const H=h.newAttributes;for(let te=0,X=H.length;te<X;te++)H[te]=0}function w(H){R(H,0)}function R(H,te){const X=h.newAttributes,de=h.enabledAttributes,se=h.attributeDivisors;X[H]=1,de[H]===0&&(r.enableVertexAttribArray(H),de[H]=1),se[H]!==te&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,te),se[H]=te)}function I(){const H=h.newAttributes,te=h.enabledAttributes;for(let X=0,de=te.length;X<de;X++)te[X]!==H[X]&&(r.disableVertexAttribArray(X),te[X]=0)}function B(H,te,X,de,se,W){n.isWebGL2===!0&&(X===r.INT||X===r.UNSIGNED_INT)?r.vertexAttribIPointer(H,te,X,se,W):r.vertexAttribPointer(H,te,X,de,se,W)}function E(H,te,X,de){if(n.isWebGL2===!1&&(H.isInstancedMesh||de.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const se=de.attributes,W=X.getAttributes(),Z=te.defaultAttributeValues;for(const fe in W){const ce=W[fe];if(ce.location>=0){let _e=se[fe];if(_e===void 0&&(fe==="instanceMatrix"&&H.instanceMatrix&&(_e=H.instanceMatrix),fe==="instanceColor"&&H.instanceColor&&(_e=H.instanceColor)),_e!==void 0){const Ee=_e.normalized,ze=_e.itemSize,G=t.get(_e);if(G===void 0)continue;const Ye=G.buffer,Ne=G.type,He=G.bytesPerElement;if(_e.isInterleavedBufferAttribute){const ye=_e.data,Ze=ye.stride,re=_e.offset;if(ye.isInstancedInterleavedBuffer){for(let ie=0;ie<ce.locationSize;ie++)R(ce.location+ie,ye.meshPerAttribute);H.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let ie=0;ie<ce.locationSize;ie++)w(ce.location+ie);r.bindBuffer(r.ARRAY_BUFFER,Ye);for(let ie=0;ie<ce.locationSize;ie++)B(ce.location+ie,ze/ce.locationSize,Ne,Ee,Ze*He,(re+ze/ce.locationSize*ie)*He)}else{if(_e.isInstancedBufferAttribute){for(let ye=0;ye<ce.locationSize;ye++)R(ce.location+ye,_e.meshPerAttribute);H.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let ye=0;ye<ce.locationSize;ye++)w(ce.location+ye);r.bindBuffer(r.ARRAY_BUFFER,Ye);for(let ye=0;ye<ce.locationSize;ye++)B(ce.location+ye,ze/ce.locationSize,Ne,Ee,ze*He,ze/ce.locationSize*ye*He)}}else if(Z!==void 0){const Ee=Z[fe];if(Ee!==void 0)switch(Ee.length){case 2:r.vertexAttrib2fv(ce.location,Ee);break;case 3:r.vertexAttrib3fv(ce.location,Ee);break;case 4:r.vertexAttrib4fv(ce.location,Ee);break;default:r.vertexAttrib1fv(ce.location,Ee)}}}}I()}function O(){le();for(const H in a){const te=a[H];for(const X in te){const de=te[X];for(const se in de)_(de[se].object),delete de[se];delete te[X]}delete a[H]}}function z(H){if(a[H.id]===void 0)return;const te=a[H.id];for(const X in te){const de=te[X];for(const se in de)_(de[se].object),delete de[se];delete te[X]}delete a[H.id]}function J(H){for(const te in a){const X=a[te];if(X[H.id]===void 0)continue;const de=X[H.id];for(const se in de)_(de[se].object),delete de[se];delete X[H.id]}}function le(){Y(),u=!0,h!==l&&(h=l,p(h.object))}function Y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:le,resetDefaultState:Y,dispose:O,releaseStatesOfGeometry:z,releaseStatesOfProgram:J,initAttributes:S,enableAttribute:w,disableUnusedAttributes:I}}function l_(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function a(h,u){r.drawArrays(s,h,u),t.update(u,s,1)}function l(h,u,d){if(d===0)return;let f,p;if(i)f=r,p="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[p](s,h,u,d),t.update(u,s,d)}this.setMode=o,this.render=a,this.renderInstances=l}function c_(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const B=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(B.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(B){if(B==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";B="mediump"}return B==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const h=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,d=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),m=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),x=r.getParameter(r.MAX_VARYING_VECTORS),C=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),S=f>0,w=o||e.has("OES_texture_float"),R=S&&w,I=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:C,vertexTextures:S,floatFragmentTextures:w,floatVertexTextures:R,maxSamples:I}}function h_(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new ni,a=new Zt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f,p){const _=d.length!==0||f||n!==0||i;return i=f,t=u(d,p,0),n=d.length,_},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,h()},this.setState=function(d,f,p){const _=d.clippingPlanes,g=d.clipIntersection,m=d.clipShadows,x=r.get(d);if(!i||_===null||_.length===0||s&&!m)s?u(null):h();else{const C=s?0:n,S=C*4;let w=x.clippingState||null;l.value=w,w=u(_,f,S,p);for(let R=0;R!==S;++R)w[R]=t[R];x.clippingState=w,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=C}};function h(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(d,f,p,_){const g=d!==null?d.length:0;let m=null;if(g!==0){if(m=l.value,_!==!0||m===null){const x=p+g*4,C=f.matrixWorldInverse;a.getNormalMatrix(C),(m===null||m.length<x)&&(m=new Float32Array(x));for(let S=0,w=p;S!==g;++S,w+=4)o.copy(d[S]).applyMatrix4(C,a),o.normal.toArray(m,w),m[w+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function u_(r){let e=new WeakMap;function t(o,a){return a===tr?o.mapping=oi:a===nr&&(o.mapping=ai),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===tr||a===nr)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const h=new Fu(l.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Yo extends Xo{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ms=4,Sc=[.125,.215,.35,.446,.526,.582],Pi=20,La=new Yo,Ec=new Se;let Pa=null;const Ri=(1+Math.sqrt(5))/2,ps=1/Ri,Tc=[new N(1,1,1),new N(-1,1,1),new N(1,1,-1),new N(-1,1,-1),new N(0,Ri,ps),new N(0,Ri,-ps),new N(ps,0,Ri),new N(-ps,0,Ri),new N(Ri,ps,0),new N(-Ri,ps,0)];class xl{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Pa=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Rc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Cc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Pa),e.scissorTest=!1,so(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===oi||e.mapping===ai?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Pa=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:St,minFilter:St,generateMipmaps:!1,type:Es,format:nn,encoding:ci,depthBuffer:!1},i=Ac(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ac(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=d_(s)),this._blurMaterial=f_(s,e,t)}return i}_compileMaterial(e){const t=new Bt(this._lodPlanes[0],e);this._renderer.compile(t,La)}_sceneToCubeUV(e,t,n,i){const a=new Ut(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(Ec),u.toneMapping=En,u.autoClear=!1;const p=new di({name:"PMREM.Background",side:sn,depthWrite:!1,depthTest:!1}),_=new Bt(new fi,p);let g=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,g=!0):(p.color.copy(Ec),g=!0);for(let x=0;x<6;x++){const C=x%3;C===0?(a.up.set(0,l[x],0),a.lookAt(h[x],0,0)):C===1?(a.up.set(0,0,l[x]),a.lookAt(0,h[x],0)):(a.up.set(0,l[x],0),a.lookAt(0,0,h[x]));const S=this._cubeSize;so(i,C*S,x>2?S:0,S,S),u.setRenderTarget(i),g&&u.render(_,a),u.render(e,a)}_.geometry.dispose(),_.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===oi||e.mapping===ai;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Rc()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Cc());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new Bt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;so(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,La)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Tc[(i-1)%Tc.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const l=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new Bt(this._lodPlanes[i],h),f=h.uniforms,p=this._sizeLods[n]-1,_=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Pi-1),g=s/_,m=isFinite(s)?1+Math.floor(u*g):Pi;m>Pi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Pi}`);const x=[];let C=0;for(let B=0;B<Pi;++B){const E=B/g,O=Math.exp(-E*E/2);x.push(O),B===0?C+=O:B<m&&(C+=2*O)}for(let B=0;B<x.length;B++)x[B]=x[B]/C;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=x,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:S}=this;f.dTheta.value=_,f.mipInt.value=S-n;const w=this._sizeLods[i],R=3*w*(i>S-Ms?i-S+Ms:0),I=4*(this._cubeSize-w);so(t,R,I,3*w,2*w),l.setRenderTarget(t),l.render(d,La)}}function d_(r){const e=[],t=[],n=[];let i=r;const s=r-Ms+1+Sc.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>r-Ms?l=Sc[o-r+Ms-1]:o===0&&(l=0),n.push(l);const h=1/(a-2),u=-h,d=1+h,f=[u,u,d,u,d,d,u,u,d,d,u,d],p=6,_=6,g=3,m=2,x=1,C=new Float32Array(g*_*p),S=new Float32Array(m*_*p),w=new Float32Array(x*_*p);for(let I=0;I<p;I++){const B=I%3*2/3-1,E=I>2?0:-1,O=[B,E,0,B+2/3,E,0,B+2/3,E+1,0,B,E,0,B+2/3,E+1,0,B,E+1,0];C.set(O,g*_*I),S.set(f,m*_*I);const z=[I,I,I,I,I,I];w.set(z,x*_*I)}const R=new $e;R.setAttribute("position",new gt(C,g)),R.setAttribute("uv",new gt(S,m)),R.setAttribute("faceIndex",new gt(w,x)),e.push(R),i>Ms&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Ac(r,e,t){const n=new fn(r,e,t);return n.texture.mapping=Cs,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function so(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function f_(r,e,t){const n=new Float32Array(Pi),i=new N(0,1,0);return new An({name:"SphericalGaussianBlur",defines:{n:Pi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Hn,depthTest:!1,depthWrite:!1})}function Cc(){return new An({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Hn,depthTest:!1,depthWrite:!1})}function Rc(){return new An({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Hn,depthTest:!1,depthWrite:!1})}function Bl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function p_(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,h=l===tr||l===nr,u=l===oi||l===ai;if(h||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let d=e.get(a);return t===null&&(t=new xl(r)),d=h?t.fromEquirectangular(a,d):t.fromCubemap(a,d),e.set(a,d),d.texture}else{if(e.has(a))return e.get(a).texture;{const d=a.image;if(h&&d&&d.height>0||u&&d&&i(d)){t===null&&(t=new xl(r));const f=h?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function i(a){let l=0;const h=6;for(let u=0;u<h;u++)a[u]!==void 0&&l++;return l===h}function s(a){const l=a.target;l.removeEventListener("dispose",s);const h=e.get(l);h!==void 0&&(e.delete(l),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function m_(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function g_(r,e,t,n){const i={},s=new WeakMap;function o(d){const f=d.target;f.index!==null&&e.remove(f.index);for(const _ in f.attributes)e.remove(f.attributes[_]);f.removeEventListener("dispose",o),delete i[f.id];const p=s.get(f);p&&(e.remove(p),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(d,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function l(d){const f=d.attributes;for(const _ in f)e.update(f[_],r.ARRAY_BUFFER);const p=d.morphAttributes;for(const _ in p){const g=p[_];for(let m=0,x=g.length;m<x;m++)e.update(g[m],r.ARRAY_BUFFER)}}function h(d){const f=[],p=d.index,_=d.attributes.position;let g=0;if(p!==null){const C=p.array;g=p.version;for(let S=0,w=C.length;S<w;S+=3){const R=C[S+0],I=C[S+1],B=C[S+2];f.push(R,I,I,B,B,R)}}else{const C=_.array;g=_.version;for(let S=0,w=C.length/3-1;S<w;S+=3){const R=S+0,I=S+1,B=S+2;f.push(R,I,I,B,B,R)}}const m=new(Iu(f)?Ul:Fl)(f,1);m.version=g;const x=s.get(d);x&&e.remove(x),s.set(d,m)}function u(d){const f=s.get(d);if(f){const p=d.index;p!==null&&f.version<p.version&&h(d)}else h(d);return s.get(d)}return{get:a,update:l,getWireframeAttribute:u}}function __(r,e,t,n){const i=n.isWebGL2;let s;function o(f){s=f}let a,l;function h(f){a=f.type,l=f.bytesPerElement}function u(f,p){r.drawElements(s,p,a,f*l),t.update(p,s,1)}function d(f,p,_){if(_===0)return;let g,m;if(i)g=r,m="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](s,p,a,f*l,_),t.update(p,s,_)}this.setMode=o,this.setIndex=h,this.render=u,this.renderInstances=d}function v_(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function x_(r,e){return r[0]-e[0]}function y_(r,e){return Math.abs(e[1])-Math.abs(r[1])}function M_(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new ht,a=[];for(let h=0;h<8;h++)a[h]=[h,0];function l(h,u,d,f){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=_!==void 0?_.length:0;let m=s.get(u);if(m===void 0||m.count!==g){let te=function(){Y.dispose(),s.delete(u),u.removeEventListener("dispose",te)};m!==void 0&&m.texture.dispose();const S=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,R=u.morphAttributes.color!==void 0,I=u.morphAttributes.position||[],B=u.morphAttributes.normal||[],E=u.morphAttributes.color||[];let O=0;S===!0&&(O=1),w===!0&&(O=2),R===!0&&(O=3);let z=u.attributes.position.count*O,J=1;z>e.maxTextureSize&&(J=Math.ceil(z/e.maxTextureSize),z=e.maxTextureSize);const le=new Float32Array(z*J*4*g),Y=new yr(le,z,J,g);Y.type=zn,Y.needsUpdate=!0;const H=O*4;for(let X=0;X<g;X++){const de=I[X],se=B[X],W=E[X],Z=z*J*4*X;for(let fe=0;fe<de.count;fe++){const ce=fe*H;S===!0&&(o.fromBufferAttribute(de,fe),le[Z+ce+0]=o.x,le[Z+ce+1]=o.y,le[Z+ce+2]=o.z,le[Z+ce+3]=0),w===!0&&(o.fromBufferAttribute(se,fe),le[Z+ce+4]=o.x,le[Z+ce+5]=o.y,le[Z+ce+6]=o.z,le[Z+ce+7]=0),R===!0&&(o.fromBufferAttribute(W,fe),le[Z+ce+8]=o.x,le[Z+ce+9]=o.y,le[Z+ce+10]=o.z,le[Z+ce+11]=W.itemSize===4?o.w:1)}}m={count:g,texture:Y,size:new ae(z,J)},s.set(u,m),u.addEventListener("dispose",te)}let x=0;for(let S=0;S<p.length;S++)x+=p[S];const C=u.morphTargetsRelative?1:1-x;f.getUniforms().setValue(r,"morphTargetBaseInfluence",C),f.getUniforms().setValue(r,"morphTargetInfluences",p),f.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),f.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}else{const _=p===void 0?0:p.length;let g=n[u.id];if(g===void 0||g.length!==_){g=[];for(let w=0;w<_;w++)g[w]=[w,0];n[u.id]=g}for(let w=0;w<_;w++){const R=g[w];R[0]=w,R[1]=p[w]}g.sort(y_);for(let w=0;w<8;w++)w<_&&g[w][1]?(a[w][0]=g[w][0],a[w][1]=g[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(x_);const m=u.morphAttributes.position,x=u.morphAttributes.normal;let C=0;for(let w=0;w<8;w++){const R=a[w],I=R[0],B=R[1];I!==Number.MAX_SAFE_INTEGER&&B?(m&&u.getAttribute("morphTarget"+w)!==m[I]&&u.setAttribute("morphTarget"+w,m[I]),x&&u.getAttribute("morphNormal"+w)!==x[I]&&u.setAttribute("morphNormal"+w,x[I]),i[w]=B,C+=B):(m&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),x&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),i[w]=0)}const S=u.morphTargetsRelative?1:1-C;f.getUniforms().setValue(r,"morphTargetBaseInfluence",S),f.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function b_(r,e,t,n){let i=new WeakMap;function s(l){const h=n.render.frame,u=l.geometry,d=e.get(l,u);return i.get(d)!==h&&(e.update(d),i.set(d,h)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER)),d}function o(){i=new WeakMap}function a(l){const h=l.target;h.removeEventListener("dispose",a),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const Bu=new It,zu=new yr,ku=new Vo,Hu=new br,Lc=[],Pc=[],Ic=new Float32Array(16),Dc=new Float32Array(9),Oc=new Float32Array(4);function Ps(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Lc[i];if(s===void 0&&(s=new Float32Array(i),Lc[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Dt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Ot(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Zo(r,e){let t=Pc[e];t===void 0&&(t=new Int32Array(e),Pc[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function w_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function S_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Dt(t,e))return;r.uniform2fv(this.addr,e),Ot(t,e)}}function E_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Dt(t,e))return;r.uniform3fv(this.addr,e),Ot(t,e)}}function T_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Dt(t,e))return;r.uniform4fv(this.addr,e),Ot(t,e)}}function A_(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Dt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Ot(t,e)}else{if(Dt(t,n))return;Oc.set(n),r.uniformMatrix2fv(this.addr,!1,Oc),Ot(t,n)}}function C_(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Dt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Ot(t,e)}else{if(Dt(t,n))return;Dc.set(n),r.uniformMatrix3fv(this.addr,!1,Dc),Ot(t,n)}}function R_(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Dt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Ot(t,e)}else{if(Dt(t,n))return;Ic.set(n),r.uniformMatrix4fv(this.addr,!1,Ic),Ot(t,n)}}function L_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function P_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Dt(t,e))return;r.uniform2iv(this.addr,e),Ot(t,e)}}function I_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Dt(t,e))return;r.uniform3iv(this.addr,e),Ot(t,e)}}function D_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Dt(t,e))return;r.uniform4iv(this.addr,e),Ot(t,e)}}function O_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function N_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Dt(t,e))return;r.uniform2uiv(this.addr,e),Ot(t,e)}}function F_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Dt(t,e))return;r.uniform3uiv(this.addr,e),Ot(t,e)}}function U_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Dt(t,e))return;r.uniform4uiv(this.addr,e),Ot(t,e)}}function B_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Bu,i)}function z_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||ku,i)}function k_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Hu,i)}function H_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||zu,i)}function G_(r){switch(r){case 5126:return w_;case 35664:return S_;case 35665:return E_;case 35666:return T_;case 35674:return A_;case 35675:return C_;case 35676:return R_;case 5124:case 35670:return L_;case 35667:case 35671:return P_;case 35668:case 35672:return I_;case 35669:case 35673:return D_;case 5125:return O_;case 36294:return N_;case 36295:return F_;case 36296:return U_;case 35678:case 36198:case 36298:case 36306:case 35682:return B_;case 35679:case 36299:case 36307:return z_;case 35680:case 36300:case 36308:case 36293:return k_;case 36289:case 36303:case 36311:case 36292:return H_}}function V_(r,e){r.uniform1fv(this.addr,e)}function W_(r,e){const t=Ps(e,this.size,2);r.uniform2fv(this.addr,t)}function X_(r,e){const t=Ps(e,this.size,3);r.uniform3fv(this.addr,t)}function q_(r,e){const t=Ps(e,this.size,4);r.uniform4fv(this.addr,t)}function Y_(r,e){const t=Ps(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function Z_(r,e){const t=Ps(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function J_(r,e){const t=Ps(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function K_(r,e){r.uniform1iv(this.addr,e)}function $_(r,e){r.uniform2iv(this.addr,e)}function j_(r,e){r.uniform3iv(this.addr,e)}function Q_(r,e){r.uniform4iv(this.addr,e)}function e0(r,e){r.uniform1uiv(this.addr,e)}function t0(r,e){r.uniform2uiv(this.addr,e)}function n0(r,e){r.uniform3uiv(this.addr,e)}function i0(r,e){r.uniform4uiv(this.addr,e)}function s0(r,e,t){const n=this.cache,i=e.length,s=Zo(t,i);Dt(n,s)||(r.uniform1iv(this.addr,s),Ot(n,s));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||Bu,s[o])}function r0(r,e,t){const n=this.cache,i=e.length,s=Zo(t,i);Dt(n,s)||(r.uniform1iv(this.addr,s),Ot(n,s));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||ku,s[o])}function o0(r,e,t){const n=this.cache,i=e.length,s=Zo(t,i);Dt(n,s)||(r.uniform1iv(this.addr,s),Ot(n,s));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Hu,s[o])}function a0(r,e,t){const n=this.cache,i=e.length,s=Zo(t,i);Dt(n,s)||(r.uniform1iv(this.addr,s),Ot(n,s));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||zu,s[o])}function l0(r){switch(r){case 5126:return V_;case 35664:return W_;case 35665:return X_;case 35666:return q_;case 35674:return Y_;case 35675:return Z_;case 35676:return J_;case 5124:case 35670:return K_;case 35667:case 35671:return $_;case 35668:case 35672:return j_;case 35669:case 35673:return Q_;case 5125:return e0;case 36294:return t0;case 36295:return n0;case 36296:return i0;case 35678:case 36198:case 36298:case 36306:case 35682:return s0;case 35679:case 36299:case 36307:return r0;case 35680:case 36300:case 36308:case 36293:return o0;case 36289:case 36303:case 36311:case 36292:return a0}}class c0{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=G_(t.type)}}class h0{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=l0(t.type)}}class u0{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(e,t[a.id],n)}}}const Ia=/(\w+)(\])?(\[|\.)?/g;function Nc(r,e){r.seq.push(e),r.map[e.id]=e}function d0(r,e,t){const n=r.name,i=n.length;for(Ia.lastIndex=0;;){const s=Ia.exec(n),o=Ia.lastIndex;let a=s[1];const l=s[2]==="]",h=s[3];if(l&&(a=a|0),h===void 0||h==="["&&o+2===i){Nc(t,h===void 0?new c0(a,r,e):new h0(a,r,e));break}else{let d=t.map[a];d===void 0&&(d=new u0(a),Nc(t,d)),t=d}}}class Oo{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);d0(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Fc(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let f0=0;function p0(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function m0(r){switch(r){case ci:return["Linear","( value )"];case xt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Uc(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+p0(r.getShaderSource(e),o)}else return i}function g0(r,e){const t=m0(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function _0(r,e){let t;switch(e){case su:t="Linear";break;case ru:t="Reinhard";break;case ou:t="OptimizedCineon";break;case au:t="ACESFilmic";break;case lu:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function v0(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($s).join(`
`)}function x0(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function y0(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function $s(r){return r!==""}function Bc(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function zc(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const M0=/^[ \t]*#include +<([\w\d./]+)>/gm;function yl(r){return r.replace(M0,b0)}function b0(r,e){const t=Ke[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return yl(t)}const w0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function kc(r){return r.replace(w0,S0)}function S0(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Hc(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function E0(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Cl?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Fh?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===xs&&(e="SHADOWMAP_TYPE_VSM"),e}function T0(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case oi:case ai:e="ENVMAP_TYPE_CUBE";break;case Cs:e="ENVMAP_TYPE_CUBE_UV";break}return e}function A0(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case ai:e="ENVMAP_MODE_REFRACTION";break}return e}function C0(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case xr:e="ENVMAP_BLENDING_MULTIPLY";break;case nu:e="ENVMAP_BLENDING_MIX";break;case iu:e="ENVMAP_BLENDING_ADD";break}return e}function R0(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function L0(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=E0(t),h=T0(t),u=A0(t),d=C0(t),f=R0(t),p=t.isWebGL2?"":v0(t),_=x0(s),g=i.createProgram();let m,x,C=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[_].filter($s).join(`
`),m.length>0&&(m+=`
`),x=[p,_].filter($s).join(`
`),x.length>0&&(x+=`
`)):(m=[Hc(t),"#define SHADER_NAME "+t.shaderName,_,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($s).join(`
`),x=[p,Hc(t),"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==En?"#define TONE_MAPPING":"",t.toneMapping!==En?Ke.tonemapping_pars_fragment:"",t.toneMapping!==En?_0("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ke.encodings_pars_fragment,g0("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter($s).join(`
`)),o=yl(o),o=Bc(o,t),o=zc(o,t),a=yl(a),a=Bc(a,t),a=zc(a,t),o=kc(o),a=kc(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(C=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",t.glslVersion===_l?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===_l?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const S=C+m+o,w=C+x+a,R=Fc(i,i.VERTEX_SHADER,S),I=Fc(i,i.FRAGMENT_SHADER,w);if(i.attachShader(g,R),i.attachShader(g,I),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),r.debug.checkShaderErrors){const O=i.getProgramInfoLog(g).trim(),z=i.getShaderInfoLog(R).trim(),J=i.getShaderInfoLog(I).trim();let le=!0,Y=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1){le=!1;const H=Uc(i,R,"vertex"),te=Uc(i,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Program Info Log: `+O+`
`+H+`
`+te)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):(z===""||J==="")&&(Y=!1);Y&&(this.diagnostics={runnable:le,programLog:O,vertexShader:{log:z,prefix:m},fragmentShader:{log:J,prefix:x}})}i.deleteShader(R),i.deleteShader(I);let B;this.getUniforms=function(){return B===void 0&&(B=new Oo(i,g)),B};let E;return this.getAttributes=function(){return E===void 0&&(E=y0(i,g)),E},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=f0++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=R,this.fragmentShader=I,this}let P0=0;class I0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new D0(e),t.set(e,n)),n}}class D0{constructor(e){this.id=P0++,this.code=e,this.usedTimes=0}}function O0(r,e,t,n,i,s,o){const a=new Wo,l=new I0,h=[],u=i.isWebGL2,d=i.logarithmicDepthBuffer,f=i.vertexTextures;let p=i.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(E,O,z,J,le){const Y=J.fog,H=le.geometry,te=E.isMeshStandardMaterial?J.environment:null,X=(E.isMeshStandardMaterial?t:e).get(E.envMap||te),de=!!X&&X.mapping===Cs?X.image.height:null,se=_[E.type];E.precision!==null&&(p=i.getMaxPrecision(E.precision),p!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",p,"instead."));const W=H.morphAttributes.position||H.morphAttributes.normal||H.morphAttributes.color,Z=W!==void 0?W.length:0;let fe=0;H.morphAttributes.position!==void 0&&(fe=1),H.morphAttributes.normal!==void 0&&(fe=2),H.morphAttributes.color!==void 0&&(fe=3);let ce,_e,Ee,ze;if(se){const Ze=xn[se];ce=Ze.vertexShader,_e=Ze.fragmentShader}else ce=E.vertexShader,_e=E.fragmentShader,l.update(E),Ee=l.getVertexShaderID(E),ze=l.getFragmentShaderID(E);const G=r.getRenderTarget(),Ye=E.alphaTest>0,Ne=E.clearcoat>0,He=E.iridescence>0;return{isWebGL2:u,shaderID:se,shaderName:E.type,vertexShader:ce,fragmentShader:_e,defines:E.defines,customVertexShaderID:Ee,customFragmentShaderID:ze,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:p,instancing:le.isInstancedMesh===!0,instancingColor:le.isInstancedMesh===!0&&le.instanceColor!==null,supportsVertexTextures:f,outputEncoding:G===null?r.outputEncoding:G.isXRRenderTarget===!0?G.texture.encoding:ci,map:!!E.map,matcap:!!E.matcap,envMap:!!X,envMapMode:X&&X.mapping,envMapCubeUVHeight:de,lightMap:!!E.lightMap,aoMap:!!E.aoMap,emissiveMap:!!E.emissiveMap,bumpMap:!!E.bumpMap,normalMap:!!E.normalMap,objectSpaceNormalMap:E.normalMapType===Ru,tangentSpaceNormalMap:E.normalMapType===ui,decodeVideoTexture:!!E.map&&E.map.isVideoTexture===!0&&E.map.encoding===xt,clearcoat:Ne,clearcoatMap:Ne&&!!E.clearcoatMap,clearcoatRoughnessMap:Ne&&!!E.clearcoatRoughnessMap,clearcoatNormalMap:Ne&&!!E.clearcoatNormalMap,iridescence:He,iridescenceMap:He&&!!E.iridescenceMap,iridescenceThicknessMap:He&&!!E.iridescenceThicknessMap,displacementMap:!!E.displacementMap,roughnessMap:!!E.roughnessMap,metalnessMap:!!E.metalnessMap,specularMap:!!E.specularMap,specularIntensityMap:!!E.specularIntensityMap,specularColorMap:!!E.specularColorMap,opaque:E.transparent===!1&&E.blending===Fi,alphaMap:!!E.alphaMap,alphaTest:Ye,gradientMap:!!E.gradientMap,sheen:E.sheen>0,sheenColorMap:!!E.sheenColorMap,sheenRoughnessMap:!!E.sheenRoughnessMap,transmission:E.transmission>0,transmissionMap:!!E.transmissionMap,thicknessMap:!!E.thicknessMap,combine:E.combine,vertexTangents:!!E.normalMap&&!!H.attributes.tangent,vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!H.attributes.color&&H.attributes.color.itemSize===4,vertexUvs:!!E.map||!!E.bumpMap||!!E.normalMap||!!E.specularMap||!!E.alphaMap||!!E.emissiveMap||!!E.roughnessMap||!!E.metalnessMap||!!E.clearcoatMap||!!E.clearcoatRoughnessMap||!!E.clearcoatNormalMap||!!E.iridescenceMap||!!E.iridescenceThicknessMap||!!E.displacementMap||!!E.transmissionMap||!!E.thicknessMap||!!E.specularIntensityMap||!!E.specularColorMap||!!E.sheenColorMap||!!E.sheenRoughnessMap,uvsVertexOnly:!(!!E.map||!!E.bumpMap||!!E.normalMap||!!E.specularMap||!!E.alphaMap||!!E.emissiveMap||!!E.roughnessMap||!!E.metalnessMap||!!E.clearcoatNormalMap||!!E.iridescenceMap||!!E.iridescenceThicknessMap||E.transmission>0||!!E.transmissionMap||!!E.thicknessMap||!!E.specularIntensityMap||!!E.specularColorMap||E.sheen>0||!!E.sheenColorMap||!!E.sheenRoughnessMap)&&!!E.displacementMap,fog:!!Y,useFog:E.fog===!0,fogExp2:Y&&Y.isFogExp2,flatShading:!!E.flatShading,sizeAttenuation:E.sizeAttenuation,logarithmicDepthBuffer:d,skinning:le.isSkinnedMesh===!0,morphTargets:H.morphAttributes.position!==void 0,morphNormals:H.morphAttributes.normal!==void 0,morphColors:H.morphAttributes.color!==void 0,morphTargetsCount:Z,morphTextureStride:fe,numDirLights:O.directional.length,numPointLights:O.point.length,numSpotLights:O.spot.length,numSpotLightMaps:O.spotLightMap.length,numRectAreaLights:O.rectArea.length,numHemiLights:O.hemi.length,numDirLightShadows:O.directionalShadowMap.length,numPointLightShadows:O.pointShadowMap.length,numSpotLightShadows:O.spotShadowMap.length,numSpotLightShadowsWithMaps:O.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:E.dithering,shadowMapEnabled:r.shadowMap.enabled&&z.length>0,shadowMapType:r.shadowMap.type,toneMapping:E.toneMapped?r.toneMapping:En,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===Bn,flipSided:E.side===sn,useDepthPacking:!!E.depthPacking,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionDerivatives:E.extensions&&E.extensions.derivatives,extensionFragDepth:E.extensions&&E.extensions.fragDepth,extensionDrawBuffers:E.extensions&&E.extensions.drawBuffers,extensionShaderTextureLOD:E.extensions&&E.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:E.customProgramCacheKey()}}function m(E){const O=[];if(E.shaderID?O.push(E.shaderID):(O.push(E.customVertexShaderID),O.push(E.customFragmentShaderID)),E.defines!==void 0)for(const z in E.defines)O.push(z),O.push(E.defines[z]);return E.isRawShaderMaterial===!1&&(x(O,E),C(O,E),O.push(r.outputEncoding)),O.push(E.customProgramCacheKey),O.join()}function x(E,O){E.push(O.precision),E.push(O.outputEncoding),E.push(O.envMapMode),E.push(O.envMapCubeUVHeight),E.push(O.combine),E.push(O.vertexUvs),E.push(O.fogExp2),E.push(O.sizeAttenuation),E.push(O.morphTargetsCount),E.push(O.morphAttributeCount),E.push(O.numDirLights),E.push(O.numPointLights),E.push(O.numSpotLights),E.push(O.numSpotLightMaps),E.push(O.numHemiLights),E.push(O.numRectAreaLights),E.push(O.numDirLightShadows),E.push(O.numPointLightShadows),E.push(O.numSpotLightShadows),E.push(O.numSpotLightShadowsWithMaps),E.push(O.shadowMapType),E.push(O.toneMapping),E.push(O.numClippingPlanes),E.push(O.numClipIntersection),E.push(O.depthPacking)}function C(E,O){a.disableAll(),O.isWebGL2&&a.enable(0),O.supportsVertexTextures&&a.enable(1),O.instancing&&a.enable(2),O.instancingColor&&a.enable(3),O.map&&a.enable(4),O.matcap&&a.enable(5),O.envMap&&a.enable(6),O.lightMap&&a.enable(7),O.aoMap&&a.enable(8),O.emissiveMap&&a.enable(9),O.bumpMap&&a.enable(10),O.normalMap&&a.enable(11),O.objectSpaceNormalMap&&a.enable(12),O.tangentSpaceNormalMap&&a.enable(13),O.clearcoat&&a.enable(14),O.clearcoatMap&&a.enable(15),O.clearcoatRoughnessMap&&a.enable(16),O.clearcoatNormalMap&&a.enable(17),O.iridescence&&a.enable(18),O.iridescenceMap&&a.enable(19),O.iridescenceThicknessMap&&a.enable(20),O.displacementMap&&a.enable(21),O.specularMap&&a.enable(22),O.roughnessMap&&a.enable(23),O.metalnessMap&&a.enable(24),O.gradientMap&&a.enable(25),O.alphaMap&&a.enable(26),O.alphaTest&&a.enable(27),O.vertexColors&&a.enable(28),O.vertexAlphas&&a.enable(29),O.vertexUvs&&a.enable(30),O.vertexTangents&&a.enable(31),O.uvsVertexOnly&&a.enable(32),E.push(a.mask),a.disableAll(),O.fog&&a.enable(0),O.useFog&&a.enable(1),O.flatShading&&a.enable(2),O.logarithmicDepthBuffer&&a.enable(3),O.skinning&&a.enable(4),O.morphTargets&&a.enable(5),O.morphNormals&&a.enable(6),O.morphColors&&a.enable(7),O.premultipliedAlpha&&a.enable(8),O.shadowMapEnabled&&a.enable(9),O.physicallyCorrectLights&&a.enable(10),O.doubleSided&&a.enable(11),O.flipSided&&a.enable(12),O.useDepthPacking&&a.enable(13),O.dithering&&a.enable(14),O.specularIntensityMap&&a.enable(15),O.specularColorMap&&a.enable(16),O.transmission&&a.enable(17),O.transmissionMap&&a.enable(18),O.thicknessMap&&a.enable(19),O.sheen&&a.enable(20),O.sheenColorMap&&a.enable(21),O.sheenRoughnessMap&&a.enable(22),O.decodeVideoTexture&&a.enable(23),O.opaque&&a.enable(24),E.push(a.mask)}function S(E){const O=_[E.type];let z;if(O){const J=xn[O];z=Ou.clone(J.uniforms)}else z=E.uniforms;return z}function w(E,O){let z;for(let J=0,le=h.length;J<le;J++){const Y=h[J];if(Y.cacheKey===O){z=Y,++z.usedTimes;break}}return z===void 0&&(z=new L0(r,O,E,s),h.push(z)),z}function R(E){if(--E.usedTimes===0){const O=h.indexOf(E);h[O]=h[h.length-1],h.pop(),E.destroy()}}function I(E){l.remove(E)}function B(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:S,acquireProgram:w,releaseProgram:R,releaseShaderCache:I,programs:h,dispose:B}}function N0(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function F0(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Gc(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Vc(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(d,f,p,_,g,m){let x=r[e];return x===void 0?(x={id:d.id,object:d,geometry:f,material:p,groupOrder:_,renderOrder:d.renderOrder,z:g,group:m},r[e]=x):(x.id=d.id,x.object=d,x.geometry=f,x.material=p,x.groupOrder=_,x.renderOrder=d.renderOrder,x.z=g,x.group=m),e++,x}function a(d,f,p,_,g,m){const x=o(d,f,p,_,g,m);p.transmission>0?n.push(x):p.transparent===!0?i.push(x):t.push(x)}function l(d,f,p,_,g,m){const x=o(d,f,p,_,g,m);p.transmission>0?n.unshift(x):p.transparent===!0?i.unshift(x):t.unshift(x)}function h(d,f){t.length>1&&t.sort(d||F0),n.length>1&&n.sort(f||Gc),i.length>1&&i.sort(f||Gc)}function u(){for(let d=e,f=r.length;d<f;d++){const p=r[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:h}}function U0(){let r=new WeakMap;function e(n,i){const s=r.get(n);let o;return s===void 0?(o=new Vc,r.set(n,[o])):i>=s.length?(o=new Vc,s.push(o)):o=s[i],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function B0(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new Se};break;case"SpotLight":t={position:new N,direction:new N,color:new Se,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new Se,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new Se,groundColor:new Se};break;case"RectAreaLight":t={color:new Se,position:new N,halfWidth:new N,halfHeight:new N};break}return r[e.id]=t,t}}}function z0(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let k0=0;function H0(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function G0(r,e){const t=new B0,n=z0(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new N);const s=new N,o=new Xe,a=new Xe;function l(u,d){let f=0,p=0,_=0;for(let J=0;J<9;J++)i.probe[J].set(0,0,0);let g=0,m=0,x=0,C=0,S=0,w=0,R=0,I=0,B=0,E=0;u.sort(H0);const O=d!==!0?Math.PI:1;for(let J=0,le=u.length;J<le;J++){const Y=u[J],H=Y.color,te=Y.intensity,X=Y.distance,de=Y.shadow&&Y.shadow.map?Y.shadow.map.texture:null;if(Y.isAmbientLight)f+=H.r*te*O,p+=H.g*te*O,_+=H.b*te*O;else if(Y.isLightProbe)for(let se=0;se<9;se++)i.probe[se].addScaledVector(Y.sh.coefficients[se],te);else if(Y.isDirectionalLight){const se=t.get(Y);if(se.color.copy(Y.color).multiplyScalar(Y.intensity*O),Y.castShadow){const W=Y.shadow,Z=n.get(Y);Z.shadowBias=W.bias,Z.shadowNormalBias=W.normalBias,Z.shadowRadius=W.radius,Z.shadowMapSize=W.mapSize,i.directionalShadow[g]=Z,i.directionalShadowMap[g]=de,i.directionalShadowMatrix[g]=Y.shadow.matrix,w++}i.directional[g]=se,g++}else if(Y.isSpotLight){const se=t.get(Y);se.position.setFromMatrixPosition(Y.matrixWorld),se.color.copy(H).multiplyScalar(te*O),se.distance=X,se.coneCos=Math.cos(Y.angle),se.penumbraCos=Math.cos(Y.angle*(1-Y.penumbra)),se.decay=Y.decay,i.spot[x]=se;const W=Y.shadow;if(Y.map&&(i.spotLightMap[B]=Y.map,B++,W.updateMatrices(Y),Y.castShadow&&E++),i.spotLightMatrix[x]=W.matrix,Y.castShadow){const Z=n.get(Y);Z.shadowBias=W.bias,Z.shadowNormalBias=W.normalBias,Z.shadowRadius=W.radius,Z.shadowMapSize=W.mapSize,i.spotShadow[x]=Z,i.spotShadowMap[x]=de,I++}x++}else if(Y.isRectAreaLight){const se=t.get(Y);se.color.copy(H).multiplyScalar(te),se.halfWidth.set(Y.width*.5,0,0),se.halfHeight.set(0,Y.height*.5,0),i.rectArea[C]=se,C++}else if(Y.isPointLight){const se=t.get(Y);if(se.color.copy(Y.color).multiplyScalar(Y.intensity*O),se.distance=Y.distance,se.decay=Y.decay,Y.castShadow){const W=Y.shadow,Z=n.get(Y);Z.shadowBias=W.bias,Z.shadowNormalBias=W.normalBias,Z.shadowRadius=W.radius,Z.shadowMapSize=W.mapSize,Z.shadowCameraNear=W.camera.near,Z.shadowCameraFar=W.camera.far,i.pointShadow[m]=Z,i.pointShadowMap[m]=de,i.pointShadowMatrix[m]=Y.shadow.matrix,R++}i.point[m]=se,m++}else if(Y.isHemisphereLight){const se=t.get(Y);se.skyColor.copy(Y.color).multiplyScalar(te*O),se.groundColor.copy(Y.groundColor).multiplyScalar(te*O),i.hemi[S]=se,S++}}C>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ve.LTC_FLOAT_1,i.rectAreaLTC2=ve.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ve.LTC_HALF_1,i.rectAreaLTC2=ve.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=p,i.ambient[2]=_;const z=i.hash;(z.directionalLength!==g||z.pointLength!==m||z.spotLength!==x||z.rectAreaLength!==C||z.hemiLength!==S||z.numDirectionalShadows!==w||z.numPointShadows!==R||z.numSpotShadows!==I||z.numSpotMaps!==B)&&(i.directional.length=g,i.spot.length=x,i.rectArea.length=C,i.point.length=m,i.hemi.length=S,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=I,i.spotShadowMap.length=I,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=I+B-E,i.spotLightMap.length=B,i.numSpotLightShadowsWithMaps=E,z.directionalLength=g,z.pointLength=m,z.spotLength=x,z.rectAreaLength=C,z.hemiLength=S,z.numDirectionalShadows=w,z.numPointShadows=R,z.numSpotShadows=I,z.numSpotMaps=B,i.version=k0++)}function h(u,d){let f=0,p=0,_=0,g=0,m=0;const x=d.matrixWorldInverse;for(let C=0,S=u.length;C<S;C++){const w=u[C];if(w.isDirectionalLight){const R=i.directional[f];R.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(x),f++}else if(w.isSpotLight){const R=i.spot[_];R.position.setFromMatrixPosition(w.matrixWorld),R.position.applyMatrix4(x),R.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(x),_++}else if(w.isRectAreaLight){const R=i.rectArea[g];R.position.setFromMatrixPosition(w.matrixWorld),R.position.applyMatrix4(x),a.identity(),o.copy(w.matrixWorld),o.premultiply(x),a.extractRotation(o),R.halfWidth.set(w.width*.5,0,0),R.halfHeight.set(0,w.height*.5,0),R.halfWidth.applyMatrix4(a),R.halfHeight.applyMatrix4(a),g++}else if(w.isPointLight){const R=i.point[p];R.position.setFromMatrixPosition(w.matrixWorld),R.position.applyMatrix4(x),p++}else if(w.isHemisphereLight){const R=i.hemi[m];R.direction.setFromMatrixPosition(w.matrixWorld),R.direction.transformDirection(x),m++}}}return{setup:l,setupView:h,state:i}}function Wc(r,e){const t=new G0(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(d){n.push(d)}function a(d){i.push(d)}function l(d){t.setup(n,d)}function h(d){t.setupView(n,d)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:h,pushLight:o,pushShadow:a}}function V0(r,e){let t=new WeakMap;function n(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new Wc(r,e),t.set(s,[l])):o>=a.length?(l=new Wc(r,e),a.push(l)):l=a[o],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class zl extends Gt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Au,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class kl extends Gt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new N,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const W0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,X0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function q0(r,e,t){let n=new qo;const i=new ae,s=new ae,o=new ht,a=new zl({depthPacking:Cu}),l=new kl,h={},u=t.maxTextureSize,d={0:sn,1:Hi,2:Bn},f=new An({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ae},radius:{value:4}},vertexShader:W0,fragmentShader:X0}),p=f.clone();p.defines.HORIZONTAL_PASS=1;const _=new $e;_.setAttribute("position",new gt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Bt(_,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Cl,this.render=function(w,R,I){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const B=r.getRenderTarget(),E=r.getActiveCubeFace(),O=r.getActiveMipmapLevel(),z=r.state;z.setBlending(Hn),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let J=0,le=w.length;J<le;J++){const Y=w[J],H=Y.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const te=H.getFrameExtents();if(i.multiply(te),s.copy(H.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/te.x),i.x=s.x*te.x,H.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/te.y),i.y=s.y*te.y,H.mapSize.y=s.y)),H.map===null){const de=this.type!==xs?{minFilter:Ct,magFilter:Ct}:{};H.map=new fn(i.x,i.y,de),H.map.texture.name=Y.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const X=H.getViewportCount();for(let de=0;de<X;de++){const se=H.getViewport(de);o.set(s.x*se.x,s.y*se.y,s.x*se.z,s.y*se.w),z.viewport(o),H.updateMatrices(Y,de),n=H.getFrustum(),S(R,I,H.camera,Y,this.type)}H.isPointLightShadow!==!0&&this.type===xs&&x(H,I),H.needsUpdate=!1}m.needsUpdate=!1,r.setRenderTarget(B,E,O)};function x(w,R){const I=e.update(g);f.defines.VSM_SAMPLES!==w.blurSamples&&(f.defines.VSM_SAMPLES=w.blurSamples,p.defines.VSM_SAMPLES=w.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new fn(i.x,i.y)),f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,r.setRenderTarget(w.mapPass),r.clear(),r.renderBufferDirect(R,null,I,f,g,null),p.uniforms.shadow_pass.value=w.mapPass.texture,p.uniforms.resolution.value=w.mapSize,p.uniforms.radius.value=w.radius,r.setRenderTarget(w.map),r.clear(),r.renderBufferDirect(R,null,I,p,g,null)}function C(w,R,I,B,E,O){let z=null;const J=I.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(J!==void 0?z=J:z=I.isPointLight===!0?l:a,r.localClippingEnabled&&R.clipShadows===!0&&Array.isArray(R.clippingPlanes)&&R.clippingPlanes.length!==0||R.displacementMap&&R.displacementScale!==0||R.alphaMap&&R.alphaTest>0){const le=z.uuid,Y=R.uuid;let H=h[le];H===void 0&&(H={},h[le]=H);let te=H[Y];te===void 0&&(te=z.clone(),H[Y]=te),z=te}return z.visible=R.visible,z.wireframe=R.wireframe,O===xs?z.side=R.shadowSide!==null?R.shadowSide:R.side:z.side=R.shadowSide!==null?R.shadowSide:d[R.side],z.alphaMap=R.alphaMap,z.alphaTest=R.alphaTest,z.clipShadows=R.clipShadows,z.clippingPlanes=R.clippingPlanes,z.clipIntersection=R.clipIntersection,z.displacementMap=R.displacementMap,z.displacementScale=R.displacementScale,z.displacementBias=R.displacementBias,z.wireframeLinewidth=R.wireframeLinewidth,z.linewidth=R.linewidth,I.isPointLight===!0&&z.isMeshDistanceMaterial===!0&&(z.referencePosition.setFromMatrixPosition(I.matrixWorld),z.nearDistance=B,z.farDistance=E),z}function S(w,R,I,B,E){if(w.visible===!1)return;if(w.layers.test(R.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&E===xs)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,w.matrixWorld);const J=e.update(w),le=w.material;if(Array.isArray(le)){const Y=J.groups;for(let H=0,te=Y.length;H<te;H++){const X=Y[H],de=le[X.materialIndex];if(de&&de.visible){const se=C(w,de,B,I.near,I.far,E);r.renderBufferDirect(I,null,J,se,w,X)}}}else if(le.visible){const Y=C(w,le,B,I.near,I.far,E);r.renderBufferDirect(I,null,J,Y,w,null)}}const z=w.children;for(let J=0,le=z.length;J<le;J++)S(z[J],R,I,B,E)}}function Y0(r,e,t){const n=t.isWebGL2;function i(){let k=!1;const j=new ht;let ue=null;const we=new ht(0,0,0,0);return{setMask:function(Le){ue!==Le&&!k&&(r.colorMask(Le,Le,Le,Le),ue=Le)},setLocked:function(Le){k=Le},setClear:function(Le,et,bt,ut,bn){bn===!0&&(Le*=ut,et*=ut,bt*=ut),j.set(Le,et,bt,ut),we.equals(j)===!1&&(r.clearColor(Le,et,bt,ut),we.copy(j))},reset:function(){k=!1,ue=null,we.set(-1,0,0,0)}}}function s(){let k=!1,j=null,ue=null,we=null;return{setTest:function(Le){Le?Ye(r.DEPTH_TEST):Ne(r.DEPTH_TEST)},setMask:function(Le){j!==Le&&!k&&(r.depthMask(Le),j=Le)},setFunc:function(Le){if(ue!==Le){switch(Le){case Jh:r.depthFunc(r.NEVER);break;case Kh:r.depthFunc(r.ALWAYS);break;case $h:r.depthFunc(r.LESS);break;case No:r.depthFunc(r.LEQUAL);break;case jh:r.depthFunc(r.EQUAL);break;case Qh:r.depthFunc(r.GEQUAL);break;case eu:r.depthFunc(r.GREATER);break;case tu:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ue=Le}},setLocked:function(Le){k=Le},setClear:function(Le){we!==Le&&(r.clearDepth(Le),we=Le)},reset:function(){k=!1,j=null,ue=null,we=null}}}function o(){let k=!1,j=null,ue=null,we=null,Le=null,et=null,bt=null,ut=null,bn=null;return{setTest:function(dt){k||(dt?Ye(r.STENCIL_TEST):Ne(r.STENCIL_TEST))},setMask:function(dt){j!==dt&&!k&&(r.stencilMask(dt),j=dt)},setFunc:function(dt,Kt,vt){(ue!==dt||we!==Kt||Le!==vt)&&(r.stencilFunc(dt,Kt,vt),ue=dt,we=Kt,Le=vt)},setOp:function(dt,Kt,vt){(et!==dt||bt!==Kt||ut!==vt)&&(r.stencilOp(dt,Kt,vt),et=dt,bt=Kt,ut=vt)},setLocked:function(dt){k=dt},setClear:function(dt){bn!==dt&&(r.clearStencil(dt),bn=dt)},reset:function(){k=!1,j=null,ue=null,we=null,Le=null,et=null,bt=null,ut=null,bn=null}}}const a=new i,l=new s,h=new o,u=new WeakMap,d=new WeakMap;let f={},p={},_=new WeakMap,g=[],m=null,x=!1,C=null,S=null,w=null,R=null,I=null,B=null,E=null,O=!1,z=null,J=null,le=null,Y=null,H=null;const te=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let X=!1,de=0;const se=r.getParameter(r.VERSION);se.indexOf("WebGL")!==-1?(de=parseFloat(/^WebGL (\d)/.exec(se)[1]),X=de>=1):se.indexOf("OpenGL ES")!==-1&&(de=parseFloat(/^OpenGL ES (\d)/.exec(se)[1]),X=de>=2);let W=null,Z={};const fe=r.getParameter(r.SCISSOR_BOX),ce=r.getParameter(r.VIEWPORT),_e=new ht().fromArray(fe),Ee=new ht().fromArray(ce);function ze(k,j,ue){const we=new Uint8Array(4),Le=r.createTexture();r.bindTexture(k,Le),r.texParameteri(k,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(k,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let et=0;et<ue;et++)r.texImage2D(j+et,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,we);return Le}const G={};G[r.TEXTURE_2D]=ze(r.TEXTURE_2D,r.TEXTURE_2D,1),G[r.TEXTURE_CUBE_MAP]=ze(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),l.setClear(1),h.setClear(0),Ye(r.DEPTH_TEST),l.setFunc(No),xe(!1),Ge(Wa),Ye(r.CULL_FACE),pe(Hn);function Ye(k){f[k]!==!0&&(r.enable(k),f[k]=!0)}function Ne(k){f[k]!==!1&&(r.disable(k),f[k]=!1)}function He(k,j){return p[k]!==j?(r.bindFramebuffer(k,j),p[k]=j,n&&(k===r.DRAW_FRAMEBUFFER&&(p[r.FRAMEBUFFER]=j),k===r.FRAMEBUFFER&&(p[r.DRAW_FRAMEBUFFER]=j)),!0):!1}function ye(k,j){let ue=g,we=!1;if(k)if(ue=_.get(j),ue===void 0&&(ue=[],_.set(j,ue)),k.isWebGLMultipleRenderTargets){const Le=k.texture;if(ue.length!==Le.length||ue[0]!==r.COLOR_ATTACHMENT0){for(let et=0,bt=Le.length;et<bt;et++)ue[et]=r.COLOR_ATTACHMENT0+et;ue.length=Le.length,we=!0}}else ue[0]!==r.COLOR_ATTACHMENT0&&(ue[0]=r.COLOR_ATTACHMENT0,we=!0);else ue[0]!==r.BACK&&(ue[0]=r.BACK,we=!0);we&&(t.isWebGL2?r.drawBuffers(ue):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ue))}function Ze(k){return m!==k?(r.useProgram(k),m=k,!0):!1}const re={[Li]:r.FUNC_ADD,[Bh]:r.FUNC_SUBTRACT,[zh]:r.FUNC_REVERSE_SUBTRACT};if(n)re[Za]=r.MIN,re[Ja]=r.MAX;else{const k=e.get("EXT_blend_minmax");k!==null&&(re[Za]=k.MIN_EXT,re[Ja]=k.MAX_EXT)}const ie={[kh]:r.ZERO,[Hh]:r.ONE,[Gh]:r.SRC_COLOR,[Rl]:r.SRC_ALPHA,[Zh]:r.SRC_ALPHA_SATURATE,[qh]:r.DST_COLOR,[Wh]:r.DST_ALPHA,[Vh]:r.ONE_MINUS_SRC_COLOR,[Ll]:r.ONE_MINUS_SRC_ALPHA,[Yh]:r.ONE_MINUS_DST_COLOR,[Xh]:r.ONE_MINUS_DST_ALPHA};function pe(k,j,ue,we,Le,et,bt,ut){if(k===Hn){x===!0&&(Ne(r.BLEND),x=!1);return}if(x===!1&&(Ye(r.BLEND),x=!0),k!==Uh){if(k!==C||ut!==O){if((S!==Li||I!==Li)&&(r.blendEquation(r.FUNC_ADD),S=Li,I=Li),ut)switch(k){case Fi:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Xa:r.blendFunc(r.ONE,r.ONE);break;case qa:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ya:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case Fi:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Xa:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case qa:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ya:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}w=null,R=null,B=null,E=null,C=k,O=ut}return}Le=Le||j,et=et||ue,bt=bt||we,(j!==S||Le!==I)&&(r.blendEquationSeparate(re[j],re[Le]),S=j,I=Le),(ue!==w||we!==R||et!==B||bt!==E)&&(r.blendFuncSeparate(ie[ue],ie[we],ie[et],ie[bt]),w=ue,R=we,B=et,E=bt),C=k,O=null}function Te(k,j){k.side===Bn?Ne(r.CULL_FACE):Ye(r.CULL_FACE);let ue=k.side===sn;j&&(ue=!ue),xe(ue),k.blending===Fi&&k.transparent===!1?pe(Hn):pe(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),a.setMask(k.colorWrite);const we=k.stencilWrite;h.setTest(we),we&&(h.setMask(k.stencilWriteMask),h.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),h.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),Fe(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Ye(r.SAMPLE_ALPHA_TO_COVERAGE):Ne(r.SAMPLE_ALPHA_TO_COVERAGE)}function xe(k){z!==k&&(k?r.frontFace(r.CW):r.frontFace(r.CCW),z=k)}function Ge(k){k!==Oh?(Ye(r.CULL_FACE),k!==J&&(k===Wa?r.cullFace(r.BACK):k===Nh?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Ne(r.CULL_FACE),J=k}function ke(k){k!==le&&(X&&r.lineWidth(k),le=k)}function Fe(k,j,ue){k?(Ye(r.POLYGON_OFFSET_FILL),(Y!==j||H!==ue)&&(r.polygonOffset(j,ue),Y=j,H=ue)):Ne(r.POLYGON_OFFSET_FILL)}function lt(k){k?Ye(r.SCISSOR_TEST):Ne(r.SCISSOR_TEST)}function ct(k){k===void 0&&(k=r.TEXTURE0+te-1),W!==k&&(r.activeTexture(k),W=k)}function F(k,j,ue){ue===void 0&&(W===null?ue=r.TEXTURE0+te-1:ue=W);let we=Z[ue];we===void 0&&(we={type:void 0,texture:void 0},Z[ue]=we),(we.type!==k||we.texture!==j)&&(W!==ue&&(r.activeTexture(ue),W=ue),r.bindTexture(k,j||G[k]),we.type=k,we.texture=j)}function L(){const k=Z[W];k!==void 0&&k.type!==void 0&&(r.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function K(){try{r.compressedTexImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function he(){try{r.compressedTexImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function me(){try{r.texSubImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Me(){try{r.texSubImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Be(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function be(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function $(){try{r.texStorage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ie(){try{r.texStorage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function De(){try{r.texImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Re(){try{r.texImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ue(k){_e.equals(k)===!1&&(r.scissor(k.x,k.y,k.z,k.w),_e.copy(k))}function Pe(k){Ee.equals(k)===!1&&(r.viewport(k.x,k.y,k.z,k.w),Ee.copy(k))}function Qe(k,j){let ue=d.get(j);ue===void 0&&(ue=new WeakMap,d.set(j,ue));let we=ue.get(k);we===void 0&&(we=r.getUniformBlockIndex(j,k.name),ue.set(k,we))}function ft(k,j){const we=d.get(j).get(k);u.get(k)!==we&&(r.uniformBlockBinding(j,we,k.__bindingPointIndex),u.set(k,we))}function ot(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},W=null,Z={},p={},_=new WeakMap,g=[],m=null,x=!1,C=null,S=null,w=null,R=null,I=null,B=null,E=null,O=!1,z=null,J=null,le=null,Y=null,H=null,_e.set(0,0,r.canvas.width,r.canvas.height),Ee.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),h.reset()}return{buffers:{color:a,depth:l,stencil:h},enable:Ye,disable:Ne,bindFramebuffer:He,drawBuffers:ye,useProgram:Ze,setBlending:pe,setMaterial:Te,setFlipSided:xe,setCullFace:Ge,setLineWidth:ke,setPolygonOffset:Fe,setScissorTest:lt,activeTexture:ct,bindTexture:F,unbindTexture:L,compressedTexImage2D:K,compressedTexImage3D:he,texImage2D:De,texImage3D:Re,updateUBOMapping:Qe,uniformBlockBinding:ft,texStorage2D:$,texStorage3D:Ie,texSubImage2D:me,texSubImage3D:Me,compressedTexSubImage2D:Be,compressedTexSubImage3D:be,scissor:Ue,viewport:Pe,reset:ot}}function Z0(r,e,t,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,h=i.maxCubemapSize,u=i.maxTextureSize,d=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(typeof navigator=="undefined"?"":navigator.userAgent),_=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function C(F,L){return x?new OffscreenCanvas(F,L):hr("canvas")}function S(F,L,K,he){let me=1;if((F.width>he||F.height>he)&&(me=he/Math.max(F.width,F.height)),me<1||L===!0)if(typeof HTMLImageElement!="undefined"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&F instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&F instanceof ImageBitmap){const Me=L?zo:Math.floor,Be=Me(me*F.width),be=Me(me*F.height);g===void 0&&(g=C(Be,be));const $=K?C(Be,be):g;return $.width=Be,$.height=be,$.getContext("2d").drawImage(F,0,0,Be,be),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+Be+"x"+be+")."),$}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function w(F){return vl(F.width)&&vl(F.height)}function R(F){return a?!1:F.wrapS!==Ht||F.wrapT!==Ht||F.minFilter!==Ct&&F.minFilter!==St}function I(F,L){return F.generateMipmaps&&L&&F.minFilter!==Ct&&F.minFilter!==St}function B(F){r.generateMipmap(F)}function E(F,L,K,he,me=!1){if(a===!1)return L;if(F!==null){if(r[F]!==void 0)return r[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let Me=L;return L===r.RED&&(K===r.FLOAT&&(Me=r.R32F),K===r.HALF_FLOAT&&(Me=r.R16F),K===r.UNSIGNED_BYTE&&(Me=r.R8)),L===r.RG&&(K===r.FLOAT&&(Me=r.RG32F),K===r.HALF_FLOAT&&(Me=r.RG16F),K===r.UNSIGNED_BYTE&&(Me=r.RG8)),L===r.RGBA&&(K===r.FLOAT&&(Me=r.RGBA32F),K===r.HALF_FLOAT&&(Me=r.RGBA16F),K===r.UNSIGNED_BYTE&&(Me=he===xt&&me===!1?r.SRGB8_ALPHA8:r.RGBA8),K===r.UNSIGNED_SHORT_4_4_4_4&&(Me=r.RGBA4),K===r.UNSIGNED_SHORT_5_5_5_1&&(Me=r.RGB5_A1)),(Me===r.R16F||Me===r.R32F||Me===r.RG16F||Me===r.RG32F||Me===r.RGBA16F||Me===r.RGBA32F)&&e.get("EXT_color_buffer_float"),Me}function O(F,L,K){return I(F,K)===!0||F.isFramebufferTexture&&F.minFilter!==Ct&&F.minFilter!==St?Math.log2(Math.max(L.width,L.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?L.mipmaps.length:1}function z(F){return F===Ct||F===Fo||F===Uo?r.NEAREST:r.LINEAR}function J(F){const L=F.target;L.removeEventListener("dispose",J),Y(L),L.isVideoTexture&&_.delete(L)}function le(F){const L=F.target;L.removeEventListener("dispose",le),te(L)}function Y(F){const L=n.get(F);if(L.__webglInit===void 0)return;const K=F.source,he=m.get(K);if(he){const me=he[L.__cacheKey];me.usedTimes--,me.usedTimes===0&&H(F),Object.keys(he).length===0&&m.delete(K)}n.remove(F)}function H(F){const L=n.get(F);r.deleteTexture(L.__webglTexture);const K=F.source,he=m.get(K);delete he[L.__cacheKey],o.memory.textures--}function te(F){const L=F.texture,K=n.get(F),he=n.get(L);if(he.__webglTexture!==void 0&&(r.deleteTexture(he.__webglTexture),o.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let me=0;me<6;me++)r.deleteFramebuffer(K.__webglFramebuffer[me]),K.__webglDepthbuffer&&r.deleteRenderbuffer(K.__webglDepthbuffer[me]);else{if(r.deleteFramebuffer(K.__webglFramebuffer),K.__webglDepthbuffer&&r.deleteRenderbuffer(K.__webglDepthbuffer),K.__webglMultisampledFramebuffer&&r.deleteFramebuffer(K.__webglMultisampledFramebuffer),K.__webglColorRenderbuffer)for(let me=0;me<K.__webglColorRenderbuffer.length;me++)K.__webglColorRenderbuffer[me]&&r.deleteRenderbuffer(K.__webglColorRenderbuffer[me]);K.__webglDepthRenderbuffer&&r.deleteRenderbuffer(K.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let me=0,Me=L.length;me<Me;me++){const Be=n.get(L[me]);Be.__webglTexture&&(r.deleteTexture(Be.__webglTexture),o.memory.textures--),n.remove(L[me])}n.remove(L),n.remove(F)}let X=0;function de(){X=0}function se(){const F=X;return F>=l&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+l),X+=1,F}function W(F){const L=[];return L.push(F.wrapS),L.push(F.wrapT),L.push(F.wrapR||0),L.push(F.magFilter),L.push(F.minFilter),L.push(F.anisotropy),L.push(F.internalFormat),L.push(F.format),L.push(F.type),L.push(F.generateMipmaps),L.push(F.premultiplyAlpha),L.push(F.flipY),L.push(F.unpackAlignment),L.push(F.encoding),L.join()}function Z(F,L){const K=n.get(F);if(F.isVideoTexture&&lt(F),F.isRenderTargetTexture===!1&&F.version>0&&K.__version!==F.version){const he=F.image;if(he===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(he.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ne(K,F,L);return}}t.bindTexture(r.TEXTURE_2D,K.__webglTexture,r.TEXTURE0+L)}function fe(F,L){const K=n.get(F);if(F.version>0&&K.__version!==F.version){Ne(K,F,L);return}t.bindTexture(r.TEXTURE_2D_ARRAY,K.__webglTexture,r.TEXTURE0+L)}function ce(F,L){const K=n.get(F);if(F.version>0&&K.__version!==F.version){Ne(K,F,L);return}t.bindTexture(r.TEXTURE_3D,K.__webglTexture,r.TEXTURE0+L)}function _e(F,L){const K=n.get(F);if(F.version>0&&K.__version!==F.version){He(K,F,L);return}t.bindTexture(r.TEXTURE_CUBE_MAP,K.__webglTexture,r.TEXTURE0+L)}const Ee={[ir]:r.REPEAT,[Ht]:r.CLAMP_TO_EDGE,[sr]:r.MIRRORED_REPEAT},ze={[Ct]:r.NEAREST,[Fo]:r.NEAREST_MIPMAP_NEAREST,[Uo]:r.NEAREST_MIPMAP_LINEAR,[St]:r.LINEAR,[Pl]:r.LINEAR_MIPMAP_NEAREST,[qi]:r.LINEAR_MIPMAP_LINEAR};function G(F,L,K){if(K?(r.texParameteri(F,r.TEXTURE_WRAP_S,Ee[L.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,Ee[L.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,Ee[L.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,ze[L.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,ze[L.minFilter])):(r.texParameteri(F,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(F,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(L.wrapS!==Ht||L.wrapT!==Ht)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(F,r.TEXTURE_MAG_FILTER,z(L.magFilter)),r.texParameteri(F,r.TEXTURE_MIN_FILTER,z(L.minFilter)),L.minFilter!==Ct&&L.minFilter!==St&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const he=e.get("EXT_texture_filter_anisotropic");if(L.type===zn&&e.has("OES_texture_float_linear")===!1||a===!1&&L.type===Es&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||n.get(L).__currentAnisotropy)&&(r.texParameterf(F,he.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,i.getMaxAnisotropy())),n.get(L).__currentAnisotropy=L.anisotropy)}}function Ye(F,L){let K=!1;F.__webglInit===void 0&&(F.__webglInit=!0,L.addEventListener("dispose",J));const he=L.source;let me=m.get(he);me===void 0&&(me={},m.set(he,me));const Me=W(L);if(Me!==F.__cacheKey){me[Me]===void 0&&(me[Me]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,K=!0),me[Me].usedTimes++;const Be=me[F.__cacheKey];Be!==void 0&&(me[F.__cacheKey].usedTimes--,Be.usedTimes===0&&H(L)),F.__cacheKey=Me,F.__webglTexture=me[Me].texture}return K}function Ne(F,L,K){let he=r.TEXTURE_2D;(L.isDataArrayTexture||L.isCompressedArrayTexture)&&(he=r.TEXTURE_2D_ARRAY),L.isData3DTexture&&(he=r.TEXTURE_3D);const me=Ye(F,L),Me=L.source;t.bindTexture(he,F.__webglTexture,r.TEXTURE0+K);const Be=n.get(Me);if(Me.version!==Be.__version||me===!0){t.activeTexture(r.TEXTURE0+K),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const be=R(L)&&w(L.image)===!1;let $=S(L.image,be,!1,u);$=ct(L,$);const Ie=w($)||a,De=s.convert(L.format,L.encoding);let Re=s.convert(L.type),Ue=E(L.internalFormat,De,Re,L.encoding,L.isVideoTexture);G(he,L,Ie);let Pe;const Qe=L.mipmaps,ft=a&&L.isVideoTexture!==!0,ot=Be.__version===void 0||me===!0,k=O(L,$,Ie);if(L.isDepthTexture)Ue=r.DEPTH_COMPONENT,a?L.type===zn?Ue=r.DEPTH_COMPONENT32F:L.type===ii?Ue=r.DEPTH_COMPONENT24:L.type===Ui?Ue=r.DEPTH24_STENCIL8:Ue=r.DEPTH_COMPONENT16:L.type===zn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===ri&&Ue===r.DEPTH_COMPONENT&&L.type!==Il&&L.type!==ii&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=ii,Re=s.convert(L.type)),L.format===Gi&&Ue===r.DEPTH_COMPONENT&&(Ue=r.DEPTH_STENCIL,L.type!==Ui&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=Ui,Re=s.convert(L.type))),ot&&(ft?t.texStorage2D(r.TEXTURE_2D,1,Ue,$.width,$.height):t.texImage2D(r.TEXTURE_2D,0,Ue,$.width,$.height,0,De,Re,null));else if(L.isDataTexture)if(Qe.length>0&&Ie){ft&&ot&&t.texStorage2D(r.TEXTURE_2D,k,Ue,Qe[0].width,Qe[0].height);for(let j=0,ue=Qe.length;j<ue;j++)Pe=Qe[j],ft?t.texSubImage2D(r.TEXTURE_2D,j,0,0,Pe.width,Pe.height,De,Re,Pe.data):t.texImage2D(r.TEXTURE_2D,j,Ue,Pe.width,Pe.height,0,De,Re,Pe.data);L.generateMipmaps=!1}else ft?(ot&&t.texStorage2D(r.TEXTURE_2D,k,Ue,$.width,$.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,$.width,$.height,De,Re,$.data)):t.texImage2D(r.TEXTURE_2D,0,Ue,$.width,$.height,0,De,Re,$.data);else if(L.isCompressedTexture)if(L.isCompressedArrayTexture){ft&&ot&&t.texStorage3D(r.TEXTURE_2D_ARRAY,k,Ue,Qe[0].width,Qe[0].height,$.depth);for(let j=0,ue=Qe.length;j<ue;j++)Pe=Qe[j],L.format!==nn?De!==null?ft?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,0,Pe.width,Pe.height,$.depth,De,Pe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,j,Ue,Pe.width,Pe.height,$.depth,0,Pe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ft?t.texSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,0,Pe.width,Pe.height,$.depth,De,Re,Pe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,j,Ue,Pe.width,Pe.height,$.depth,0,De,Re,Pe.data)}else{ft&&ot&&t.texStorage2D(r.TEXTURE_2D,k,Ue,Qe[0].width,Qe[0].height);for(let j=0,ue=Qe.length;j<ue;j++)Pe=Qe[j],L.format!==nn?De!==null?ft?t.compressedTexSubImage2D(r.TEXTURE_2D,j,0,0,Pe.width,Pe.height,De,Pe.data):t.compressedTexImage2D(r.TEXTURE_2D,j,Ue,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ft?t.texSubImage2D(r.TEXTURE_2D,j,0,0,Pe.width,Pe.height,De,Re,Pe.data):t.texImage2D(r.TEXTURE_2D,j,Ue,Pe.width,Pe.height,0,De,Re,Pe.data)}else if(L.isDataArrayTexture)ft?(ot&&t.texStorage3D(r.TEXTURE_2D_ARRAY,k,Ue,$.width,$.height,$.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,$.width,$.height,$.depth,De,Re,$.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ue,$.width,$.height,$.depth,0,De,Re,$.data);else if(L.isData3DTexture)ft?(ot&&t.texStorage3D(r.TEXTURE_3D,k,Ue,$.width,$.height,$.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,$.width,$.height,$.depth,De,Re,$.data)):t.texImage3D(r.TEXTURE_3D,0,Ue,$.width,$.height,$.depth,0,De,Re,$.data);else if(L.isFramebufferTexture){if(ot)if(ft)t.texStorage2D(r.TEXTURE_2D,k,Ue,$.width,$.height);else{let j=$.width,ue=$.height;for(let we=0;we<k;we++)t.texImage2D(r.TEXTURE_2D,we,Ue,j,ue,0,De,Re,null),j>>=1,ue>>=1}}else if(Qe.length>0&&Ie){ft&&ot&&t.texStorage2D(r.TEXTURE_2D,k,Ue,Qe[0].width,Qe[0].height);for(let j=0,ue=Qe.length;j<ue;j++)Pe=Qe[j],ft?t.texSubImage2D(r.TEXTURE_2D,j,0,0,De,Re,Pe):t.texImage2D(r.TEXTURE_2D,j,Ue,De,Re,Pe);L.generateMipmaps=!1}else ft?(ot&&t.texStorage2D(r.TEXTURE_2D,k,Ue,$.width,$.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,De,Re,$)):t.texImage2D(r.TEXTURE_2D,0,Ue,De,Re,$);I(L,Ie)&&B(he),Be.__version=Me.version,L.onUpdate&&L.onUpdate(L)}F.__version=L.version}function He(F,L,K){if(L.image.length!==6)return;const he=Ye(F,L),me=L.source;t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+K);const Me=n.get(me);if(me.version!==Me.__version||he===!0){t.activeTexture(r.TEXTURE0+K),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Be=L.isCompressedTexture||L.image[0].isCompressedTexture,be=L.image[0]&&L.image[0].isDataTexture,$=[];for(let j=0;j<6;j++)!Be&&!be?$[j]=S(L.image[j],!1,!0,h):$[j]=be?L.image[j].image:L.image[j],$[j]=ct(L,$[j]);const Ie=$[0],De=w(Ie)||a,Re=s.convert(L.format,L.encoding),Ue=s.convert(L.type),Pe=E(L.internalFormat,Re,Ue,L.encoding),Qe=a&&L.isVideoTexture!==!0,ft=Me.__version===void 0||he===!0;let ot=O(L,Ie,De);G(r.TEXTURE_CUBE_MAP,L,De);let k;if(Be){Qe&&ft&&t.texStorage2D(r.TEXTURE_CUBE_MAP,ot,Pe,Ie.width,Ie.height);for(let j=0;j<6;j++){k=$[j].mipmaps;for(let ue=0;ue<k.length;ue++){const we=k[ue];L.format!==nn?Re!==null?Qe?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue,0,0,we.width,we.height,Re,we.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue,Pe,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Qe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue,0,0,we.width,we.height,Re,Ue,we.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue,Pe,we.width,we.height,0,Re,Ue,we.data)}}}else{k=L.mipmaps,Qe&&ft&&(k.length>0&&ot++,t.texStorage2D(r.TEXTURE_CUBE_MAP,ot,Pe,$[0].width,$[0].height));for(let j=0;j<6;j++)if(be){Qe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,$[j].width,$[j].height,Re,Ue,$[j].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,Pe,$[j].width,$[j].height,0,Re,Ue,$[j].data);for(let ue=0;ue<k.length;ue++){const Le=k[ue].image[j].image;Qe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue+1,0,0,Le.width,Le.height,Re,Ue,Le.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue+1,Pe,Le.width,Le.height,0,Re,Ue,Le.data)}}else{Qe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,Re,Ue,$[j]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,Pe,Re,Ue,$[j]);for(let ue=0;ue<k.length;ue++){const we=k[ue];Qe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue+1,0,0,Re,Ue,we.image[j]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,ue+1,Pe,Re,Ue,we.image[j])}}}I(L,De)&&B(r.TEXTURE_CUBE_MAP),Me.__version=me.version,L.onUpdate&&L.onUpdate(L)}F.__version=L.version}function ye(F,L,K,he,me){const Me=s.convert(K.format,K.encoding),Be=s.convert(K.type),be=E(K.internalFormat,Me,Be,K.encoding);n.get(L).__hasExternalTextures||(me===r.TEXTURE_3D||me===r.TEXTURE_2D_ARRAY?t.texImage3D(me,0,be,L.width,L.height,L.depth,0,Me,Be,null):t.texImage2D(me,0,be,L.width,L.height,0,Me,Be,null)),t.bindFramebuffer(r.FRAMEBUFFER,F),Fe(L)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,he,me,n.get(K).__webglTexture,0,ke(L)):(me===r.TEXTURE_2D||me>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&me<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,he,me,n.get(K).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ze(F,L,K){if(r.bindRenderbuffer(r.RENDERBUFFER,F),L.depthBuffer&&!L.stencilBuffer){let he=r.DEPTH_COMPONENT16;if(K||Fe(L)){const me=L.depthTexture;me&&me.isDepthTexture&&(me.type===zn?he=r.DEPTH_COMPONENT32F:me.type===ii&&(he=r.DEPTH_COMPONENT24));const Me=ke(L);Fe(L)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Me,he,L.width,L.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,Me,he,L.width,L.height)}else r.renderbufferStorage(r.RENDERBUFFER,he,L.width,L.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(L.depthBuffer&&L.stencilBuffer){const he=ke(L);K&&Fe(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,he,r.DEPTH24_STENCIL8,L.width,L.height):Fe(L)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,he,r.DEPTH24_STENCIL8,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const he=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let me=0;me<he.length;me++){const Me=he[me],Be=s.convert(Me.format,Me.encoding),be=s.convert(Me.type),$=E(Me.internalFormat,Be,be,Me.encoding),Ie=ke(L);K&&Fe(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ie,$,L.width,L.height):Fe(L)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ie,$,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,$,L.width,L.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function re(F,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,F),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),Z(L.depthTexture,0);const he=n.get(L.depthTexture).__webglTexture,me=ke(L);if(L.depthTexture.format===ri)Fe(L)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,he,0,me):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,he,0);else if(L.depthTexture.format===Gi)Fe(L)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,he,0,me):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,he,0);else throw new Error("Unknown depthTexture format")}function ie(F){const L=n.get(F),K=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!L.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");re(L.__webglFramebuffer,F)}else if(K){L.__webglDepthbuffer=[];for(let he=0;he<6;he++)t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer[he]),L.__webglDepthbuffer[he]=r.createRenderbuffer(),Ze(L.__webglDepthbuffer[he],F,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer),L.__webglDepthbuffer=r.createRenderbuffer(),Ze(L.__webglDepthbuffer,F,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function pe(F,L,K){const he=n.get(F);L!==void 0&&ye(he.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),K!==void 0&&ie(F)}function Te(F){const L=F.texture,K=n.get(F),he=n.get(L);F.addEventListener("dispose",le),F.isWebGLMultipleRenderTargets!==!0&&(he.__webglTexture===void 0&&(he.__webglTexture=r.createTexture()),he.__version=L.version,o.memory.textures++);const me=F.isWebGLCubeRenderTarget===!0,Me=F.isWebGLMultipleRenderTargets===!0,Be=w(F)||a;if(me){K.__webglFramebuffer=[];for(let be=0;be<6;be++)K.__webglFramebuffer[be]=r.createFramebuffer()}else{if(K.__webglFramebuffer=r.createFramebuffer(),Me)if(i.drawBuffers){const be=F.texture;for(let $=0,Ie=be.length;$<Ie;$++){const De=n.get(be[$]);De.__webglTexture===void 0&&(De.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&F.samples>0&&Fe(F)===!1){const be=Me?L:[L];K.__webglMultisampledFramebuffer=r.createFramebuffer(),K.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let $=0;$<be.length;$++){const Ie=be[$];K.__webglColorRenderbuffer[$]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,K.__webglColorRenderbuffer[$]);const De=s.convert(Ie.format,Ie.encoding),Re=s.convert(Ie.type),Ue=E(Ie.internalFormat,De,Re,Ie.encoding,F.isXRRenderTarget===!0),Pe=ke(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,Pe,Ue,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+$,r.RENDERBUFFER,K.__webglColorRenderbuffer[$])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(K.__webglDepthRenderbuffer=r.createRenderbuffer(),Ze(K.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(me){t.bindTexture(r.TEXTURE_CUBE_MAP,he.__webglTexture),G(r.TEXTURE_CUBE_MAP,L,Be);for(let be=0;be<6;be++)ye(K.__webglFramebuffer[be],F,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be);I(L,Be)&&B(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Me){const be=F.texture;for(let $=0,Ie=be.length;$<Ie;$++){const De=be[$],Re=n.get(De);t.bindTexture(r.TEXTURE_2D,Re.__webglTexture),G(r.TEXTURE_2D,De,Be),ye(K.__webglFramebuffer,F,De,r.COLOR_ATTACHMENT0+$,r.TEXTURE_2D),I(De,Be)&&B(r.TEXTURE_2D)}t.unbindTexture()}else{let be=r.TEXTURE_2D;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(a?be=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(be,he.__webglTexture),G(be,L,Be),ye(K.__webglFramebuffer,F,L,r.COLOR_ATTACHMENT0,be),I(L,Be)&&B(be),t.unbindTexture()}F.depthBuffer&&ie(F)}function xe(F){const L=w(F)||a,K=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let he=0,me=K.length;he<me;he++){const Me=K[he];if(I(Me,L)){const Be=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,be=n.get(Me).__webglTexture;t.bindTexture(Be,be),B(Be),t.unbindTexture()}}}function Ge(F){if(a&&F.samples>0&&Fe(F)===!1){const L=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],K=F.width,he=F.height;let me=r.COLOR_BUFFER_BIT;const Me=[],Be=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,be=n.get(F),$=F.isWebGLMultipleRenderTargets===!0;if($)for(let Ie=0;Ie<L.length;Ie++)t.bindFramebuffer(r.FRAMEBUFFER,be.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ie,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,be.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ie,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,be.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,be.__webglFramebuffer);for(let Ie=0;Ie<L.length;Ie++){Me.push(r.COLOR_ATTACHMENT0+Ie),F.depthBuffer&&Me.push(Be);const De=be.__ignoreDepthValues!==void 0?be.__ignoreDepthValues:!1;if(De===!1&&(F.depthBuffer&&(me|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&(me|=r.STENCIL_BUFFER_BIT)),$&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,be.__webglColorRenderbuffer[Ie]),De===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Be]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Be])),$){const Re=n.get(L[Ie]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Re,0)}r.blitFramebuffer(0,0,K,he,0,0,K,he,me,r.NEAREST),p&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Me)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),$)for(let Ie=0;Ie<L.length;Ie++){t.bindFramebuffer(r.FRAMEBUFFER,be.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ie,r.RENDERBUFFER,be.__webglColorRenderbuffer[Ie]);const De=n.get(L[Ie]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,be.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ie,r.TEXTURE_2D,De,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,be.__webglMultisampledFramebuffer)}}function ke(F){return Math.min(d,F.samples)}function Fe(F){const L=n.get(F);return a&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function lt(F){const L=o.render.frame;_.get(F)!==L&&(_.set(F,L),F.update())}function ct(F,L){const K=F.encoding,he=F.format,me=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||F.format===Bo||K!==ci&&(K===xt?a===!1?e.has("EXT_sRGB")===!0&&he===nn?(F.format=Bo,F.minFilter=St,F.generateMipmaps=!1):L=Nl.sRGBToLinear(L):(he!==nn||me!==li)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",K)),L}this.allocateTextureUnit=se,this.resetTextureUnits=de,this.setTexture2D=Z,this.setTexture2DArray=fe,this.setTexture3D=ce,this.setTextureCube=_e,this.rebindTextures=pe,this.setupRenderTarget=Te,this.updateRenderTargetMipmap=xe,this.updateMultisampleRenderTarget=Ge,this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=ye,this.useMultisampledRTT=Fe}function Gu(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===li)return r.UNSIGNED_BYTE;if(s===du)return r.UNSIGNED_SHORT_4_4_4_4;if(s===fu)return r.UNSIGNED_SHORT_5_5_5_1;if(s===cu)return r.BYTE;if(s===hu)return r.SHORT;if(s===Il)return r.UNSIGNED_SHORT;if(s===uu)return r.INT;if(s===ii)return r.UNSIGNED_INT;if(s===zn)return r.FLOAT;if(s===Es)return n?r.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===pu)return r.ALPHA;if(s===nn)return r.RGBA;if(s===gu)return r.LUMINANCE;if(s===_u)return r.LUMINANCE_ALPHA;if(s===ri)return r.DEPTH_COMPONENT;if(s===Gi)return r.DEPTH_STENCIL;if(s===vu)return r.RED;if(s===mu)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),r.RGBA;if(s===Bo)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===xu)return r.RED_INTEGER;if(s===yu)return r.RG;if(s===Mu)return r.RG_INTEGER;if(s===bu)return r.RGBA_INTEGER;if(s===Ao||s===Co||s===Ro||s===Lo)if(o===xt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Ao)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Co)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ro)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Lo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Ao)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Co)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ro)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Lo)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Ka||s===$a||s===ja||s===Qa)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Ka)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===$a)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===ja)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Qa)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===wu)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===el||s===tl)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===el)return o===xt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===tl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===nl||s===il||s===sl||s===rl||s===ol||s===al||s===ll||s===cl||s===hl||s===ul||s===dl||s===fl||s===pl||s===ml)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===nl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===il)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===sl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===rl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===ol)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===al)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===ll)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===cl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===hl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===ul)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===dl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===fl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===pl)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===ml)return o===xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===gl)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===gl)return o===xt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===Ui?n?r.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Vu extends Ut{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class bs extends rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const J0={type:"move"};class Da{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new bs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new bs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new bs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,n);if(h.joints[g.jointName]===void 0){const C=new bs;C.matrixAutoUpdate=!1,C.visible=!1,h.joints[g.jointName]=C,h.add(C)}const x=h.joints[g.jointName];m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=m.radius),x.visible=m!==null}const u=h.joints["index-finger-tip"],d=h.joints["thumb-tip"],f=u.position.distanceTo(d.position),p=.02,_=.005;h.inputState.pinching&&f>p+_?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&f<=p-_&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(J0)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),h!==null&&(h.visible=o!==null),this}}class Wu extends It{constructor(e,t,n,i,s,o,a,l,h,u){if(u=u!==void 0?u:ri,u!==ri&&u!==Gi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===ri&&(n=ii),n===void 0&&u===Gi&&(n=Ui),super(null,i,s,o,a,l,u,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Ct,this.minFilter=l!==void 0?l:Ct,this.flipY=!1,this.generateMipmaps=!1}}class K0 extends Vn{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=null,h=null,u=null,d=null,f=null,p=null;const _=t.getContextAttributes();let g=null,m=null;const x=[],C=[],S=new Ut;S.layers.enable(1),S.viewport=new ht;const w=new Ut;w.layers.enable(2),w.viewport=new ht;const R=[S,w],I=new Vu;I.layers.enable(1),I.layers.enable(2);let B=null,E=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let Z=x[W];return Z===void 0&&(Z=new Da,x[W]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(W){let Z=x[W];return Z===void 0&&(Z=new Da,x[W]=Z),Z.getGripSpace()},this.getHand=function(W){let Z=x[W];return Z===void 0&&(Z=new Da,x[W]=Z),Z.getHandSpace()};function O(W){const Z=C.indexOf(W.inputSource);if(Z===-1)return;const fe=x[Z];fe!==void 0&&fe.dispatchEvent({type:W.type,data:W.inputSource})}function z(){i.removeEventListener("select",O),i.removeEventListener("selectstart",O),i.removeEventListener("selectend",O),i.removeEventListener("squeeze",O),i.removeEventListener("squeezestart",O),i.removeEventListener("squeezeend",O),i.removeEventListener("end",z),i.removeEventListener("inputsourceschange",J);for(let W=0;W<x.length;W++){const Z=C[W];Z!==null&&(C[W]=null,x[W].disconnect(Z))}B=null,E=null,e.setRenderTarget(g),f=null,d=null,u=null,i=null,m=null,se.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){s=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){a=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(W){l=W},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(W){if(i=W,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",O),i.addEventListener("selectstart",O),i.addEventListener("selectend",O),i.addEventListener("squeeze",O),i.addEventListener("squeezestart",O),i.addEventListener("squeezeend",O),i.addEventListener("end",z),i.addEventListener("inputsourceschange",J),_.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Z={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,Z),i.updateRenderState({baseLayer:f}),m=new fn(f.framebufferWidth,f.framebufferHeight,{format:nn,type:li,encoding:e.outputEncoding,stencilBuffer:_.stencil})}else{let Z=null,fe=null,ce=null;_.depth&&(ce=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Z=_.stencil?Gi:ri,fe=_.stencil?Ui:ii);const _e={colorFormat:t.RGBA8,depthFormat:ce,scaleFactor:s};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(_e),i.updateRenderState({layers:[d]}),m=new fn(d.textureWidth,d.textureHeight,{format:nn,type:li,depthTexture:new Wu(d.textureWidth,d.textureHeight,fe,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0});const Ee=e.properties.get(m);Ee.__ignoreDepthValues=d.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),se.setContext(i),se.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function J(W){for(let Z=0;Z<W.removed.length;Z++){const fe=W.removed[Z],ce=C.indexOf(fe);ce>=0&&(C[ce]=null,x[ce].dispatchEvent({type:"disconnected",data:fe}))}for(let Z=0;Z<W.added.length;Z++){const fe=W.added[Z];let ce=C.indexOf(fe);if(ce===-1){for(let Ee=0;Ee<x.length;Ee++)if(Ee>=C.length){C.push(fe),ce=Ee;break}else if(C[Ee]===null){C[Ee]=fe,ce=Ee;break}if(ce===-1)break}const _e=x[ce];_e&&_e.dispatchEvent({type:"connected",data:fe})}}const le=new N,Y=new N;function H(W,Z,fe){le.setFromMatrixPosition(Z.matrixWorld),Y.setFromMatrixPosition(fe.matrixWorld);const ce=le.distanceTo(Y),_e=Z.projectionMatrix.elements,Ee=fe.projectionMatrix.elements,ze=_e[14]/(_e[10]-1),G=_e[14]/(_e[10]+1),Ye=(_e[9]+1)/_e[5],Ne=(_e[9]-1)/_e[5],He=(_e[8]-1)/_e[0],ye=(Ee[8]+1)/Ee[0],Ze=ze*He,re=ze*ye,ie=ce/(-He+ye),pe=ie*-He;Z.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(pe),W.translateZ(ie),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const Te=ze+ie,xe=G+ie,Ge=Ze-pe,ke=re+(ce-pe),Fe=Ye*G/xe*Te,lt=Ne*G/xe*Te;W.projectionMatrix.makePerspective(Ge,ke,Fe,lt,Te,xe)}function te(W,Z){Z===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(Z.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(i===null)return;I.near=w.near=S.near=W.near,I.far=w.far=S.far=W.far,(B!==I.near||E!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),B=I.near,E=I.far);const Z=W.parent,fe=I.cameras;te(I,Z);for(let _e=0;_e<fe.length;_e++)te(fe[_e],Z);I.matrixWorld.decompose(I.position,I.quaternion,I.scale),W.matrix.copy(I.matrix),W.matrix.decompose(W.position,W.quaternion,W.scale);const ce=W.children;for(let _e=0,Ee=ce.length;_e<Ee;_e++)ce[_e].updateMatrixWorld(!0);fe.length===2?H(I,S,w):I.projectionMatrix.copy(S.projectionMatrix)},this.getCamera=function(){return I},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(W){d!==null&&(d.fixedFoveation=W),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=W)};let X=null;function de(W,Z){if(h=Z.getViewerPose(l||o),p=Z,h!==null){const fe=h.views;f!==null&&(e.setRenderTargetFramebuffer(m,f.framebuffer),e.setRenderTarget(m));let ce=!1;fe.length!==I.cameras.length&&(I.cameras.length=0,ce=!0);for(let _e=0;_e<fe.length;_e++){const Ee=fe[_e];let ze=null;if(f!==null)ze=f.getViewport(Ee);else{const Ye=u.getViewSubImage(d,Ee);ze=Ye.viewport,_e===0&&(e.setRenderTargetTextures(m,Ye.colorTexture,d.ignoreDepthValues?void 0:Ye.depthStencilTexture),e.setRenderTarget(m))}let G=R[_e];G===void 0&&(G=new Ut,G.layers.enable(_e),G.viewport=new ht,R[_e]=G),G.matrix.fromArray(Ee.transform.matrix),G.projectionMatrix.fromArray(Ee.projectionMatrix),G.viewport.set(ze.x,ze.y,ze.width,ze.height),_e===0&&I.matrix.copy(G.matrix),ce===!0&&I.cameras.push(G)}}for(let fe=0;fe<x.length;fe++){const ce=C[fe],_e=x[fe];ce!==null&&_e!==void 0&&_e.update(ce,Z,l||o)}X&&X(W,Z),p=null}const se=new Uu;se.setAnimationLoop(de),this.setAnimationLoop=function(W){X=W},this.dispose=function(){}}}function $0(r,e){function t(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,C,S){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),h(g,m)):m.isMeshStandardMaterial?(i(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,S)):m.isMeshMatcapMaterial?(i(g,m),p(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),_(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(s(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,x,C):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===sn&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===sn&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=e.get(m).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const w=r.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*w}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let C;m.map?C=m.map:m.specularMap?C=m.specularMap:m.displacementMap?C=m.displacementMap:m.normalMap?C=m.normalMap:m.bumpMap?C=m.bumpMap:m.roughnessMap?C=m.roughnessMap:m.metalnessMap?C=m.metalnessMap:m.alphaMap?C=m.alphaMap:m.emissiveMap?C=m.emissiveMap:m.clearcoatMap?C=m.clearcoatMap:m.clearcoatNormalMap?C=m.clearcoatNormalMap:m.clearcoatRoughnessMap?C=m.clearcoatRoughnessMap:m.iridescenceMap?C=m.iridescenceMap:m.iridescenceThicknessMap?C=m.iridescenceThicknessMap:m.specularIntensityMap?C=m.specularIntensityMap:m.specularColorMap?C=m.specularColorMap:m.transmissionMap?C=m.transmissionMap:m.thicknessMap?C=m.thicknessMap:m.sheenColorMap?C=m.sheenColorMap:m.sheenRoughnessMap&&(C=m.sheenRoughnessMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),g.uvTransform.value.copy(C.matrix));let S;m.aoMap?S=m.aoMap:m.lightMap&&(S=m.lightMap),S!==void 0&&(S.isWebGLRenderTarget&&(S=S.texture),S.matrixAutoUpdate===!0&&S.updateMatrix(),g.uv2Transform.value.copy(S.matrix))}function s(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,x,C){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=C*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let S;m.map?S=m.map:m.alphaMap&&(S=m.alphaMap),S!==void 0&&(S.matrixAutoUpdate===!0&&S.updateMatrix(),g.uvTransform.value.copy(S.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function h(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===sn&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function j0(r,e,t,n){let i={},s={},o=[];const a=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(C,S){const w=S.program;n.uniformBlockBinding(C,w)}function h(C,S){let w=i[C.id];w===void 0&&(_(C),w=u(C),i[C.id]=w,C.addEventListener("dispose",m));const R=S.program;n.updateUBOMapping(C,R);const I=e.render.frame;s[C.id]!==I&&(f(C),s[C.id]=I)}function u(C){const S=d();C.__bindingPointIndex=S;const w=r.createBuffer(),R=C.__size,I=C.usage;return r.bindBuffer(r.UNIFORM_BUFFER,w),r.bufferData(r.UNIFORM_BUFFER,R,I),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,S,w),w}function d(){for(let C=0;C<a;C++)if(o.indexOf(C)===-1)return o.push(C),C;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(C){const S=i[C.id],w=C.uniforms,R=C.__cache;r.bindBuffer(r.UNIFORM_BUFFER,S);for(let I=0,B=w.length;I<B;I++){const E=w[I];if(p(E,I,R)===!0){const O=E.value,z=E.__offset;typeof O=="number"?(E.__data[0]=O,r.bufferSubData(r.UNIFORM_BUFFER,z,E.__data)):(E.value.isMatrix3?(E.__data[0]=E.value.elements[0],E.__data[1]=E.value.elements[1],E.__data[2]=E.value.elements[2],E.__data[3]=E.value.elements[0],E.__data[4]=E.value.elements[3],E.__data[5]=E.value.elements[4],E.__data[6]=E.value.elements[5],E.__data[7]=E.value.elements[0],E.__data[8]=E.value.elements[6],E.__data[9]=E.value.elements[7],E.__data[10]=E.value.elements[8],E.__data[11]=E.value.elements[0]):O.toArray(E.__data),r.bufferSubData(r.UNIFORM_BUFFER,z,E.__data))}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function p(C,S,w){const R=C.value;if(w[S]===void 0)return typeof R=="number"?w[S]=R:w[S]=R.clone(),!0;if(typeof R=="number"){if(w[S]!==R)return w[S]=R,!0}else{const I=w[S];if(I.equals(R)===!1)return I.copy(R),!0}return!1}function _(C){const S=C.uniforms;let w=0;const R=16;let I=0;for(let B=0,E=S.length;B<E;B++){const O=S[B],z=g(O);if(O.__data=new Float32Array(z.storage/Float32Array.BYTES_PER_ELEMENT),O.__offset=w,B>0){I=w%R;const J=R-I;I!==0&&J-z.boundary<0&&(w+=R-I,O.__offset=w)}w+=z.storage}return I=w%R,I>0&&(w+=R-I),C.__size=w,C.__cache={},this}function g(C){const S=C.value,w={boundary:0,storage:0};return typeof S=="number"?(w.boundary=4,w.storage=4):S.isVector2?(w.boundary=8,w.storage=8):S.isVector3||S.isColor?(w.boundary=16,w.storage=12):S.isVector4?(w.boundary=16,w.storage=16):S.isMatrix3?(w.boundary=48,w.storage=48):S.isMatrix4?(w.boundary=64,w.storage=64):S.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",S),w}function m(C){const S=C.target;S.removeEventListener("dispose",m);const w=o.indexOf(S.__bindingPointIndex);o.splice(w,1),r.deleteBuffer(i[S.id]),delete i[S.id],delete s[S.id]}function x(){for(const C in i)r.deleteBuffer(i[C]);o=[],i={},s={}}return{bind:l,update:h,dispose:x}}function Q0(){const r=hr("canvas");return r.style.display="block",r}function Xu(r={}){this.isWebGLRenderer=!0;const e=r.canvas!==void 0?r.canvas:Q0(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",h=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let d=null,f=null;const p=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ci,this.physicallyCorrectLights=!1,this.toneMapping=En,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,x=0,C=0,S=null,w=-1,R=null;const I=new ht,B=new ht;let E=null,O=e.width,z=e.height,J=1,le=null,Y=null;const H=new ht(0,0,O,z),te=new ht(0,0,O,z);let X=!1;const de=new qo;let se=!1,W=!1,Z=null;const fe=new Xe,ce=new ae,_e=new N,Ee={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ze(){return S===null?J:1}let G=t;function Ye(D,q){for(let ee=0;ee<D.length;ee++){const V=D[ee],ne=e.getContext(V,q);if(ne!==null)return ne}return null}try{const D={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ko}`),e.addEventListener("webglcontextlost",Ue,!1),e.addEventListener("webglcontextrestored",Pe,!1),e.addEventListener("webglcontextcreationerror",Qe,!1),G===null){const q=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&q.shift(),G=Ye(q,D),G===null)throw Ye(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}G.getShaderPrecisionFormat===void 0&&(G.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let Ne,He,ye,Ze,re,ie,pe,Te,xe,Ge,ke,Fe,lt,ct,F,L,K,he,me,Me,Be,be,$,Ie;function De(){Ne=new m_(G),He=new c_(G,Ne,r),Ne.init(He),be=new Gu(G,Ne,He),ye=new Y0(G,Ne,He),Ze=new v_(G),re=new N0,ie=new Z0(G,Ne,ye,re,He,be,Ze),pe=new u_(g),Te=new p_(g),xe=new Ap(G,He),$=new a_(G,Ne,xe,He),Ge=new g_(G,xe,Ze,$),ke=new b_(G,Ge,xe,Ze),me=new M_(G,He,ie),L=new h_(re),Fe=new O0(g,pe,Te,Ne,He,$,L),lt=new $0(g,re),ct=new U0,F=new V0(Ne,He),he=new o_(g,pe,Te,ye,ke,u,o),K=new q0(g,ke,He),Ie=new j0(G,Ze,He,ye),Me=new l_(G,Ne,Ze,He),Be=new __(G,Ne,Ze,He),Ze.programs=Fe.programs,g.capabilities=He,g.extensions=Ne,g.properties=re,g.renderLists=ct,g.shadowMap=K,g.state=ye,g.info=Ze}De();const Re=new K0(g,G);this.xr=Re,this.getContext=function(){return G},this.getContextAttributes=function(){return G.getContextAttributes()},this.forceContextLoss=function(){const D=Ne.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=Ne.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return J},this.setPixelRatio=function(D){D!==void 0&&(J=D,this.setSize(O,z,!1))},this.getSize=function(D){return D.set(O,z)},this.setSize=function(D,q,ee){if(Re.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=D,z=q,e.width=Math.floor(D*J),e.height=Math.floor(q*J),ee!==!1&&(e.style.width=D+"px",e.style.height=q+"px"),this.setViewport(0,0,D,q)},this.getDrawingBufferSize=function(D){return D.set(O*J,z*J).floor()},this.setDrawingBufferSize=function(D,q,ee){O=D,z=q,J=ee,e.width=Math.floor(D*ee),e.height=Math.floor(q*ee),this.setViewport(0,0,D,q)},this.getCurrentViewport=function(D){return D.copy(I)},this.getViewport=function(D){return D.copy(H)},this.setViewport=function(D,q,ee,V){D.isVector4?H.set(D.x,D.y,D.z,D.w):H.set(D,q,ee,V),ye.viewport(I.copy(H).multiplyScalar(J).floor())},this.getScissor=function(D){return D.copy(te)},this.setScissor=function(D,q,ee,V){D.isVector4?te.set(D.x,D.y,D.z,D.w):te.set(D,q,ee,V),ye.scissor(B.copy(te).multiplyScalar(J).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(D){ye.setScissorTest(X=D)},this.setOpaqueSort=function(D){le=D},this.setTransparentSort=function(D){Y=D},this.getClearColor=function(D){return D.copy(he.getClearColor())},this.setClearColor=function(){he.setClearColor.apply(he,arguments)},this.getClearAlpha=function(){return he.getClearAlpha()},this.setClearAlpha=function(){he.setClearAlpha.apply(he,arguments)},this.clear=function(D=!0,q=!0,ee=!0){let V=0;D&&(V|=G.COLOR_BUFFER_BIT),q&&(V|=G.DEPTH_BUFFER_BIT),ee&&(V|=G.STENCIL_BUFFER_BIT),G.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ue,!1),e.removeEventListener("webglcontextrestored",Pe,!1),e.removeEventListener("webglcontextcreationerror",Qe,!1),ct.dispose(),F.dispose(),re.dispose(),pe.dispose(),Te.dispose(),ke.dispose(),$.dispose(),Ie.dispose(),Fe.dispose(),Re.dispose(),Re.removeEventListener("sessionstart",we),Re.removeEventListener("sessionend",Le),Z&&(Z.dispose(),Z=null),et.stop()};function Ue(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Pe(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const D=Ze.autoReset,q=K.enabled,ee=K.autoUpdate,V=K.needsUpdate,ne=K.type;De(),Ze.autoReset=D,K.enabled=q,K.autoUpdate=ee,K.needsUpdate=V,K.type=ne}function Qe(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function ft(D){const q=D.target;q.removeEventListener("dispose",ft),ot(q)}function ot(D){k(D),re.remove(D)}function k(D){const q=re.get(D).programs;q!==void 0&&(q.forEach(function(ee){Fe.releaseProgram(ee)}),D.isShaderMaterial&&Fe.releaseShaderCache(D))}this.renderBufferDirect=function(D,q,ee,V,ne,Ae){q===null&&(q=Ee);const Oe=ne.isMesh&&ne.matrixWorld.determinant()<0,Je=Fr(D,q,ee,V,ne);ye.setMaterial(V,Oe);let qe=ee.index;const tt=ee.attributes.position;if(qe===null){if(tt===void 0||tt.count===0)return}else if(qe.count===0)return;let je=1;V.wireframe===!0&&(qe=Ge.getWireframeAttribute(ee),je=2),$.setup(ne,V,Je,ee,qe);let nt,pt=Me;qe!==null&&(nt=xe.get(qe),pt=Be,pt.setIndex(nt));const an=qe!==null?qe.count:tt.count,$t=ee.drawRange.start*je,Xn=ee.drawRange.count*je,Yt=Ae!==null?Ae.start*je:0,st=Ae!==null?Ae.count*je:1/0,qn=Math.max($t,Yt),_t=Math.min(an,$t+Xn,Yt+st)-1,Vt=Math.max(0,_t-qn+1);if(Vt!==0){if(ne.isMesh)V.wireframe===!0?(ye.setLineWidth(V.wireframeLinewidth*ze()),pt.setMode(G.LINES)):pt.setMode(G.TRIANGLES);else if(ne.isLine){let zt=V.linewidth;zt===void 0&&(zt=1),ye.setLineWidth(zt*ze()),ne.isLineSegments?pt.setMode(G.LINES):ne.isLineLoop?pt.setMode(G.LINE_LOOP):pt.setMode(G.LINE_STRIP)}else ne.isPoints?pt.setMode(G.POINTS):ne.isSprite&&pt.setMode(G.TRIANGLES);if(ne.isInstancedMesh)pt.renderInstances(qn,Vt,ne.count);else if(ee.isInstancedBufferGeometry){const zt=Math.min(ee.instanceCount,ee._maxInstanceCount);pt.renderInstances(qn,Vt,zt)}else pt.render(qn,Vt)}},this.compile=function(D,q){function ee(V,ne,Ae){V.transparent===!0&&V.side===Bn?(V.side=sn,V.needsUpdate=!0,vt(V,ne,Ae),V.side=Hi,V.needsUpdate=!0,vt(V,ne,Ae),V.side=Bn):vt(V,ne,Ae)}f=F.get(D),f.init(),_.push(f),D.traverseVisible(function(V){V.isLight&&V.layers.test(q.layers)&&(f.pushLight(V),V.castShadow&&f.pushShadow(V))}),f.setupLights(g.physicallyCorrectLights),D.traverse(function(V){const ne=V.material;if(ne)if(Array.isArray(ne))for(let Ae=0;Ae<ne.length;Ae++){const Oe=ne[Ae];ee(Oe,D,V)}else ee(ne,D,V)}),_.pop(),f=null};let j=null;function ue(D){j&&j(D)}function we(){et.stop()}function Le(){et.start()}const et=new Uu;et.setAnimationLoop(ue),typeof self!="undefined"&&et.setContext(self),this.setAnimationLoop=function(D){j=D,Re.setAnimationLoop(D),D===null?et.stop():et.start()},Re.addEventListener("sessionstart",we),Re.addEventListener("sessionend",Le),this.render=function(D,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),Re.enabled===!0&&Re.isPresenting===!0&&(Re.cameraAutoUpdate===!0&&Re.updateCamera(q),q=Re.getCamera()),D.isScene===!0&&D.onBeforeRender(g,D,q,S),f=F.get(D,_.length),f.init(),_.push(f),fe.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),de.setFromProjectionMatrix(fe),W=this.localClippingEnabled,se=L.init(this.clippingPlanes,W,q),d=ct.get(D,p.length),d.init(),p.push(d),bt(D,q,0,g.sortObjects),d.finish(),g.sortObjects===!0&&d.sort(le,Y),se===!0&&L.beginShadows();const ee=f.state.shadowsArray;if(K.render(ee,D,q),se===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),he.render(d,D),f.setupLights(g.physicallyCorrectLights),q.isArrayCamera){const V=q.cameras;for(let ne=0,Ae=V.length;ne<Ae;ne++){const Oe=V[ne];ut(d,D,Oe,Oe.viewport)}}else ut(d,D,q);S!==null&&(ie.updateMultisampleRenderTarget(S),ie.updateRenderTargetMipmap(S)),D.isScene===!0&&D.onAfterRender(g,D,q),$.resetDefaultState(),w=-1,R=null,_.pop(),_.length>0?f=_[_.length-1]:f=null,p.pop(),p.length>0?d=p[p.length-1]:d=null};function bt(D,q,ee,V){if(D.visible===!1)return;if(D.layers.test(q.layers)){if(D.isGroup)ee=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(q);else if(D.isLight)f.pushLight(D),D.castShadow&&f.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||de.intersectsSprite(D)){V&&_e.setFromMatrixPosition(D.matrixWorld).applyMatrix4(fe);const Oe=ke.update(D),Je=D.material;Je.visible&&d.push(D,Oe,Je,ee,_e.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(D.isSkinnedMesh&&D.skeleton.frame!==Ze.render.frame&&(D.skeleton.update(),D.skeleton.frame=Ze.render.frame),!D.frustumCulled||de.intersectsObject(D))){V&&_e.setFromMatrixPosition(D.matrixWorld).applyMatrix4(fe);const Oe=ke.update(D),Je=D.material;if(Array.isArray(Je)){const qe=Oe.groups;for(let tt=0,je=qe.length;tt<je;tt++){const nt=qe[tt],pt=Je[nt.materialIndex];pt&&pt.visible&&d.push(D,Oe,pt,ee,_e.z,nt)}}else Je.visible&&d.push(D,Oe,Je,ee,_e.z,null)}}const Ae=D.children;for(let Oe=0,Je=Ae.length;Oe<Je;Oe++)bt(Ae[Oe],q,ee,V)}function ut(D,q,ee,V){const ne=D.opaque,Ae=D.transmissive,Oe=D.transparent;f.setupLightsView(ee),Ae.length>0&&bn(ne,q,ee),V&&ye.viewport(I.copy(V)),ne.length>0&&dt(ne,q,ee),Ae.length>0&&dt(Ae,q,ee),Oe.length>0&&dt(Oe,q,ee),ye.buffers.depth.setTest(!0),ye.buffers.depth.setMask(!0),ye.buffers.color.setMask(!0),ye.setPolygonOffset(!1)}function bn(D,q,ee){const V=He.isWebGL2;Z===null&&(Z=new fn(1,1,{generateMipmaps:!0,type:Ne.has("EXT_color_buffer_half_float")?Es:li,minFilter:qi,samples:V&&s===!0?4:0})),g.getDrawingBufferSize(ce),V?Z.setSize(ce.x,ce.y):Z.setSize(zo(ce.x),zo(ce.y));const ne=g.getRenderTarget();g.setRenderTarget(Z),g.clear();const Ae=g.toneMapping;g.toneMapping=En,dt(D,q,ee),g.toneMapping=Ae,ie.updateMultisampleRenderTarget(Z),ie.updateRenderTargetMipmap(Z),g.setRenderTarget(ne)}function dt(D,q,ee){const V=q.isScene===!0?q.overrideMaterial:null;for(let ne=0,Ae=D.length;ne<Ae;ne++){const Oe=D[ne],Je=Oe.object,qe=Oe.geometry,tt=V===null?Oe.material:V,je=Oe.group;Je.layers.test(ee.layers)&&Kt(Je,q,ee,qe,tt,je)}}function Kt(D,q,ee,V,ne,Ae){D.onBeforeRender(g,q,ee,V,ne,Ae),D.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),ne.onBeforeRender(g,q,ee,V,D,Ae),ne.transparent===!0&&ne.side===Bn?(ne.side=sn,ne.needsUpdate=!0,g.renderBufferDirect(ee,q,V,ne,D,Ae),ne.side=Hi,ne.needsUpdate=!0,g.renderBufferDirect(ee,q,V,ne,D,Ae),ne.side=Bn):g.renderBufferDirect(ee,q,V,ne,D,Ae),D.onAfterRender(g,q,ee,V,ne,Ae)}function vt(D,q,ee){q.isScene!==!0&&(q=Ee);const V=re.get(D),ne=f.state.lights,Ae=f.state.shadowsArray,Oe=ne.state.version,Je=Fe.getParameters(D,ne.state,Ae,q,ee),qe=Fe.getProgramCacheKey(Je);let tt=V.programs;V.environment=D.isMeshStandardMaterial?q.environment:null,V.fog=q.fog,V.envMap=(D.isMeshStandardMaterial?Te:pe).get(D.envMap||V.environment),tt===void 0&&(D.addEventListener("dispose",ft),tt=new Map,V.programs=tt);let je=tt.get(qe);if(je!==void 0){if(V.currentProgram===je&&V.lightsStateVersion===Oe)return ji(D,Je),je}else Je.uniforms=Fe.getUniforms(D),D.onBuild(ee,Je,g),D.onBeforeCompile(Je,g),je=Fe.acquireProgram(Je,qe),tt.set(qe,je),V.uniforms=Je.uniforms;const nt=V.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(nt.clippingPlanes=L.uniform),ji(D,Je),V.needsLights=mi(D),V.lightsStateVersion=Oe,V.needsLights&&(nt.ambientLightColor.value=ne.state.ambient,nt.lightProbe.value=ne.state.probe,nt.directionalLights.value=ne.state.directional,nt.directionalLightShadows.value=ne.state.directionalShadow,nt.spotLights.value=ne.state.spot,nt.spotLightShadows.value=ne.state.spotShadow,nt.rectAreaLights.value=ne.state.rectArea,nt.ltc_1.value=ne.state.rectAreaLTC1,nt.ltc_2.value=ne.state.rectAreaLTC2,nt.pointLights.value=ne.state.point,nt.pointLightShadows.value=ne.state.pointShadow,nt.hemisphereLights.value=ne.state.hemi,nt.directionalShadowMap.value=ne.state.directionalShadowMap,nt.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,nt.spotShadowMap.value=ne.state.spotShadowMap,nt.spotLightMatrix.value=ne.state.spotLightMatrix,nt.spotLightMap.value=ne.state.spotLightMap,nt.pointShadowMap.value=ne.state.pointShadowMap,nt.pointShadowMatrix.value=ne.state.pointShadowMatrix);const pt=je.getUniforms(),an=Oo.seqWithValue(pt.seq,nt);return V.currentProgram=je,V.uniformsList=an,je}function ji(D,q){const ee=re.get(D);ee.outputEncoding=q.outputEncoding,ee.instancing=q.instancing,ee.skinning=q.skinning,ee.morphTargets=q.morphTargets,ee.morphNormals=q.morphNormals,ee.morphColors=q.morphColors,ee.morphTargetsCount=q.morphTargetsCount,ee.numClippingPlanes=q.numClippingPlanes,ee.numIntersection=q.numClipIntersection,ee.vertexAlphas=q.vertexAlphas,ee.vertexTangents=q.vertexTangents,ee.toneMapping=q.toneMapping}function Fr(D,q,ee,V,ne){q.isScene!==!0&&(q=Ee),ie.resetTextureUnits();const Ae=q.fog,Oe=V.isMeshStandardMaterial?q.environment:null,Je=S===null?g.outputEncoding:S.isXRRenderTarget===!0?S.texture.encoding:ci,qe=(V.isMeshStandardMaterial?Te:pe).get(V.envMap||Oe),tt=V.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,je=!!V.normalMap&&!!ee.attributes.tangent,nt=!!ee.morphAttributes.position,pt=!!ee.morphAttributes.normal,an=!!ee.morphAttributes.color,$t=V.toneMapped?g.toneMapping:En,Xn=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,Yt=Xn!==void 0?Xn.length:0,st=re.get(V),qn=f.state.lights;if(se===!0&&(W===!0||D!==R)){const Ft=D===R&&V.id===w;L.setState(V,D,Ft)}let _t=!1;V.version===st.__version?(st.needsLights&&st.lightsStateVersion!==qn.state.version||st.outputEncoding!==Je||ne.isInstancedMesh&&st.instancing===!1||!ne.isInstancedMesh&&st.instancing===!0||ne.isSkinnedMesh&&st.skinning===!1||!ne.isSkinnedMesh&&st.skinning===!0||st.envMap!==qe||V.fog===!0&&st.fog!==Ae||st.numClippingPlanes!==void 0&&(st.numClippingPlanes!==L.numPlanes||st.numIntersection!==L.numIntersection)||st.vertexAlphas!==tt||st.vertexTangents!==je||st.morphTargets!==nt||st.morphNormals!==pt||st.morphColors!==an||st.toneMapping!==$t||He.isWebGL2===!0&&st.morphTargetsCount!==Yt)&&(_t=!0):(_t=!0,st.__version=V.version);let Vt=st.currentProgram;_t===!0&&(Vt=vt(V,q,ne));let zt=!1,gi=!1,_i=!1;const Tt=Vt.getUniforms(),jt=st.uniforms;if(ye.useProgram(Vt.program)&&(zt=!0,gi=!0,_i=!0),V.id!==w&&(w=V.id,gi=!0),zt||R!==D){if(Tt.setValue(G,"projectionMatrix",D.projectionMatrix),He.logarithmicDepthBuffer&&Tt.setValue(G,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),R!==D&&(R=D,gi=!0,_i=!0),V.isShaderMaterial||V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshStandardMaterial||V.envMap){const Ft=Tt.map.cameraPosition;Ft!==void 0&&Ft.setValue(G,_e.setFromMatrixPosition(D.matrixWorld))}(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&Tt.setValue(G,"isOrthographic",D.isOrthographicCamera===!0),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial||V.isShadowMaterial||ne.isSkinnedMesh)&&Tt.setValue(G,"viewMatrix",D.matrixWorldInverse)}if(ne.isSkinnedMesh){Tt.setOptional(G,ne,"bindMatrix"),Tt.setOptional(G,ne,"bindMatrixInverse");const Ft=ne.skeleton;Ft&&(He.floatVertexTextures?(Ft.boneTexture===null&&Ft.computeBoneTexture(),Tt.setValue(G,"boneTexture",Ft.boneTexture,ie),Tt.setValue(G,"boneTextureSize",Ft.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const vi=ee.morphAttributes;if((vi.position!==void 0||vi.normal!==void 0||vi.color!==void 0&&He.isWebGL2===!0)&&me.update(ne,ee,V,Vt),(gi||st.receiveShadow!==ne.receiveShadow)&&(st.receiveShadow=ne.receiveShadow,Tt.setValue(G,"receiveShadow",ne.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(jt.envMap.value=qe,jt.flipEnvMap.value=qe.isCubeTexture&&qe.isRenderTargetTexture===!1?-1:1),gi&&(Tt.setValue(G,"toneMappingExposure",g.toneMappingExposure),st.needsLights&&Fs(jt,_i),Ae&&V.fog===!0&&lt.refreshFogUniforms(jt,Ae),lt.refreshMaterialUniforms(jt,V,J,z,Z),Oo.upload(G,st.uniformsList,jt,ie)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(Oo.upload(G,st.uniformsList,jt,ie),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&Tt.setValue(G,"center",ne.center),Tt.setValue(G,"modelViewMatrix",ne.modelViewMatrix),Tt.setValue(G,"normalMatrix",ne.normalMatrix),Tt.setValue(G,"modelMatrix",ne.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){const Ft=V.uniformsGroups;for(let xi=0,Us=Ft.length;xi<Us;xi++)if(He.isWebGL2){const Qi=Ft[xi];Ie.update(Qi,Vt),Ie.bind(Qi,Vt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Vt}function Fs(D,q){D.ambientLightColor.needsUpdate=q,D.lightProbe.needsUpdate=q,D.directionalLights.needsUpdate=q,D.directionalLightShadows.needsUpdate=q,D.pointLights.needsUpdate=q,D.pointLightShadows.needsUpdate=q,D.spotLights.needsUpdate=q,D.spotLightShadows.needsUpdate=q,D.rectAreaLights.needsUpdate=q,D.hemisphereLights.needsUpdate=q}function mi(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(D,q,ee){re.get(D.texture).__webglTexture=q,re.get(D.depthTexture).__webglTexture=ee;const V=re.get(D);V.__hasExternalTextures=!0,V.__hasExternalTextures&&(V.__autoAllocateDepthBuffer=ee===void 0,V.__autoAllocateDepthBuffer||Ne.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),V.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,q){const ee=re.get(D);ee.__webglFramebuffer=q,ee.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(D,q=0,ee=0){S=D,x=q,C=ee;let V=!0,ne=null,Ae=!1,Oe=!1;if(D){const qe=re.get(D);qe.__useDefaultFramebuffer!==void 0?(ye.bindFramebuffer(G.FRAMEBUFFER,null),V=!1):qe.__webglFramebuffer===void 0?ie.setupRenderTarget(D):qe.__hasExternalTextures&&ie.rebindTextures(D,re.get(D.texture).__webglTexture,re.get(D.depthTexture).__webglTexture);const tt=D.texture;(tt.isData3DTexture||tt.isDataArrayTexture||tt.isCompressedArrayTexture)&&(Oe=!0);const je=re.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(ne=je[q],Ae=!0):He.isWebGL2&&D.samples>0&&ie.useMultisampledRTT(D)===!1?ne=re.get(D).__webglMultisampledFramebuffer:ne=je,I.copy(D.viewport),B.copy(D.scissor),E=D.scissorTest}else I.copy(H).multiplyScalar(J).floor(),B.copy(te).multiplyScalar(J).floor(),E=X;if(ye.bindFramebuffer(G.FRAMEBUFFER,ne)&&He.drawBuffers&&V&&ye.drawBuffers(D,ne),ye.viewport(I),ye.scissor(B),ye.setScissorTest(E),Ae){const qe=re.get(D.texture);G.framebufferTexture2D(G.FRAMEBUFFER,G.COLOR_ATTACHMENT0,G.TEXTURE_CUBE_MAP_POSITIVE_X+q,qe.__webglTexture,ee)}else if(Oe){const qe=re.get(D.texture),tt=q||0;G.framebufferTextureLayer(G.FRAMEBUFFER,G.COLOR_ATTACHMENT0,qe.__webglTexture,ee||0,tt)}w=-1},this.readRenderTargetPixels=function(D,q,ee,V,ne,Ae,Oe){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Je=re.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Oe!==void 0&&(Je=Je[Oe]),Je){ye.bindFramebuffer(G.FRAMEBUFFER,Je);try{const qe=D.texture,tt=qe.format,je=qe.type;if(tt!==nn&&be.convert(tt)!==G.getParameter(G.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const nt=je===Es&&(Ne.has("EXT_color_buffer_half_float")||He.isWebGL2&&Ne.has("EXT_color_buffer_float"));if(je!==li&&be.convert(je)!==G.getParameter(G.IMPLEMENTATION_COLOR_READ_TYPE)&&!(je===zn&&(He.isWebGL2||Ne.has("OES_texture_float")||Ne.has("WEBGL_color_buffer_float")))&&!nt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=D.width-V&&ee>=0&&ee<=D.height-ne&&G.readPixels(q,ee,V,ne,be.convert(tt),be.convert(je),Ae)}finally{const qe=S!==null?re.get(S).__webglFramebuffer:null;ye.bindFramebuffer(G.FRAMEBUFFER,qe)}}},this.copyFramebufferToTexture=function(D,q,ee=0){const V=Math.pow(2,-ee),ne=Math.floor(q.image.width*V),Ae=Math.floor(q.image.height*V);ie.setTexture2D(q,0),G.copyTexSubImage2D(G.TEXTURE_2D,ee,0,0,D.x,D.y,ne,Ae),ye.unbindTexture()},this.copyTextureToTexture=function(D,q,ee,V=0){const ne=q.image.width,Ae=q.image.height,Oe=be.convert(ee.format),Je=be.convert(ee.type);ie.setTexture2D(ee,0),G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,ee.flipY),G.pixelStorei(G.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),G.pixelStorei(G.UNPACK_ALIGNMENT,ee.unpackAlignment),q.isDataTexture?G.texSubImage2D(G.TEXTURE_2D,V,D.x,D.y,ne,Ae,Oe,Je,q.image.data):q.isCompressedTexture?G.compressedTexSubImage2D(G.TEXTURE_2D,V,D.x,D.y,q.mipmaps[0].width,q.mipmaps[0].height,Oe,q.mipmaps[0].data):G.texSubImage2D(G.TEXTURE_2D,V,D.x,D.y,Oe,Je,q.image),V===0&&ee.generateMipmaps&&G.generateMipmap(G.TEXTURE_2D),ye.unbindTexture()},this.copyTextureToTexture3D=function(D,q,ee,V,ne=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ae=D.max.x-D.min.x+1,Oe=D.max.y-D.min.y+1,Je=D.max.z-D.min.z+1,qe=be.convert(V.format),tt=be.convert(V.type);let je;if(V.isData3DTexture)ie.setTexture3D(V,0),je=G.TEXTURE_3D;else if(V.isDataArrayTexture)ie.setTexture2DArray(V,0),je=G.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,V.flipY),G.pixelStorei(G.UNPACK_PREMULTIPLY_ALPHA_WEBGL,V.premultiplyAlpha),G.pixelStorei(G.UNPACK_ALIGNMENT,V.unpackAlignment);const nt=G.getParameter(G.UNPACK_ROW_LENGTH),pt=G.getParameter(G.UNPACK_IMAGE_HEIGHT),an=G.getParameter(G.UNPACK_SKIP_PIXELS),$t=G.getParameter(G.UNPACK_SKIP_ROWS),Xn=G.getParameter(G.UNPACK_SKIP_IMAGES),Yt=ee.isCompressedTexture?ee.mipmaps[0]:ee.image;G.pixelStorei(G.UNPACK_ROW_LENGTH,Yt.width),G.pixelStorei(G.UNPACK_IMAGE_HEIGHT,Yt.height),G.pixelStorei(G.UNPACK_SKIP_PIXELS,D.min.x),G.pixelStorei(G.UNPACK_SKIP_ROWS,D.min.y),G.pixelStorei(G.UNPACK_SKIP_IMAGES,D.min.z),ee.isDataTexture||ee.isData3DTexture?G.texSubImage3D(je,ne,q.x,q.y,q.z,Ae,Oe,Je,qe,tt,Yt.data):ee.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),G.compressedTexSubImage3D(je,ne,q.x,q.y,q.z,Ae,Oe,Je,qe,Yt.data)):G.texSubImage3D(je,ne,q.x,q.y,q.z,Ae,Oe,Je,qe,tt,Yt),G.pixelStorei(G.UNPACK_ROW_LENGTH,nt),G.pixelStorei(G.UNPACK_IMAGE_HEIGHT,pt),G.pixelStorei(G.UNPACK_SKIP_PIXELS,an),G.pixelStorei(G.UNPACK_SKIP_ROWS,$t),G.pixelStorei(G.UNPACK_SKIP_IMAGES,Xn),ne===0&&V.generateMipmaps&&G.generateMipmap(je),ye.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?ie.setTextureCube(D,0):D.isData3DTexture?ie.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?ie.setTexture2DArray(D,0):ie.setTexture2D(D,0),ye.unbindTexture()},this.resetState=function(){x=0,C=0,S=null,ye.reset(),$.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class qu extends Xu{}qu.prototype.isWebGL1Renderer=!0;class Jo{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Se(e),this.density=t}clone(){return new Jo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Ko{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Se(e),this.near=t,this.far=n}clone(){return new Ko(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Yu extends rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class $o{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=lr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=rn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=rn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=rn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Wt=new N;class Vi{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix4(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyNormalMatrix(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.transformDirection(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=kn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=kn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=kn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=kn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new gt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Vi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Hl extends Gt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Se(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let ms;const qs=new N,gs=new N,_s=new N,vs=new ae,Ys=new ae,Zu=new Xe,ro=new N,Zs=new N,oo=new N,Xc=new ae,Oa=new ae,qc=new ae;class Ju extends rt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",ms===void 0){ms=new $e;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new $o(t,5);ms.setIndex([0,1,2,0,2,3]),ms.setAttribute("position",new Vi(n,3,0,!1)),ms.setAttribute("uv",new Vi(n,2,3,!1))}this.geometry=ms,this.material=e!==void 0?e:new Hl,this.center=new ae(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),gs.setFromMatrixScale(this.matrixWorld),Zu.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_s.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&gs.multiplyScalar(-_s.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;ao(ro.set(-.5,-.5,0),_s,o,gs,i,s),ao(Zs.set(.5,-.5,0),_s,o,gs,i,s),ao(oo.set(.5,.5,0),_s,o,gs,i,s),Xc.set(0,0),Oa.set(1,0),qc.set(1,1);let a=e.ray.intersectTriangle(ro,Zs,oo,!1,qs);if(a===null&&(ao(Zs.set(-.5,.5,0),_s,o,gs,i,s),Oa.set(0,1),a=e.ray.intersectTriangle(ro,oo,Zs,!1,qs),a===null))return;const l=e.ray.origin.distanceTo(qs);l<e.near||l>e.far||t.push({distance:l,point:qs.clone(),uv:dn.getUV(qs,ro,Zs,oo,Xc,Oa,qc,new ae),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ao(r,e,t,n,i,s){vs.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Ys.x=s*vs.x-i*vs.y,Ys.y=i*vs.x+s*vs.y):Ys.copy(vs),r.copy(e),r.x+=Ys.x,r.y+=Ys.y,r.applyMatrix4(Zu)}const lo=new N,Yc=new N;class Ku extends rt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){lo.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(lo);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){lo.setFromMatrixPosition(e.matrixWorld),Yc.setFromMatrixPosition(this.matrixWorld);const n=lo.distanceTo(Yc)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const Zc=new N,Jc=new ht,Kc=new ht,ev=new N,$c=new Xe;class $u extends Bt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Xe,this.bindMatrixInverse=new Xe}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new ht,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Jc.fromBufferAttribute(i.attributes.skinIndex,e),Kc.fromBufferAttribute(i.attributes.skinWeight,e),Zc.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Kc.getComponent(s);if(o!==0){const a=Jc.getComponent(s);$c.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(ev.copy(Zc).applyMatrix4($c),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Gl extends rt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ss extends It{constructor(e=null,t=1,n=1,i,s,o,a,l,h=Ct,u=Ct,d,f){super(null,o,a,l,h,u,i,s,d,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const jc=new Xe,tv=new Xe;class jo{constructor(e=[],t=[]){this.uuid=rn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Xe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Xe;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:tv;jc.multiplyMatrices(a,t[s]),jc.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new jo(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Pu(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ss(t,e,e,nn,zn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Gl),this.bones.push(o),this.boneInverses.push(new Xe().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class As extends gt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Qc=new Xe,eh=new Xe,co=[],nv=new Xe,Js=new Bt;class ju extends Bt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new As(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1;for(let i=0;i<n;i++)this.setMatrixAt(i,nv)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Js.geometry=this.geometry,Js.material=this.material,Js.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Qc),eh.multiplyMatrices(n,Qc),Js.matrixWorld=eh,Js.raycast(e,co);for(let o=0,a=co.length;o<a;o++){const l=co[o];l.instanceId=s,l.object=this,t.push(l)}co.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new As(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class qt extends Gt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Se(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const th=new N,nh=new N,ih=new Xe,Na=new Mr,ho=new Zi;class hi extends rt{constructor(e=new $e,t=new qt){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)th.fromBufferAttribute(t,i-1),nh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=th.distanceTo(nh);e.setAttribute("lineDistance",new Ce(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ho.copy(n.boundingSphere),ho.applyMatrix4(i),ho.radius+=s,e.ray.intersectsSphere(ho)===!1)return;ih.copy(i).invert(),Na.copy(e.ray).applyMatrix4(ih);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,h=new N,u=new N,d=new N,f=new N,p=this.isLineSegments?2:1,_=n.index,m=n.attributes.position;if(_!==null){const x=Math.max(0,o.start),C=Math.min(_.count,o.start+o.count);for(let S=x,w=C-1;S<w;S+=p){const R=_.getX(S),I=_.getX(S+1);if(h.fromBufferAttribute(m,R),u.fromBufferAttribute(m,I),Na.distanceSqToSegment(h,u,f,d)>l)continue;f.applyMatrix4(this.matrixWorld);const E=e.ray.origin.distanceTo(f);E<e.near||E>e.far||t.push({distance:E,point:d.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),C=Math.min(m.count,o.start+o.count);for(let S=x,w=C-1;S<w;S+=p){if(h.fromBufferAttribute(m,S),u.fromBufferAttribute(m,S+1),Na.distanceSqToSegment(h,u,f,d)>l)continue;f.applyMatrix4(this.matrixWorld);const I=e.ray.origin.distanceTo(f);I<e.near||I>e.far||t.push({distance:I,point:d.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const sh=new N,rh=new N;class Cn extends hi{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)sh.fromBufferAttribute(t,i),rh.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+sh.distanceTo(rh);e.setAttribute("lineDistance",new Ce(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Qu extends hi{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Vl extends Gt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Se(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const oh=new Xe,Ml=new Mr,uo=new Zi,fo=new N;class ed extends rt{constructor(e=new $e,t=new Vl){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),uo.copy(n.boundingSphere),uo.applyMatrix4(i),uo.radius+=s,e.ray.intersectsSphere(uo)===!1)return;oh.copy(i).invert(),Ml.copy(e.ray).applyMatrix4(oh);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let _=f,g=p;_<g;_++){const m=h.getX(_);fo.fromBufferAttribute(d,m),ah(fo,m,l,i,e,t,this)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p;_<g;_++)fo.fromBufferAttribute(d,_),ah(fo,_,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function ah(r,e,t,n,i,s,o){const a=Ml.distanceSqToPoint(r);if(a<t){const l=new N;Ml.closestPointToPoint(r,l),l.applyMatrix4(n);const h=i.ray.origin.distanceTo(l);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class iv extends It{constructor(e,t,n,i,s,o,a,l,h){super(e,t,n,i,s,o,a,l,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:St,this.magFilter=s!==void 0?s:St,this.generateMipmaps=!1;const u=this;function d(){u.needsUpdate=!0,e.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(d)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class sv extends It{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=Ct,this.minFilter=Ct,this.generateMipmaps=!1,this.needsUpdate=!0}}class Wl extends It{constructor(e,t,n,i,s,o,a,l,h,u,d,f){super(null,o,a,l,h,u,i,s,d,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class rv extends Wl{constructor(e,t,n,i,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Ht}}class ov extends It{constructor(e,t,n,i,s,o,a,l,h){super(e,t,n,i,s,o,a,l,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class yn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,h;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),h=n[i]-o,h<0)a=i+1;else if(h>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],f=n[i+1]-u,p=(o-u)/f;return(i+p)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=t||(o.isVector2?new ae:new N);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new N,i=[],s=[],o=[],a=new N,l=new Xe;for(let p=0;p<=e;p++){const _=p/e;i[p]=this.getTangentAt(_,new N)}s[0]=new N,o[0]=new N;let h=Number.MAX_VALUE;const u=Math.abs(i[0].x),d=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=h&&(h=u,n.set(1,0,0)),d<=h&&(h=d,n.set(0,1,0)),f<=h&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let p=1;p<=e;p++){if(s[p]=s[p-1].clone(),o[p]=o[p-1].clone(),a.crossVectors(i[p-1],i[p]),a.length()>Number.EPSILON){a.normalize();const _=Math.acos(Et(i[p-1].dot(i[p]),-1,1));s[p].applyMatrix4(l.makeRotationAxis(a,_))}o[p].crossVectors(i[p],s[p])}if(t===!0){let p=Math.acos(Et(s[0].dot(s[e]),-1,1));p/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(p=-p);for(let _=1;_<=e;_++)s[_].applyMatrix4(l.makeRotationAxis(i[_],p*_)),o[_].crossVectors(i[_],s[_])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Qo extends yn{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new ae,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),h=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),d=Math.sin(this.aRotation),f=l-this.aX,p=h-this.aY;l=f*u-p*d+this.aX,h=f*d+p*u+this.aY}return n.set(l,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class td extends Qo{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Xl(){let r=0,e=0,t=0,n=0;function i(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,h){i(o,a,h*(a-s),h*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,h,u,d){let f=(o-s)/h-(a-s)/(h+u)+(a-o)/u,p=(a-o)/u-(l-o)/(u+d)+(l-a)/d;f*=u,p*=u,i(o,a,f,p)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const po=new N,Fa=new Xl,Ua=new Xl,Ba=new Xl;class nd extends yn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new N){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let h,u;this.closed||a>0?h=i[(a-1)%s]:(po.subVectors(i[0],i[1]).add(i[0]),h=po);const d=i[a%s],f=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(po.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=po),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let _=Math.pow(h.distanceToSquared(d),p),g=Math.pow(d.distanceToSquared(f),p),m=Math.pow(f.distanceToSquared(u),p);g<1e-4&&(g=1),_<1e-4&&(_=g),m<1e-4&&(m=g),Fa.initNonuniformCatmullRom(h.x,d.x,f.x,u.x,_,g,m),Ua.initNonuniformCatmullRom(h.y,d.y,f.y,u.y,_,g,m),Ba.initNonuniformCatmullRom(h.z,d.z,f.z,u.z,_,g,m)}else this.curveType==="catmullrom"&&(Fa.initCatmullRom(h.x,d.x,f.x,u.x,this.tension),Ua.initCatmullRom(h.y,d.y,f.y,u.y,this.tension),Ba.initCatmullRom(h.z,d.z,f.z,u.z,this.tension));return n.set(Fa.calc(l),Ua.calc(l),Ba.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new N().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function lh(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,l=r*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*r+t}function av(r,e){const t=1-r;return t*t*e}function lv(r,e){return 2*(1-r)*r*e}function cv(r,e){return r*r*e}function Qs(r,e,t,n){return av(r,e)+lv(r,t)+cv(r,n)}function hv(r,e){const t=1-r;return t*t*t*e}function uv(r,e){const t=1-r;return 3*t*t*r*e}function dv(r,e){return 3*(1-r)*r*r*e}function fv(r,e){return r*r*r*e}function er(r,e,t,n,i){return hv(r,e)+uv(r,t)+dv(r,n)+fv(r,i)}class ql extends yn{constructor(e=new ae,t=new ae,n=new ae,i=new ae){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ae){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(er(e,i.x,s.x,o.x,a.x),er(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class id extends yn{constructor(e=new N,t=new N,n=new N,i=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new N){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(er(e,i.x,s.x,o.x,a.x),er(e,i.y,s.y,o.y,a.y),er(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ea extends yn{constructor(e=new ae,t=new ae){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ae){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ae;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sd extends yn{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yl extends yn{constructor(e=new ae,t=new ae,n=new ae){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ae){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Qs(e,i.x,s.x,o.x),Qs(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zl extends yn{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Qs(e,i.x,s.x,o.x),Qs(e,i.y,s.y,o.y),Qs(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jl extends yn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ae){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],h=i[o],u=i[o>i.length-2?i.length-1:o+1],d=i[o>i.length-3?i.length-1:o+2];return n.set(lh(a,l.x,h.x,u.x,d.x),lh(a,l.y,h.y,u.y,d.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ae().fromArray(i))}return this}}var Kl=Object.freeze({__proto__:null,ArcCurve:td,CatmullRomCurve3:nd,CubicBezierCurve:ql,CubicBezierCurve3:id,EllipseCurve:Qo,LineCurve:ea,LineCurve3:sd,QuadraticBezierCurve:Yl,QuadraticBezierCurve3:Zl,SplineCurve:Jl});class rd extends yn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ea(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),h=l===0?0:1-o/l;return a.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let h=0;h<l.length;h++){const u=l[h];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Kl[i.type]().fromJSON(i))}return this}}class ur extends rd{constructor(e){super(),this.type="Path",this.currentPoint=new ae,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ea(this.currentPoint.clone(),new ae(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Yl(this.currentPoint.clone(),new ae(e,t),new ae(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new ql(this.currentPoint.clone(),new ae(e,t),new ae(n,i),new ae(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Jl(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,l){const h=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+h,t+u,n,i,s,o,a,l),this}absellipse(e,t,n,i,s,o,a,l){const h=new Qo(e,t,n,i,s,o,a,l);if(this.curves.length>0){const d=h.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(h);const u=h.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Is extends $e{constructor(e=[new ae(0,-.5),new ae(.5,0),new ae(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Et(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],h=[],u=1/t,d=new N,f=new ae,p=new N,_=new N,g=new N;let m=0,x=0;for(let C=0;C<=e.length-1;C++)switch(C){case 0:m=e[C+1].x-e[C].x,x=e[C+1].y-e[C].y,p.x=x*1,p.y=-m,p.z=x*0,g.copy(p),p.normalize(),l.push(p.x,p.y,p.z);break;case e.length-1:l.push(g.x,g.y,g.z);break;default:m=e[C+1].x-e[C].x,x=e[C+1].y-e[C].y,p.x=x*1,p.y=-m,p.z=x*0,_.copy(p),p.x+=g.x,p.y+=g.y,p.z+=g.z,p.normalize(),l.push(p.x,p.y,p.z),g.copy(_)}for(let C=0;C<=t;C++){const S=n+C*u*i,w=Math.sin(S),R=Math.cos(S);for(let I=0;I<=e.length-1;I++){d.x=e[I].x*w,d.y=e[I].y,d.z=e[I].x*R,o.push(d.x,d.y,d.z),f.x=C/t,f.y=I/(e.length-1),a.push(f.x,f.y);const B=l[3*I+0]*w,E=l[3*I+1],O=l[3*I+0]*R;h.push(B,E,O)}}for(let C=0;C<t;C++)for(let S=0;S<e.length-1;S++){const w=S+C*e.length,R=w,I=w+e.length,B=w+e.length+1,E=w+1;s.push(R,I,E),s.push(B,E,I)}this.setIndex(s),this.setAttribute("position",new Ce(o,3)),this.setAttribute("uv",new Ce(a,2)),this.setAttribute("normal",new Ce(h,3))}static fromJSON(e){return new Is(e.points,e.segments,e.phiStart,e.phiLength)}}class wr extends Is{constructor(e=1,t=1,n=4,i=8){const s=new ur;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new wr(e.radius,e.length,e.capSegments,e.radialSegments)}}class Sr extends $e{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],l=[],h=new N,u=new ae;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let d=0,f=3;d<=t;d++,f+=3){const p=n+d/t*i;h.x=e*Math.cos(p),h.y=e*Math.sin(p),o.push(h.x,h.y,h.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let d=1;d<=t;d++)s.push(d,d+1,0);this.setIndex(s),this.setAttribute("position",new Ce(o,3)),this.setAttribute("normal",new Ce(a,3)),this.setAttribute("uv",new Ce(l,2))}static fromJSON(e){return new Sr(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ji extends $e{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const h=this;i=Math.floor(i),s=Math.floor(s);const u=[],d=[],f=[],p=[];let _=0;const g=[],m=n/2;let x=0;C(),o===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(u),this.setAttribute("position",new Ce(d,3)),this.setAttribute("normal",new Ce(f,3)),this.setAttribute("uv",new Ce(p,2));function C(){const w=new N,R=new N;let I=0;const B=(t-e)/n;for(let E=0;E<=s;E++){const O=[],z=E/s,J=z*(t-e)+e;for(let le=0;le<=i;le++){const Y=le/i,H=Y*l+a,te=Math.sin(H),X=Math.cos(H);R.x=J*te,R.y=-z*n+m,R.z=J*X,d.push(R.x,R.y,R.z),w.set(te,B,X).normalize(),f.push(w.x,w.y,w.z),p.push(Y,1-z),O.push(_++)}g.push(O)}for(let E=0;E<i;E++)for(let O=0;O<s;O++){const z=g[O][E],J=g[O+1][E],le=g[O+1][E+1],Y=g[O][E+1];u.push(z,J,Y),u.push(J,le,Y),I+=6}h.addGroup(x,I,0),x+=I}function S(w){const R=_,I=new ae,B=new N;let E=0;const O=w===!0?e:t,z=w===!0?1:-1;for(let le=1;le<=i;le++)d.push(0,m*z,0),f.push(0,z,0),p.push(.5,.5),_++;const J=_;for(let le=0;le<=i;le++){const H=le/i*l+a,te=Math.cos(H),X=Math.sin(H);B.x=O*X,B.y=m*z,B.z=O*te,d.push(B.x,B.y,B.z),f.push(0,z,0),I.x=te*.5+.5,I.y=X*.5*z+.5,p.push(I.x,I.y),_++}for(let le=0;le<i;le++){const Y=R+le,H=J+le;w===!0?u.push(H,H+1,Y):u.push(H+1,H,Y),E+=3}h.addGroup(x,E,w===!0?1:2),x+=E}}static fromJSON(e){return new Ji(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Er extends Ji{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Er(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Wn extends $e{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),h(n),u(),this.setAttribute("position",new Ce(s,3)),this.setAttribute("normal",new Ce(s.slice(),3)),this.setAttribute("uv",new Ce(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(C){const S=new N,w=new N,R=new N;for(let I=0;I<t.length;I+=3)p(t[I+0],S),p(t[I+1],w),p(t[I+2],R),l(S,w,R,C)}function l(C,S,w,R){const I=R+1,B=[];for(let E=0;E<=I;E++){B[E]=[];const O=C.clone().lerp(w,E/I),z=S.clone().lerp(w,E/I),J=I-E;for(let le=0;le<=J;le++)le===0&&E===I?B[E][le]=O:B[E][le]=O.clone().lerp(z,le/J)}for(let E=0;E<I;E++)for(let O=0;O<2*(I-E)-1;O++){const z=Math.floor(O/2);O%2===0?(f(B[E][z+1]),f(B[E+1][z]),f(B[E][z])):(f(B[E][z+1]),f(B[E+1][z+1]),f(B[E+1][z]))}}function h(C){const S=new N;for(let w=0;w<s.length;w+=3)S.x=s[w+0],S.y=s[w+1],S.z=s[w+2],S.normalize().multiplyScalar(C),s[w+0]=S.x,s[w+1]=S.y,s[w+2]=S.z}function u(){const C=new N;for(let S=0;S<s.length;S+=3){C.x=s[S+0],C.y=s[S+1],C.z=s[S+2];const w=m(C)/2/Math.PI+.5,R=x(C)/Math.PI+.5;o.push(w,1-R)}_(),d()}function d(){for(let C=0;C<o.length;C+=6){const S=o[C+0],w=o[C+2],R=o[C+4],I=Math.max(S,w,R),B=Math.min(S,w,R);I>.9&&B<.1&&(S<.2&&(o[C+0]+=1),w<.2&&(o[C+2]+=1),R<.2&&(o[C+4]+=1))}}function f(C){s.push(C.x,C.y,C.z)}function p(C,S){const w=C*3;S.x=e[w+0],S.y=e[w+1],S.z=e[w+2]}function _(){const C=new N,S=new N,w=new N,R=new N,I=new ae,B=new ae,E=new ae;for(let O=0,z=0;O<s.length;O+=9,z+=6){C.set(s[O+0],s[O+1],s[O+2]),S.set(s[O+3],s[O+4],s[O+5]),w.set(s[O+6],s[O+7],s[O+8]),I.set(o[z+0],o[z+1]),B.set(o[z+2],o[z+3]),E.set(o[z+4],o[z+5]),R.copy(C).add(S).add(w).divideScalar(3);const J=m(R);g(I,z+0,C,J),g(B,z+2,S,J),g(E,z+4,w,J)}}function g(C,S,w,R){R<0&&C.x===1&&(o[S]=C.x-1),w.x===0&&w.z===0&&(o[S]=R/2/Math.PI+.5)}function m(C){return Math.atan2(C.z,-C.x)}function x(C){return Math.atan2(-C.y,Math.sqrt(C.x*C.x+C.z*C.z))}}static fromJSON(e){return new Wn(e.vertices,e.indices,e.radius,e.details)}}class Tr extends Wn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Tr(e.radius,e.detail)}}const mo=new N,go=new N,za=new N,_o=new dn;class od extends $e{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Bi*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,h=[0,0,0],u=["a","b","c"],d=new Array(3),f={},p=[];for(let _=0;_<l;_+=3){o?(h[0]=o.getX(_),h[1]=o.getX(_+1),h[2]=o.getX(_+2)):(h[0]=_,h[1]=_+1,h[2]=_+2);const{a:g,b:m,c:x}=_o;if(g.fromBufferAttribute(a,h[0]),m.fromBufferAttribute(a,h[1]),x.fromBufferAttribute(a,h[2]),_o.getNormal(za),d[0]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,d[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,d[2]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let C=0;C<3;C++){const S=(C+1)%3,w=d[C],R=d[S],I=_o[u[C]],B=_o[u[S]],E=`${w}_${R}`,O=`${R}_${w}`;O in f&&f[O]?(za.dot(f[O].normal)<=s&&(p.push(I.x,I.y,I.z),p.push(B.x,B.y,B.z)),f[O]=null):E in f||(f[E]={index0:h[C],index1:h[S],normal:za.clone()})}}for(const _ in f)if(f[_]){const{index0:g,index1:m}=f[_];mo.fromBufferAttribute(a,g),go.fromBufferAttribute(a,m),p.push(mo.x,mo.y,mo.z),p.push(go.x,go.y,go.z)}this.setAttribute("position",new Ce(p,3))}}}class ki extends ur{constructor(e){super(e),this.uuid=rn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ur().fromJSON(i))}return this}}const pv={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=ad(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,h,u,d,f,p;if(n&&(s=xv(r,e,s,t)),r.length>80*t){a=h=r[0],l=u=r[1];for(let _=t;_<i;_+=t)d=r[_],f=r[_+1],d<a&&(a=d),f<l&&(l=f),d>h&&(h=d),f>u&&(u=f);p=Math.max(h-a,u-l),p=p!==0?32767/p:0}return dr(s,o,t,a,l,p,0),o}};function ad(r,e,t,n,i){let s,o;if(i===Lv(r,e,t,n)>0)for(s=e;s<t;s+=n)o=ch(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=ch(s,r[s],r[s+1],o);return o&&ta(o,o.next)&&(pr(o),o=o.next),o}function Wi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(ta(t,t.next)||yt(t.prev,t,t.next)===0)){if(pr(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function dr(r,e,t,n,i,s,o){if(!r)return;!o&&s&&Sv(r,n,i,s);let a=r,l,h;for(;r.prev!==r.next;){if(l=r.prev,h=r.next,s?gv(r,n,i,s):mv(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),pr(r),r=h.next,a=h.next;continue}if(r=h,r===a){o?o===1?(r=_v(Wi(r),e,t),dr(r,e,t,n,i,s,2)):o===2&&vv(r,e,t,n,i,s):dr(Wi(r),e,t,n,i,s,1);break}}}function mv(r){const e=r.prev,t=r,n=r.next;if(yt(e,t,n)>=0)return!1;const i=e.x,s=t.x,o=n.x,a=e.y,l=t.y,h=n.y,u=i<s?i<o?i:o:s<o?s:o,d=a<l?a<h?a:h:l<h?l:h,f=i>s?i>o?i:o:s>o?s:o,p=a>l?a>h?a:h:l>h?l:h;let _=n.next;for(;_!==e;){if(_.x>=u&&_.x<=f&&_.y>=d&&_.y<=p&&ws(i,a,s,l,o,h,_.x,_.y)&&yt(_.prev,_,_.next)>=0)return!1;_=_.next}return!0}function gv(r,e,t,n){const i=r.prev,s=r,o=r.next;if(yt(i,s,o)>=0)return!1;const a=i.x,l=s.x,h=o.x,u=i.y,d=s.y,f=o.y,p=a<l?a<h?a:h:l<h?l:h,_=u<d?u<f?u:f:d<f?d:f,g=a>l?a>h?a:h:l>h?l:h,m=u>d?u>f?u:f:d>f?d:f,x=bl(p,_,e,t,n),C=bl(g,m,e,t,n);let S=r.prevZ,w=r.nextZ;for(;S&&S.z>=x&&w&&w.z<=C;){if(S.x>=p&&S.x<=g&&S.y>=_&&S.y<=m&&S!==i&&S!==o&&ws(a,u,l,d,h,f,S.x,S.y)&&yt(S.prev,S,S.next)>=0||(S=S.prevZ,w.x>=p&&w.x<=g&&w.y>=_&&w.y<=m&&w!==i&&w!==o&&ws(a,u,l,d,h,f,w.x,w.y)&&yt(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;S&&S.z>=x;){if(S.x>=p&&S.x<=g&&S.y>=_&&S.y<=m&&S!==i&&S!==o&&ws(a,u,l,d,h,f,S.x,S.y)&&yt(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;w&&w.z<=C;){if(w.x>=p&&w.x<=g&&w.y>=_&&w.y<=m&&w!==i&&w!==o&&ws(a,u,l,d,h,f,w.x,w.y)&&yt(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function _v(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!ta(i,s)&&ld(i,n,n.next,s)&&fr(i,s)&&fr(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),pr(n),pr(n.next),n=r=s),n=n.next}while(n!==r);return Wi(n)}function vv(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Av(o,a)){let l=cd(o,a);o=Wi(o,o.next),l=Wi(l,l.next),dr(o,e,t,n,i,s,0),dr(l,e,t,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function xv(r,e,t,n){const i=[];let s,o,a,l,h;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:r.length,h=ad(r,a,l,n,!1),h===h.next&&(h.steiner=!0),i.push(Tv(h));for(i.sort(yv),s=0;s<i.length;s++)t=Mv(i[s],t);return t}function yv(r,e){return r.x-e.x}function Mv(r,e){const t=bv(r,e);if(!t)return e;const n=cd(t,r);return Wi(n,n.next),Wi(t,t.next)}function bv(r,e){let t=e,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const f=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=s&&f>n&&(n=f,i=t.x<t.next.x?t:t.next,f===s))return i}t=t.next}while(t!==e);if(!i)return null;const a=i,l=i.x,h=i.y;let u=1/0,d;t=i;do s>=t.x&&t.x>=l&&s!==t.x&&ws(o<h?s:n,o,l,h,o<h?n:s,o,t.x,t.y)&&(d=Math.abs(o-t.y)/(s-t.x),fr(t,r)&&(d<u||d===u&&(t.x>i.x||t.x===i.x&&wv(i,t)))&&(i=t,u=d)),t=t.next;while(t!==a);return i}function wv(r,e){return yt(r.prev,r,e.prev)<0&&yt(e.next,r,r.next)<0}function Sv(r,e,t,n){let i=r;do i.z===0&&(i.z=bl(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,Ev(i)}function Ev(r){let e,t,n,i,s,o,a,l,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<h&&(a++,n=n.nextZ,!!n);e++);for(l=h;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function bl(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function Tv(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ws(r,e,t,n,i,s,o,a){return(i-o)*(e-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(i-o)*(n-a)}function Av(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!Cv(r,e)&&(fr(r,e)&&fr(e,r)&&Rv(r,e)&&(yt(r.prev,r,e.prev)||yt(r,e.prev,e))||ta(r,e)&&yt(r.prev,r,r.next)>0&&yt(e.prev,e,e.next)>0)}function yt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function ta(r,e){return r.x===e.x&&r.y===e.y}function ld(r,e,t,n){const i=xo(yt(r,e,t)),s=xo(yt(r,e,n)),o=xo(yt(t,n,r)),a=xo(yt(t,n,e));return!!(i!==s&&o!==a||i===0&&vo(r,t,e)||s===0&&vo(r,n,e)||o===0&&vo(t,r,n)||a===0&&vo(t,e,n))}function vo(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function xo(r){return r>0?1:r<0?-1:0}function Cv(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&ld(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function fr(r,e){return yt(r.prev,r,r.next)<0?yt(r,e,r.next)>=0&&yt(r,r.prev,e)>=0:yt(r,e,r.prev)<0||yt(r,r.next,e)<0}function Rv(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function cd(r,e){const t=new wl(r.i,r.x,r.y),n=new wl(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function ch(r,e,t,n){const i=new wl(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function pr(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function wl(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Lv(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Tn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Tn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];hh(e),uh(n,e);let o=e.length;t.forEach(hh);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,uh(n,t[l]);const a=pv.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function hh(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function uh(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Ar extends $e{constructor(e=new ki([new ae(.5,.5),new ae(-.5,.5),new ae(-.5,-.5),new ae(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++){const h=e[a];o(h)}this.setAttribute("position",new Ce(i,3)),this.setAttribute("uv",new Ce(s,2)),this.computeVertexNormals();function o(a){const l=[],h=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,d=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,p=t.bevelThickness!==void 0?t.bevelThickness:.2,_=t.bevelSize!==void 0?t.bevelSize:p-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const x=t.extrudePath,C=t.UVGenerator!==void 0?t.UVGenerator:Pv;let S,w=!1,R,I,B,E;x&&(S=x.getSpacedPoints(u),w=!0,f=!1,R=x.computeFrenetFrames(u,!1),I=new N,B=new N,E=new N),f||(m=0,p=0,_=0,g=0);const O=a.extractPoints(h);let z=O.shape;const J=O.holes;if(!Tn.isClockWise(z)){z=z.reverse();for(let re=0,ie=J.length;re<ie;re++){const pe=J[re];Tn.isClockWise(pe)&&(J[re]=pe.reverse())}}const Y=Tn.triangulateShape(z,J),H=z;for(let re=0,ie=J.length;re<ie;re++){const pe=J[re];z=z.concat(pe)}function te(re,ie,pe){return ie||console.error("THREE.ExtrudeGeometry: vec does not exist"),ie.clone().multiplyScalar(pe).add(re)}const X=z.length,de=Y.length;function se(re,ie,pe){let Te,xe,Ge;const ke=re.x-ie.x,Fe=re.y-ie.y,lt=pe.x-re.x,ct=pe.y-re.y,F=ke*ke+Fe*Fe,L=ke*ct-Fe*lt;if(Math.abs(L)>Number.EPSILON){const K=Math.sqrt(F),he=Math.sqrt(lt*lt+ct*ct),me=ie.x-Fe/K,Me=ie.y+ke/K,Be=pe.x-ct/he,be=pe.y+lt/he,$=((Be-me)*ct-(be-Me)*lt)/(ke*ct-Fe*lt);Te=me+ke*$-re.x,xe=Me+Fe*$-re.y;const Ie=Te*Te+xe*xe;if(Ie<=2)return new ae(Te,xe);Ge=Math.sqrt(Ie/2)}else{let K=!1;ke>Number.EPSILON?lt>Number.EPSILON&&(K=!0):ke<-Number.EPSILON?lt<-Number.EPSILON&&(K=!0):Math.sign(Fe)===Math.sign(ct)&&(K=!0),K?(Te=-Fe,xe=ke,Ge=Math.sqrt(F)):(Te=ke,xe=Fe,Ge=Math.sqrt(F/2))}return new ae(Te/Ge,xe/Ge)}const W=[];for(let re=0,ie=H.length,pe=ie-1,Te=re+1;re<ie;re++,pe++,Te++)pe===ie&&(pe=0),Te===ie&&(Te=0),W[re]=se(H[re],H[pe],H[Te]);const Z=[];let fe,ce=W.concat();for(let re=0,ie=J.length;re<ie;re++){const pe=J[re];fe=[];for(let Te=0,xe=pe.length,Ge=xe-1,ke=Te+1;Te<xe;Te++,Ge++,ke++)Ge===xe&&(Ge=0),ke===xe&&(ke=0),fe[Te]=se(pe[Te],pe[Ge],pe[ke]);Z.push(fe),ce=ce.concat(fe)}for(let re=0;re<m;re++){const ie=re/m,pe=p*Math.cos(ie*Math.PI/2),Te=_*Math.sin(ie*Math.PI/2)+g;for(let xe=0,Ge=H.length;xe<Ge;xe++){const ke=te(H[xe],W[xe],Te);Ye(ke.x,ke.y,-pe)}for(let xe=0,Ge=J.length;xe<Ge;xe++){const ke=J[xe];fe=Z[xe];for(let Fe=0,lt=ke.length;Fe<lt;Fe++){const ct=te(ke[Fe],fe[Fe],Te);Ye(ct.x,ct.y,-pe)}}}const _e=_+g;for(let re=0;re<X;re++){const ie=f?te(z[re],ce[re],_e):z[re];w?(B.copy(R.normals[0]).multiplyScalar(ie.x),I.copy(R.binormals[0]).multiplyScalar(ie.y),E.copy(S[0]).add(B).add(I),Ye(E.x,E.y,E.z)):Ye(ie.x,ie.y,0)}for(let re=1;re<=u;re++)for(let ie=0;ie<X;ie++){const pe=f?te(z[ie],ce[ie],_e):z[ie];w?(B.copy(R.normals[re]).multiplyScalar(pe.x),I.copy(R.binormals[re]).multiplyScalar(pe.y),E.copy(S[re]).add(B).add(I),Ye(E.x,E.y,E.z)):Ye(pe.x,pe.y,d/u*re)}for(let re=m-1;re>=0;re--){const ie=re/m,pe=p*Math.cos(ie*Math.PI/2),Te=_*Math.sin(ie*Math.PI/2)+g;for(let xe=0,Ge=H.length;xe<Ge;xe++){const ke=te(H[xe],W[xe],Te);Ye(ke.x,ke.y,d+pe)}for(let xe=0,Ge=J.length;xe<Ge;xe++){const ke=J[xe];fe=Z[xe];for(let Fe=0,lt=ke.length;Fe<lt;Fe++){const ct=te(ke[Fe],fe[Fe],Te);w?Ye(ct.x,ct.y+S[u-1].y,S[u-1].x+pe):Ye(ct.x,ct.y,d+pe)}}}Ee(),ze();function Ee(){const re=i.length/3;if(f){let ie=0,pe=X*ie;for(let Te=0;Te<de;Te++){const xe=Y[Te];Ne(xe[2]+pe,xe[1]+pe,xe[0]+pe)}ie=u+m*2,pe=X*ie;for(let Te=0;Te<de;Te++){const xe=Y[Te];Ne(xe[0]+pe,xe[1]+pe,xe[2]+pe)}}else{for(let ie=0;ie<de;ie++){const pe=Y[ie];Ne(pe[2],pe[1],pe[0])}for(let ie=0;ie<de;ie++){const pe=Y[ie];Ne(pe[0]+X*u,pe[1]+X*u,pe[2]+X*u)}}n.addGroup(re,i.length/3-re,0)}function ze(){const re=i.length/3;let ie=0;G(H,ie),ie+=H.length;for(let pe=0,Te=J.length;pe<Te;pe++){const xe=J[pe];G(xe,ie),ie+=xe.length}n.addGroup(re,i.length/3-re,1)}function G(re,ie){let pe=re.length;for(;--pe>=0;){const Te=pe;let xe=pe-1;xe<0&&(xe=re.length-1);for(let Ge=0,ke=u+m*2;Ge<ke;Ge++){const Fe=X*Ge,lt=X*(Ge+1),ct=ie+Te+Fe,F=ie+xe+Fe,L=ie+xe+lt,K=ie+Te+lt;He(ct,F,L,K)}}}function Ye(re,ie,pe){l.push(re),l.push(ie),l.push(pe)}function Ne(re,ie,pe){ye(re),ye(ie),ye(pe);const Te=i.length/3,xe=C.generateTopUV(n,i,Te-3,Te-2,Te-1);Ze(xe[0]),Ze(xe[1]),Ze(xe[2])}function He(re,ie,pe,Te){ye(re),ye(ie),ye(Te),ye(ie),ye(pe),ye(Te);const xe=i.length/3,Ge=C.generateSideWallUV(n,i,xe-6,xe-3,xe-2,xe-1);Ze(Ge[0]),Ze(Ge[1]),Ze(Ge[3]),Ze(Ge[1]),Ze(Ge[2]),Ze(Ge[3])}function ye(re){i.push(l[re*3+0]),i.push(l[re*3+1]),i.push(l[re*3+2])}function Ze(re){s.push(re.x),s.push(re.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Iv(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Kl[i.type]().fromJSON(i)),new Ar(n,e.options)}}const Pv={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],h=e[i*3],u=e[i*3+1];return[new ae(s,o),new ae(a,l),new ae(h,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],h=e[n*3],u=e[n*3+1],d=e[n*3+2],f=e[i*3],p=e[i*3+1],_=e[i*3+2],g=e[s*3],m=e[s*3+1],x=e[s*3+2];return Math.abs(a-u)<Math.abs(o-h)?[new ae(o,1-l),new ae(h,1-d),new ae(f,1-_),new ae(g,1-x)]:[new ae(a,1-l),new ae(u,1-d),new ae(p,1-_),new ae(m,1-x)]}};function Iv(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Cr extends Wn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Cr(e.radius,e.detail)}}class Ds extends Wn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ds(e.radius,e.detail)}}class Rr extends $e{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],h=[],u=[];let d=e;const f=(t-e)/i,p=new N,_=new ae;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const x=s+m/n*o;p.x=d*Math.cos(x),p.y=d*Math.sin(x),l.push(p.x,p.y,p.z),h.push(0,0,1),_.x=(p.x/t+1)/2,_.y=(p.y/t+1)/2,u.push(_.x,_.y)}d+=f}for(let g=0;g<i;g++){const m=g*(n+1);for(let x=0;x<n;x++){const C=x+m,S=C,w=C+n+1,R=C+n+2,I=C+1;a.push(S,w,I),a.push(w,R,I)}}this.setIndex(a),this.setAttribute("position",new Ce(l,3)),this.setAttribute("normal",new Ce(h,3)),this.setAttribute("uv",new Ce(u,2))}static fromJSON(e){return new Rr(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Lr extends $e{constructor(e=new ki([new ae(0,.5),new ae(-.5,-.5),new ae(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)h(e);else for(let u=0;u<e.length;u++)h(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Ce(i,3)),this.setAttribute("normal",new Ce(s,3)),this.setAttribute("uv",new Ce(o,2));function h(u){const d=i.length/3,f=u.extractPoints(t);let p=f.shape;const _=f.holes;Tn.isClockWise(p)===!1&&(p=p.reverse());for(let m=0,x=_.length;m<x;m++){const C=_[m];Tn.isClockWise(C)===!0&&(_[m]=C.reverse())}const g=Tn.triangulateShape(p,_);for(let m=0,x=_.length;m<x;m++){const C=_[m];p=p.concat(C)}for(let m=0,x=p.length;m<x;m++){const C=p[m];i.push(C.x,C.y,0),s.push(0,0,1),o.push(C.x,C.y)}for(let m=0,x=g.length;m<x;m++){const C=g[m],S=C[0]+d,w=C[1]+d,R=C[2]+d;n.push(S,w,R),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Dv(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new Lr(n,e.curveSegments)}}function Dv(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Os extends $e{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let h=0;const u=[],d=new N,f=new N,p=[],_=[],g=[],m=[];for(let x=0;x<=n;x++){const C=[],S=x/n;let w=0;x==0&&o==0?w=.5/t:x==n&&l==Math.PI&&(w=-.5/t);for(let R=0;R<=t;R++){const I=R/t;d.x=-e*Math.cos(i+I*s)*Math.sin(o+S*a),d.y=e*Math.cos(o+S*a),d.z=e*Math.sin(i+I*s)*Math.sin(o+S*a),_.push(d.x,d.y,d.z),f.copy(d).normalize(),g.push(f.x,f.y,f.z),m.push(I+w,1-S),C.push(h++)}u.push(C)}for(let x=0;x<n;x++)for(let C=0;C<t;C++){const S=u[x][C+1],w=u[x][C],R=u[x+1][C],I=u[x+1][C+1];(x!==0||o>0)&&p.push(S,w,I),(x!==n-1||l<Math.PI)&&p.push(w,R,I)}this.setIndex(p),this.setAttribute("position",new Ce(_,3)),this.setAttribute("normal",new Ce(g,3)),this.setAttribute("uv",new Ce(m,2))}static fromJSON(e){return new Os(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Pr extends Wn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Pr(e.radius,e.detail)}}class Ir extends $e{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],h=[],u=new N,d=new N,f=new N;for(let p=0;p<=n;p++)for(let _=0;_<=i;_++){const g=_/i*s,m=p/n*Math.PI*2;d.x=(e+t*Math.cos(m))*Math.cos(g),d.y=(e+t*Math.cos(m))*Math.sin(g),d.z=t*Math.sin(m),a.push(d.x,d.y,d.z),u.x=e*Math.cos(g),u.y=e*Math.sin(g),f.subVectors(d,u).normalize(),l.push(f.x,f.y,f.z),h.push(_/i),h.push(p/n)}for(let p=1;p<=n;p++)for(let _=1;_<=i;_++){const g=(i+1)*p+_-1,m=(i+1)*(p-1)+_-1,x=(i+1)*(p-1)+_,C=(i+1)*p+_;o.push(g,m,C),o.push(m,x,C)}this.setIndex(o),this.setAttribute("position",new Ce(a,3)),this.setAttribute("normal",new Ce(l,3)),this.setAttribute("uv",new Ce(h,2))}static fromJSON(e){return new Ir(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Dr extends $e{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],h=[],u=[],d=new N,f=new N,p=new N,_=new N,g=new N,m=new N,x=new N;for(let S=0;S<=n;++S){const w=S/n*s*Math.PI*2;C(w,s,o,e,p),C(w+.01,s,o,e,_),m.subVectors(_,p),x.addVectors(_,p),g.crossVectors(m,x),x.crossVectors(g,m),g.normalize(),x.normalize();for(let R=0;R<=i;++R){const I=R/i*Math.PI*2,B=-t*Math.cos(I),E=t*Math.sin(I);d.x=p.x+(B*x.x+E*g.x),d.y=p.y+(B*x.y+E*g.y),d.z=p.z+(B*x.z+E*g.z),l.push(d.x,d.y,d.z),f.subVectors(d,p).normalize(),h.push(f.x,f.y,f.z),u.push(S/n),u.push(R/i)}}for(let S=1;S<=n;S++)for(let w=1;w<=i;w++){const R=(i+1)*(S-1)+(w-1),I=(i+1)*S+(w-1),B=(i+1)*S+w,E=(i+1)*(S-1)+w;a.push(R,I,E),a.push(I,B,E)}this.setIndex(a),this.setAttribute("position",new Ce(l,3)),this.setAttribute("normal",new Ce(h,3)),this.setAttribute("uv",new Ce(u,2));function C(S,w,R,I,B){const E=Math.cos(S),O=Math.sin(S),z=R/w*S,J=Math.cos(z);B.x=I*(2+J)*.5*E,B.y=I*(2+J)*O*.5,B.z=I*Math.sin(z)*.5}}static fromJSON(e){return new Dr(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Or extends $e{constructor(e=new Zl(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new N,l=new N,h=new ae;let u=new N;const d=[],f=[],p=[],_=[];g(),this.setIndex(_),this.setAttribute("position",new Ce(d,3)),this.setAttribute("normal",new Ce(f,3)),this.setAttribute("uv",new Ce(p,2));function g(){for(let S=0;S<t;S++)m(S);m(s===!1?t:0),C(),x()}function m(S){u=e.getPointAt(S/t,u);const w=o.normals[S],R=o.binormals[S];for(let I=0;I<=i;I++){const B=I/i*Math.PI*2,E=Math.sin(B),O=-Math.cos(B);l.x=O*w.x+E*R.x,l.y=O*w.y+E*R.y,l.z=O*w.z+E*R.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,d.push(a.x,a.y,a.z)}}function x(){for(let S=1;S<=t;S++)for(let w=1;w<=i;w++){const R=(i+1)*(S-1)+(w-1),I=(i+1)*S+(w-1),B=(i+1)*S+w,E=(i+1)*(S-1)+w;_.push(R,I,E),_.push(I,B,E)}}function C(){for(let S=0;S<=t;S++)for(let w=0;w<=i;w++)h.x=S/t,h.y=w/i,p.push(h.x,h.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Or(new Kl[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class hd extends $e{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new N,s=new N;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let h=0,u=l.length;h<u;++h){const d=l[h],f=d.start,p=d.count;for(let _=f,g=f+p;_<g;_+=3)for(let m=0;m<3;m++){const x=a.getX(_+m),C=a.getX(_+(m+1)%3);i.fromBufferAttribute(o,x),s.fromBufferAttribute(o,C),dh(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let h=0;h<3;h++){const u=3*a+h,d=3*a+(h+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,d),dh(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ce(t,3))}}}function dh(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var fh=Object.freeze({__proto__:null,BoxGeometry:fi,CapsuleGeometry:wr,CircleGeometry:Sr,ConeGeometry:Er,CylinderGeometry:Ji,DodecahedronGeometry:Tr,EdgesGeometry:od,ExtrudeGeometry:Ar,IcosahedronGeometry:Cr,LatheGeometry:Is,OctahedronGeometry:Ds,PlaneGeometry:Ls,PolyhedronGeometry:Wn,RingGeometry:Rr,ShapeGeometry:Lr,SphereGeometry:Os,TetrahedronGeometry:Pr,TorusGeometry:Ir,TorusKnotGeometry:Dr,TubeGeometry:Or,WireframeGeometry:hd});class ud extends Gt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Se(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class dd extends An{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class $l extends Gt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Se(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ui,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class fd extends $l{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ae(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Et(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Se(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Se(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Se(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class pd extends Gt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Se(16777215),this.specular=new Se(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ui,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class md extends Gt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Se(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ui,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class gd extends Gt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ui,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class _d extends Gt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ui,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class vd extends Gt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Se(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ui,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class xd extends qt{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function un(r,e,t){return jl(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function Ni(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function jl(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function yd(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Sl(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[o++]=r[a+l]}return i}function Ql(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)}function Ov(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const h=s.tracks[l],u=h.getValueSize(),d=[],f=[];for(let p=0;p<h.times.length;++p){const _=h.times[p]*i;if(!(_<t||_>=n)){d.push(h.times[p]);for(let g=0;g<u;++g)f.push(h.values[p*u+g])}}d.length!==0&&(h.times=Ni(d,h.times.constructor),h.values=Ni(f,h.values.constructor),o.push(h))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function Nv(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const h=r.tracks.find(function(x){return x.name===a.name&&x.ValueTypeName===l});if(h===void 0)continue;let u=0;const d=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=d/3);let f=0;const p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);const _=a.times.length-1;let g;if(s<=a.times[0]){const x=u,C=d-u;g=un(a.values,x,C)}else if(s>=a.times[_]){const x=_*d+u,C=x+d-u;g=un(a.values,x,C)}else{const x=a.createInterpolant(),C=u,S=d-u;x.evaluate(s),g=un(x.resultBuffer,C,S)}l==="quaternion"&&new Jt().fromArray(g).normalize().conjugate().toArray(g);const m=h.times.length;for(let x=0;x<m;++x){const C=x*p+f;if(l==="quaternion")Jt.multiplyQuaternionsFlat(h.values,C,g,0,h.values,C);else{const S=p-f*2;for(let w=0;w<S;++w)h.values[C+w]-=g[w]}}}return r.blendMode=Dl,r}var Fv=Object.freeze({__proto__:null,arraySlice:un,convertArray:Ni,isTypedArray:jl,getKeyframeOrder:yd,sortedArray:Sl,flattenJSON:Ql,subclip:Ov,makeClipAdditive:Nv});class Nr{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Md extends Nr{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ii,endingEnd:Ii}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Di:s=e,a=2*t-n;break;case ar:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Di:o=e,l=2*n-t;break;case ar:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const h=(n-t)*.5,u=this.valueSize;this._weightPrev=h/(t-a),this._weightNext=h/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,h=l-a,u=this._offsetPrev,d=this._offsetNext,f=this._weightPrev,p=this._weightNext,_=(n-t)/(i-t),g=_*_,m=g*_,x=-f*m+2*f*g-f*_,C=(1+f)*m+(-1.5-2*f)*g+(-.5+f)*_+1,S=(-1-p)*m+(1.5+p)*g+.5*_,w=p*m-p*g;for(let R=0;R!==a;++R)s[R]=x*o[u+R]+C*o[h+R]+S*o[l+R]+w*o[d+R];return s}}class ec extends Nr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,h=l-a,u=(n-t)/(i-t),d=1-u;for(let f=0;f!==a;++f)s[f]=o[h+f]*d+o[l+f]*u;return s}}class bd extends Nr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Mn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ni(t,this.TimeBufferType),this.values=Ni(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ni(e.times,Array),values:Ni(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new bd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ec(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Md(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case rr:t=this.InterpolantFactoryMethodDiscrete;break;case or:t=this.InterpolantFactoryMethodLinear;break;case Po:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return rr;case this.InterpolantFactoryMethodLinear:return or;case this.InterpolantFactoryMethodSmooth:return Po}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=un(n,s,o),this.values=un(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&jl(i))for(let a=0,l=i.length;a!==l;++a){const h=i[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),e=!1;break}}return e}optimize(){const e=un(this.times),t=un(this.values),n=this.getValueSize(),i=this.getInterpolation()===Po,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const h=e[a],u=e[a+1];if(h!==u&&(a!==1||h!==e[0]))if(i)l=!0;else{const d=a*n,f=d-n,p=d+n;for(let _=0;_!==n;++_){const g=t[d+_];if(g!==t[f+_]||g!==t[p+_]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const d=a*n,f=o*n;for(let p=0;p!==n;++p)t[f+p]=t[d+p]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,h=0;h!==n;++h)t[l+h]=t[a+h];++o}return o!==e.length?(this.times=un(e,0,o),this.values=un(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=un(this.times,0),t=un(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Mn.prototype.TimeBufferType=Float32Array;Mn.prototype.ValueBufferType=Float32Array;Mn.prototype.DefaultInterpolation=or;class Ki extends Mn{}Ki.prototype.ValueTypeName="bool";Ki.prototype.ValueBufferType=Array;Ki.prototype.DefaultInterpolation=rr;Ki.prototype.InterpolantFactoryMethodLinear=void 0;Ki.prototype.InterpolantFactoryMethodSmooth=void 0;class tc extends Mn{}tc.prototype.ValueTypeName="color";class mr extends Mn{}mr.prototype.ValueTypeName="number";class wd extends Nr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let h=e*a;for(let u=h+a;h!==u;h+=4)Jt.slerpFlat(s,0,o,h-a,o,h,l);return s}}class Ns extends Mn{InterpolantFactoryMethodLinear(e){return new wd(this.times,this.values,this.getValueSize(),e)}}Ns.prototype.ValueTypeName="quaternion";Ns.prototype.DefaultInterpolation=or;Ns.prototype.InterpolantFactoryMethodSmooth=void 0;class $i extends Mn{}$i.prototype.ValueTypeName="string";$i.prototype.ValueBufferType=Array;$i.prototype.DefaultInterpolation=rr;$i.prototype.InterpolantFactoryMethodLinear=void 0;$i.prototype.InterpolantFactoryMethodSmooth=void 0;class gr extends Mn{}gr.prototype.ValueTypeName="vector";class _r{constructor(e,t=-1,n,i=Go){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=rn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(Bv(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Mn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],h=[];l.push((a+s-1)%s,a,(a+1)%s),h.push(0,1,0);const u=yd(l);l=Sl(l,1,u),h=Sl(h,1,u),!i&&l[0]===0&&(l.push(s),h.push(h[0])),o.push(new mr(".morphTargetInfluences["+t[a].name+"]",l,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const h=e[a],u=h.name.match(s);if(u&&u.length>1){const d=u[1];let f=i[d];f||(i[d]=f=[]),f.push(h)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(d,f,p,_,g){if(p.length!==0){const m=[],x=[];Ql(p,m,x,_),m.length!==0&&g.push(new d(f,m,x))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const h=e.hierarchy||[];for(let d=0;d<h.length;d++){const f=h[d].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const p={};let _;for(_=0;_<f.length;_++)if(f[_].morphTargets)for(let g=0;g<f[_].morphTargets.length;g++)p[f[_].morphTargets[g]]=-1;for(const g in p){const m=[],x=[];for(let C=0;C!==f[_].morphTargets.length;++C){const S=f[_];m.push(S.time),x.push(S.morphTarget===g?1:0)}i.push(new mr(".morphTargetInfluence["+g+"]",m,x))}l=p.length*o}else{const p=".bones["+t[d].name+"]";n(gr,p+".position",f,"pos",i),n(Ns,p+".quaternion",f,"rot",i),n(gr,p+".scale",f,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Uv(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return mr;case"vector":case"vector2":case"vector3":case"vector4":return gr;case"color":return tc;case"quaternion":return Ns;case"bool":case"boolean":return Ki;case"string":return $i}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Bv(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Uv(r.type);if(r.times===void 0){const t=[],n=[];Ql(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Xi={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class nc{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,l;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,d){return h.push(u,d),this},this.removeHandler=function(u){const d=h.indexOf(u);return d!==-1&&h.splice(d,2),this},this.getHandler=function(u){for(let d=0,f=h.length;d<f;d+=2){const p=h[d],_=h[d+1];if(p.global&&(p.lastIndex=0),p.test(u))return _}return null}}}const Sd=new nc;class on{constructor(e){this.manager=e!==void 0?e:Sd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Fn={};class zv extends Error{constructor(e,t){super(e),this.response=t}}class Gn extends on{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Xi.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Fn[e]!==void 0){Fn[e].push({onLoad:t,onProgress:n,onError:i});return}Fn[e]=[],Fn[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||h.body===void 0||h.body.getReader===void 0)return h;const u=Fn[e],d=h.body.getReader(),f=h.headers.get("Content-Length"),p=f?parseInt(f):0,_=p!==0;let g=0;const m=new ReadableStream({start(x){C();function C(){d.read().then(({done:S,value:w})=>{if(S)x.close();else{g+=w.byteLength;const R=new ProgressEvent("progress",{lengthComputable:_,loaded:g,total:p});for(let I=0,B=u.length;I<B;I++){const E=u[I];E.onProgress&&E.onProgress(R)}x.enqueue(w),C()}})}}});return new Response(m)}else throw new zv(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(l){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return h.json();default:if(a===void 0)return h.text();{const d=/charset="?([^;"\s]*)"?/i.exec(a),f=d&&d[1]?d[1].toLowerCase():void 0,p=new TextDecoder(f);return h.arrayBuffer().then(_=>p.decode(_))}}}).then(h=>{Xi.add(e,h);const u=Fn[e];delete Fn[e];for(let d=0,f=u.length;d<f;d++){const p=u[d];p.onLoad&&p.onLoad(h)}}).catch(h=>{const u=Fn[e];if(u===void 0)throw this.manager.itemError(e),h;delete Fn[e];for(let d=0,f=u.length;d<f;d++){const p=u[d];p.onError&&p.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class kv extends on{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Gn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=_r.parse(e[n]);t.push(i)}return t}}class Hv extends on{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new Wl,l=new Gn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let h=0;function u(d){l.load(e[d],function(f){const p=s.parse(f,!0);o[d]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},h+=1,h===6&&(p.mipmapCount===1&&(a.minFilter=St),a.image=o,a.format=p.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let d=0,f=e.length;d<f;++d)u(d);else l.load(e,function(d){const f=s.parse(d,!0);if(f.isCubemap){const p=f.mipmaps.length/f.mipmapCount;for(let _=0;_<p;_++){o[_]={mipmaps:[]};for(let g=0;g<f.mipmapCount;g++)o[_].mipmaps.push(f.mipmaps[_*f.mipmapCount+g]),o[_].format=f.format,o[_].width=f.width,o[_].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=St),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class vr extends on{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Xi.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=hr("img");function l(){u(),Xi.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(d){u(),i&&i(d),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",h,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Gv extends on{constructor(e){super(e)}load(e,t,n,i){const s=new br,o=new vr(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(h){o.load(e[h],function(u){s.images[h]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)l(h);return s}}class Vv extends on{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ss,a=new Gn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const h=s.parse(l);!h||(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:Ht,o.wrapT=h.wrapT!==void 0?h.wrapT:Ht,o.magFilter=h.magFilter!==void 0?h.magFilter:St,o.minFilter=h.minFilter!==void 0?h.minFilter:St,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=qi),h.mipmapCount===1&&(o.minFilter=St),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class Wv extends on{constructor(e){super(e)}load(e,t,n,i){const s=new It,o=new vr(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class pi extends rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Se(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Ed extends pi{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(rt.DefaultUp),this.updateMatrix(),this.groundColor=new Se(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const ka=new Xe,ph=new N,mh=new N;class ic{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ae(512,512),this.map=null,this.mapPass=null,this.matrix=new Xe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qo,this._frameExtents=new ae(1,1),this._viewportCount=1,this._viewports=[new ht(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;ph.setFromMatrixPosition(e.matrixWorld),t.position.copy(ph),mh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(mh),t.updateMatrixWorld(),ka.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ka),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(ka)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Xv extends ic{constructor(){super(new Ut(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=cr*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Td extends pi{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(rt.DefaultUp),this.updateMatrix(),this.target=new rt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new Xv}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const gh=new Xe,Ks=new N,Ha=new N;class qv extends ic{constructor(){super(new Ut(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ae(4,2),this._viewportCount=6,this._viewports=[new ht(2,1,1,1),new ht(0,1,1,1),new ht(3,1,1,1),new ht(1,1,1,1),new ht(3,0,1,1),new ht(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ks.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ks),Ha.copy(n.position),Ha.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ha),n.updateMatrixWorld(),i.makeTranslation(-Ks.x,-Ks.y,-Ks.z),gh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(gh)}}class Ad extends pi{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new qv}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Yv extends ic{constructor(){super(new Yo(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Cd extends pi{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(rt.DefaultUp),this.updateMatrix(),this.target=new rt,this.shadow=new Yv}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Rd extends pi{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Ld extends pi{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Pd{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class na extends pi{constructor(e=new Pd,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ia extends on{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Gn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=ia.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Se().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new Se().setHex(o.value);break;case"v2":i.uniforms[s].value=new ae().fromArray(o.value);break;case"v3":i.uniforms[s].value=new N().fromArray(o.value);break;case"v4":i.uniforms[s].value=new ht().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Zt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new Xe().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ae().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ae().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:ud,SpriteMaterial:Hl,RawShaderMaterial:dd,ShaderMaterial:An,PointsMaterial:Vl,MeshPhysicalMaterial:fd,MeshStandardMaterial:$l,MeshPhongMaterial:pd,MeshToonMaterial:md,MeshNormalMaterial:gd,MeshLambertMaterial:_d,MeshDepthMaterial:zl,MeshDistanceMaterial:kl,MeshBasicMaterial:di,MeshMatcapMaterial:vd,LineDashedMaterial:xd,LineBasicMaterial:qt,Material:Gt};return new t[e]}}class El{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Id extends $e{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Dd extends on{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Gn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(p,_){if(t[_]!==void 0)return t[_];const m=p.interleavedBuffers[_],x=s(p,m.buffer),C=ys(m.type,x),S=new $o(C,m.stride);return S.uuid=m.uuid,t[_]=S,S}function s(p,_){if(n[_]!==void 0)return n[_];const m=p.arrayBuffers[_],x=new Uint32Array(m).buffer;return n[_]=x,x}const o=e.isInstancedBufferGeometry?new Id:new $e,a=e.data.index;if(a!==void 0){const p=ys(a.type,a.array);o.setIndex(new gt(p,1))}const l=e.data.attributes;for(const p in l){const _=l[p];let g;if(_.isInterleavedBufferAttribute){const m=i(e.data,_.data);g=new Vi(m,_.itemSize,_.offset,_.normalized)}else{const m=ys(_.type,_.array),x=_.isInstancedBufferAttribute?As:gt;g=new x(m,_.itemSize,_.normalized)}_.name!==void 0&&(g.name=_.name),_.usage!==void 0&&g.setUsage(_.usage),_.updateRange!==void 0&&(g.updateRange.offset=_.updateRange.offset,g.updateRange.count=_.updateRange.count),o.setAttribute(p,g)}const h=e.data.morphAttributes;if(h)for(const p in h){const _=h[p],g=[];for(let m=0,x=_.length;m<x;m++){const C=_[m];let S;if(C.isInterleavedBufferAttribute){const w=i(e.data,C.data);S=new Vi(w,C.itemSize,C.offset,C.normalized)}else{const w=ys(C.type,C.array);S=new gt(w,C.itemSize,C.normalized)}C.name!==void 0&&(S.name=C.name),g.push(S)}o.morphAttributes[p]=g}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const d=e.data.groups||e.data.drawcalls||e.data.offsets;if(d!==void 0)for(let p=0,_=d.length;p!==_;++p){const g=d[p];o.addGroup(g.start,g.count,g.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const p=new N;f.center!==void 0&&p.fromArray(f.center),o.boundingSphere=new Zi(p,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class Zv extends on{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?El.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Gn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let h=null;try{h=JSON.parse(l)}catch(d){i!==void 0&&i(d),console.error("THREE:ObjectLoader: Can't parse "+e+".",d.message);return}const u=h.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?El.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Gn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),h=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,u),t!==void 0){let d=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){d=!0;break}d===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),h=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,h),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new ki().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new jo().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Dd;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in fh?a=fh[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),a.isBufferGeometry===!0&&l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new ia;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=_r.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const h=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(u)}else return l.data?{data:ys(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new nc(t);s=new vr(l),s.setCrossOrigin(this.crossOrigin);for(let h=0,u=e.length;h<u;h++){const d=e[h],f=d.url;if(Array.isArray(f)){const p=[];for(let _=0,g=f.length;_<g;_++){const m=f[_],x=a(m);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new Ss(x.data,x.width,x.height)))}i[d.uuid]=new Oi(p)}else{const p=a(d.url);i[d.uuid]=new Oi(p)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:ys(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new vr(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],h=l.url;if(Array.isArray(h)){const u=[];for(let d=0,f=h.length;d<f;d++){const p=h[d],_=await s(p);_!==null&&(_ instanceof HTMLImageElement?u.push(_):u.push(new Ss(_.data,_.width,_.height)))}n[l.uuid]=new Oi(u)}else{const u=await s(l.url);n[l.uuid]=new Oi(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],h=l.data;let u;Array.isArray(h)?(u=new br,h.length===6&&(u.needsUpdate=!0)):(h&&h.data?u=new Ss:u=new It,h&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,Jv)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],_h),u.wrapT=n(a.wrap[1],_h)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,vh)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,vh)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const p=[];for(let _=0,g=f.length;_<g;_++){const m=f[_];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),p.push(n[m])}return p}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function h(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,d;switch(e.type){case"Scene":o=new Yu,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Se(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Ko(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Jo(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":o=new Ut(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Yo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Rd(e.color,e.intensity);break;case"DirectionalLight":o=new Cd(e.color,e.intensity);break;case"PointLight":o=new Ad(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Ld(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Td(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new Ed(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new na().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),d=l(e.material),o=new $u(u,d),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),d=l(e.material),o=new Bt(u,d);break;case"InstancedMesh":u=a(e.geometry),d=l(e.material);const f=e.count,p=e.instanceMatrix,_=e.instanceColor;o=new ju(u,d,f),o.instanceMatrix=new As(new Float32Array(p.array),16),_!==void 0&&(o.instanceColor=new As(new Float32Array(_.array),_.itemSize));break;case"LOD":o=new Ku;break;case"Line":o=new hi(a(e.geometry),l(e.material));break;case"LineLoop":o=new Qu(a(e.geometry),l(e.material));break;case"LineSegments":o=new Cn(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new ed(a(e.geometry),l(e.material));break;case"Sprite":o=new Ju(l(e.material));break;case"Group":o=new bs;break;case"Bone":o=new Gl;break;default:o=new rt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let p=0;p<f.length;p++)o.add(this.parseObject(f[p],t,n,i,s))}if(e.animations!==void 0){const f=e.animations;for(let p=0;p<f.length;p++){const _=f[p];o.animations.push(s[_])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let p=0;p<f.length;p++){const _=f[p],g=o.getObjectByProperty("uuid",_.object);g!==void 0&&o.addLevel(g,_.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const Jv={UVMapping:Ho,CubeReflectionMapping:oi,CubeRefractionMapping:ai,EquirectangularReflectionMapping:tr,EquirectangularRefractionMapping:nr,CubeUVReflectionMapping:Cs},_h={RepeatWrapping:ir,ClampToEdgeWrapping:Ht,MirroredRepeatWrapping:sr},vh={NearestFilter:Ct,NearestMipmapNearestFilter:Fo,NearestMipmapLinearFilter:Uo,LinearFilter:St,LinearMipmapNearestFilter:Pl,LinearMipmapLinearFilter:qi};class Kv extends on{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Xi.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Xi.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let yo;class sc{static getContext(){return yo===void 0&&(yo=new(window.AudioContext||window.webkitAudioContext)),yo}static setContext(e){yo=e}}class $v extends on{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Gn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);sc.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}class jv extends na{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Se().set(e),s=new Se().set(t),o=new N(i.r,i.g,i.b),a=new N(s.r,s.g,s.b),l=Math.sqrt(Math.PI),h=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(h)}}class Qv extends na{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Se().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const xh=new Xe,yh=new Xe,Si=new Xe;class ex{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ut,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ut,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Si.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(Bi*t.fov*.5)/t.zoom;let a,l;yh.elements[12]=-i,xh.elements[12]=i,a=-o*t.aspect+s,l=o*t.aspect+s,Si.elements[0]=2*t.near/(l-a),Si.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Si),a=-o*t.aspect-s,l=o*t.aspect-s,Si.elements[0]=2*t.near/(l-a),Si.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Si)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(yh),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(xh)}}class Od{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Mh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Mh();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Mh(){return(typeof performance=="undefined"?Date:performance).now()}const Ei=new N,bh=new Jt,tx=new N,Ti=new N;class nx extends rt{constructor(){super(),this.type="AudioListener",this.context=sc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Od}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ei,bh,tx),Ti.set(0,0,-1).applyQuaternion(bh),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ei.x,i),t.positionY.linearRampToValueAtTime(Ei.y,i),t.positionZ.linearRampToValueAtTime(Ei.z,i),t.forwardX.linearRampToValueAtTime(Ti.x,i),t.forwardY.linearRampToValueAtTime(Ti.y,i),t.forwardZ.linearRampToValueAtTime(Ti.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ei.x,Ei.y,Ei.z),t.setOrientation(Ti.x,Ti.y,Ti.z,n.x,n.y,n.z)}}class Nd extends rt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Ai=new N,wh=new Jt,ix=new N,Ci=new N;class sx extends Nd{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ai,wh,ix),Ci.set(0,0,1).applyQuaternion(wh);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ai.x,n),t.positionY.linearRampToValueAtTime(Ai.y,n),t.positionZ.linearRampToValueAtTime(Ai.z,n),t.orientationX.linearRampToValueAtTime(Ci.x,n),t.orientationY.linearRampToValueAtTime(Ci.y,n),t.orientationZ.linearRampToValueAtTime(Ci.z,n)}else t.setPosition(Ai.x,Ai.y,Ai.z),t.setOrientation(Ci.x,Ci.y,Ci.z)}}class rx{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Fd{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Jt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;Jt.multiplyQuaternionsFlat(e,o,e,t,e,n),Jt.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const rc="\\[\\]\\.:\\/",ox=new RegExp("["+rc+"]","g"),oc="[^"+rc+"]",ax="[^"+rc.replace("\\.","")+"]",lx=/((?:WC+[\/:])*)/.source.replace("WC",oc),cx=/(WCOD+)?/.source.replace("WCOD",ax),hx=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",oc),ux=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",oc),dx=new RegExp("^"+lx+cx+hx+ux+"$"),fx=["material","materials","bones","map"];class px{constructor(e,t,n){const i=n||it.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class it{constructor(e,t,n){this.path=t,this.parsedPath=n||it.parseTrackName(t),this.node=it.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new it.Composite(e,t,n):new it(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ox,"")}static parseTrackName(e){const t=dx.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);fx.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=it.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===h){h=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}it.Composite=px;it.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};it.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};it.prototype.GetterByBindingType=[it.prototype._getValue_direct,it.prototype._getValue_array,it.prototype._getValue_arrayElement,it.prototype._getValue_toArray];it.prototype.SetterByBindingTypeAndVersioning=[[it.prototype._setValue_direct,it.prototype._setValue_direct_setNeedsUpdate,it.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[it.prototype._setValue_array,it.prototype._setValue_array_setNeedsUpdate,it.prototype._setValue_array_setMatrixWorldNeedsUpdate],[it.prototype._setValue_arrayElement,it.prototype._setValue_arrayElement_setNeedsUpdate,it.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[it.prototype._setValue_fromArray,it.prototype._setValue_fromArray_setNeedsUpdate,it.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class mx{constructor(){this.isAnimationObjectGroup=!0,this.uuid=rn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,h=this.nCachedObjects_;for(let u=0,d=arguments.length;u!==d;++u){const f=arguments[u],p=f.uuid;let _=t[p];if(_===void 0){_=l++,t[p]=_,e.push(f);for(let g=0,m=o;g!==m;++g)s[g].push(new it(f,n[g],i[g]))}else if(_<h){a=e[_];const g=--h,m=e[g];t[m.uuid]=_,e[_]=m,t[p]=g,e[g]=f;for(let x=0,C=o;x!==C;++x){const S=s[x],w=S[g];let R=S[_];S[_]=w,R===void 0&&(R=new it(f,n[x],i[x])),S[g]=R}}else e[_]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],h=l.uuid,u=t[h];if(u!==void 0&&u>=s){const d=s++,f=e[d];t[f.uuid]=u,e[u]=f,t[h]=d,e[d]=l;for(let p=0,_=i;p!==_;++p){const g=n[p],m=g[d],x=g[u];g[u]=m,g[d]=x}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const h=arguments[a],u=h.uuid,d=t[u];if(d!==void 0)if(delete t[u],d<s){const f=--s,p=e[f],_=--o,g=e[_];t[p.uuid]=d,e[d]=p,t[g.uuid]=f,e[f]=g,e.pop();for(let m=0,x=i;m!==x;++m){const C=n[m],S=C[f],w=C[_];C[d]=S,C[f]=w,C.pop()}}else{const f=--o,p=e[f];f>0&&(t[p.uuid]=d),e[d]=p,e.pop();for(let _=0,g=i;_!==g;++_){const m=n[_];m[d]=m[f],m.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,h=l.length,u=this.nCachedObjects_,d=new Array(h);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(d);for(let f=u,p=l.length;f!==p;++f){const _=l[f];d[f]=new it(_,e,t)}return d}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],h=e[a];t[h]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class gx{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Ii,endingEnd:Ii};for(let h=0;h!==o;++h){const u=s[h].createInterpolant(null);a[h]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Eu,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,h=a.sampleValues;return l[0]=s,l[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Dl:for(let u=0,d=l.length;u!==d;++u)l[u].evaluate(o),h[u].accumulateAdditive(a);break;case Go:default:for(let u=0,d=l.length;u!==d;++u)l[u].evaluate(o),h[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===Tu;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===Su){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Di,i.endingEnd=Di):(e?i.endingStart=this.zeroSlopeAtStart?Di:Ii:i.endingStart=ar,t?i.endingEnd=this.zeroSlopeAtEnd?Di:Ii:i.endingEnd=ar)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}const _x=new Float32Array(1);class vx extends Vn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,h=this._bindingsByRootAndName;let u=h[l];u===void 0&&(u={},h[l]=u);for(let d=0;d!==s;++d){const f=i[d],p=f.name;let _=u[p];if(_!==void 0)++_.referenceCount,o[d]=_;else{if(_=o[d],_!==void 0){_._cacheIndex===null&&(++_.referenceCount,this._addInactiveBinding(_,l,p));continue}const g=t&&t._propertyBindings[d].binding.parsedPath;_=new Fd(it.create(n,p,g),f.ValueTypeName,f.getValueSize()),++_.referenceCount,this._addInactiveBinding(_,l,p),o[d]=_}a[d].resultBuffer=_.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,h=l[l.length-1],u=e._byClipCacheIndex;h._byClipCacheIndex=u,l[u]=h,l.pop(),e._byClipCacheIndex=null;const d=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete d[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],h=e._cacheIndex;l._cacheIndex=h,t[h]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new ec(new Float32Array(2),new Float32Array(2),1,_x),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?_r.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Go),l!==void 0){const d=l.actionByRoot[s];if(d!==void 0&&d.blendMode===n)return d;h=l.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const u=new gx(this,o,t,n);return this._bindAction(u,h),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?_r.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let h=0;h!==l;++h)a[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const h=o[a];this._deactivateAction(h);const u=h._cacheIndex,d=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,d._cacheIndex=u,t[u]=d,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class ac{constructor(e){this.value=e}clone(){return new ac(this.value.clone===void 0?this.value:this.value.clone())}}let xx=0;class yx extends Vn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:xx++}),this.name="",this.usage=lr,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class Mx extends $o{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class bx{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class wx{constructor(e,t,n=0,i=1/0){this.ray=new Mr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Wo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Tl(e,this,n,t),n.sort(Sh),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Tl(e[i],this,n,t);return n.sort(Sh),n}}function Sh(r,e){return r.distance-e.distance}function Tl(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Tl(i[s],e,t,!0)}}class Sx{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Et(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Ex{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Eh=new ae;class Tx{constructor(e=new ae(1/0,1/0),t=new ae(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Eh.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Eh.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Th=new N,Mo=new N;class Ax{constructor(e=new N,t=new N){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Th.subVectors(e,this.start),Mo.subVectors(this.end,this.start);const n=Mo.dot(Mo);let s=Mo.dot(Th)/n;return t&&(s=Et(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Ah=new N;class Cx extends rt{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new $e,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const h=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Ce(i,3));const s=new qt({fog:!1,toneMapped:!1});this.cone=new Cn(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Ah.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ah),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ti=new N,bo=new Xe,Ga=new Xe;class Rx extends Cn{constructor(e){const t=Ud(e),n=new $e,i=[],s=[],o=new Se(0,0,1),a=new Se(0,1,0);for(let h=0;h<t.length;h++){const u=t[h];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Ce(i,3)),n.setAttribute("color",new Ce(s,3));const l=new qt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Ga.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(bo.multiplyMatrices(Ga,a.matrixWorld),ti.setFromMatrixPosition(bo),i.setXYZ(o,ti.x,ti.y,ti.z),bo.multiplyMatrices(Ga,a.parent.matrixWorld),ti.setFromMatrixPosition(bo),i.setXYZ(o+1,ti.x,ti.y,ti.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ud(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Ud(r.children[t]));return e}class Lx extends Bt{constructor(e,t,n){const i=new Os(t,4,2),s=new di({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Px=new N,Ch=new Se,Rh=new Se;class Ix extends rt{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Ds(t);i.rotateY(Math.PI*.5),this.material=new di({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new gt(o,3)),this.add(new Bt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Ch.copy(this.light.color),Rh.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?Ch:Rh;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(Px.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Dx extends Cn{constructor(e=10,t=10,n=4473924,i=8947848){n=new Se(n),i=new Se(i);const s=t/2,o=e/t,a=e/2,l=[],h=[];for(let f=0,p=0,_=-a;f<=t;f++,_+=o){l.push(-a,0,_,a,0,_),l.push(_,0,-a,_,0,a);const g=f===s?n:i;g.toArray(h,p),p+=3,g.toArray(h,p),p+=3,g.toArray(h,p),p+=3,g.toArray(h,p),p+=3}const u=new $e;u.setAttribute("position",new Ce(l,3)),u.setAttribute("color",new Ce(h,3));const d=new qt({vertexColors:!0,toneMapped:!1});super(u,d),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ox extends Cn{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new Se(s),o=new Se(o);const a=[],l=[];if(t>1)for(let d=0;d<t;d++){const f=d/t*(Math.PI*2),p=Math.sin(f)*e,_=Math.cos(f)*e;a.push(0,0,0),a.push(p,0,_);const g=d&1?s:o;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let d=0;d<n;d++){const f=d&1?s:o,p=e-e/n*d;for(let _=0;_<i;_++){let g=_/i*(Math.PI*2),m=Math.sin(g)*p,x=Math.cos(g)*p;a.push(m,0,x),l.push(f.r,f.g,f.b),g=(_+1)/i*(Math.PI*2),m=Math.sin(g)*p,x=Math.cos(g)*p,a.push(m,0,x),l.push(f.r,f.g,f.b)}}const h=new $e;h.setAttribute("position",new Ce(a,3)),h.setAttribute("color",new Ce(l,3));const u=new qt({vertexColors:!0,toneMapped:!1});super(h,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Lh=new N,wo=new N,Ph=new N;class Nx extends rt{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new $e;i.setAttribute("position",new Ce([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new qt({fog:!1,toneMapped:!1});this.lightPlane=new hi(i,s),this.add(this.lightPlane),i=new $e,i.setAttribute("position",new Ce([0,0,0,0,0,1],3)),this.targetLine=new hi(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Lh.setFromMatrixPosition(this.light.matrixWorld),wo.setFromMatrixPosition(this.light.target.matrixWorld),Ph.subVectors(wo,Lh),this.lightPlane.lookAt(wo),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(wo),this.targetLine.scale.z=Ph.length()}}const So=new N,Mt=new Xo;class Fx extends Cn{constructor(e){const t=new $e,n=new qt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(_,g){l(_),l(g)}function l(_){i.push(0,0,0),s.push(0,0,0),o[_]===void 0&&(o[_]=[]),o[_].push(i.length/3-1)}t.setAttribute("position",new Ce(i,3)),t.setAttribute("color",new Ce(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Se(16755200),u=new Se(16711680),d=new Se(43775),f=new Se(16777215),p=new Se(3355443);this.setColors(h,u,d,f,p)}setColors(e,t,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Mt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),wt("c",t,e,Mt,0,0,-1),wt("t",t,e,Mt,0,0,1),wt("n1",t,e,Mt,-n,-i,-1),wt("n2",t,e,Mt,n,-i,-1),wt("n3",t,e,Mt,-n,i,-1),wt("n4",t,e,Mt,n,i,-1),wt("f1",t,e,Mt,-n,-i,1),wt("f2",t,e,Mt,n,-i,1),wt("f3",t,e,Mt,-n,i,1),wt("f4",t,e,Mt,n,i,1),wt("u1",t,e,Mt,n*.7,i*1.1,-1),wt("u2",t,e,Mt,-n*.7,i*1.1,-1),wt("u3",t,e,Mt,0,i*2,-1),wt("cf1",t,e,Mt,-n,0,1),wt("cf2",t,e,Mt,n,0,1),wt("cf3",t,e,Mt,0,-i,1),wt("cf4",t,e,Mt,0,i,1),wt("cn1",t,e,Mt,-n,0,-1),wt("cn2",t,e,Mt,n,0,-1),wt("cn3",t,e,Mt,0,-i,-1),wt("cn4",t,e,Mt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function wt(r,e,t,n,i,s,o){So.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const l=t.getAttribute("position");for(let h=0,u=a.length;h<u;h++)l.setXYZ(a[h],So.x,So.y,So.z)}}const Eo=new Yi;class Ux extends Cn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new $e;s.setIndex(new gt(n,1)),s.setAttribute("position",new gt(i,3)),super(s,new qt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Eo.setFromObject(this.object),Eo.isEmpty())return;const t=Eo.min,n=Eo.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Bx extends Cn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new $e;s.setIndex(new gt(n,1)),s.setAttribute("position",new Ce(i,3)),super(s,new qt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class zx extends hi{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new $e;o.setAttribute("position",new Ce(s,3)),o.computeBoundingSphere(),super(o,new qt({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new $e;l.setAttribute("position",new Ce(a,3)),l.computeBoundingSphere(),this.add(new Bt(l,new di({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Ih=new N;let To,Va;class kx extends rt{constructor(e=new N(0,0,1),t=new N(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",To===void 0&&(To=new $e,To.setAttribute("position",new Ce([0,0,0,0,1,0],3)),Va=new Ji(0,.5,1,5,1),Va.translate(0,-.5,0)),this.position.copy(t),this.line=new hi(To,new qt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Bt(Va,new di({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Ih.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Ih,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Hx extends Cn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new $e;i.setAttribute("position",new Ce(t,3)),i.setAttribute("color",new Ce(n,3));const s=new qt({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Se,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Gx{constructor(){this.type="ShapePath",this.color=new Se,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ur,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(x){const C=[];for(let S=0,w=x.length;S<w;S++){const R=x[S],I=new ki;I.curves=R.curves,C.push(I)}return C}function n(x,C){const S=C.length;let w=!1;for(let R=S-1,I=0;I<S;R=I++){let B=C[R],E=C[I],O=E.x-B.x,z=E.y-B.y;if(Math.abs(z)>Number.EPSILON){if(z<0&&(B=C[I],O=-O,E=C[R],z=-z),x.y<B.y||x.y>E.y)continue;if(x.y===B.y){if(x.x===B.x)return!0}else{const J=z*(x.x-B.x)-O*(x.y-B.y);if(J===0)return!0;if(J<0)continue;w=!w}}else{if(x.y!==B.y)continue;if(E.x<=x.x&&x.x<=B.x||B.x<=x.x&&x.x<=E.x)return!0}}return w}const i=Tn.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const h=[];if(s.length===1)return a=s[0],l=new ki,l.curves=a.curves,h.push(l),h;let u=!i(s[0].getPoints());u=e?!u:u;const d=[],f=[];let p=[],_=0,g;f[_]=void 0,p[_]=[];for(let x=0,C=s.length;x<C;x++)a=s[x],g=a.getPoints(),o=i(g),o=e?!o:o,o?(!u&&f[_]&&_++,f[_]={s:new ki,p:g},f[_].s.curves=a.curves,u&&_++,p[_]=[]):p[_].push({h:a,p:g[0]});if(!f[0])return t(s);if(f.length>1){let x=!1,C=0;for(let S=0,w=f.length;S<w;S++)d[S]=[];for(let S=0,w=f.length;S<w;S++){const R=p[S];for(let I=0;I<R.length;I++){const B=R[I];let E=!0;for(let O=0;O<f.length;O++)n(B.p,f[O].p)&&(S!==O&&C++,E?(E=!1,d[O].push(B)):x=!0);E&&d[S].push(B)}}C>0&&x===!1&&(p=d)}let m;for(let x=0,C=f.length;x<C;x++){l=f[x].s,h.push(l),m=p[x];for(let S=0,w=m.length;S<w;S++)l.holes.push(m[S].h)}return h}}const Un=Vx();function Vx(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const h=l-127;h<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):h<-14?(n[l]=1024>>-h-14,n[l|256]=1024>>-h-14|32768,i[l]=-h-1,i[l|256]=-h-1):h<=15?(n[l]=h+15<<10,n[l|256]=h+15<<10|32768,i[l]=13,i[l|256]=13):h<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let h=l<<13,u=0;for(;(h&8388608)===0;)h<<=1,u-=8388608;h&=-8388609,u+=947912704,s[l]=h|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function Wx(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Et(r,-65504,65504),Un.floatView[0]=r;const e=Un.uint32View[0],t=e>>23&511;return Un.baseTable[t]+((e&8388607)>>Un.shiftTable[t])}function Xx(r){const e=r>>10;return Un.uint32View[0]=Un.mantissaTable[Un.offsetTable[e]+(r&1023)]+Un.exponentTable[e],Un.floatView[0]}var qx=Object.freeze({__proto__:null,toHalfFloat:Wx,fromHalfFloat:Xx});function Yx(){console.error("THREE.ImmediateRenderObject has been removed.")}class Zx extends fn{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class Jx extends yr{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class Kx extends Vo{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}class $x extends fi{constructor(e,t,n,i,s,o){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,o)}}class jx extends wr{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class Qx extends Sr{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class ey extends Er{constructor(e,t,n,i,s,o,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,o,a)}}class ty extends Ji{constructor(e,t,n,i,s,o,a,l){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,o,a,l)}}class ny extends Tr{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class iy extends Ar{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class sy extends Cr{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class ry extends Is{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class oy extends Ds{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class ay extends Ls{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class ly extends Wn{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class cy extends Rr{constructor(e,t,n,i,s,o){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,o)}}class hy extends Lr{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class uy extends Os{constructor(e,t,n,i,s,o,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,o,a)}}class dy extends Pr{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class fy extends Ir{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class py extends Dr{constructor(e,t,n,i,s,o){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,o)}}class my extends Or{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ko}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ko);A.ACESFilmicToneMapping=au;A.AddEquation=Li;A.AddOperation=iu;A.AdditiveAnimationBlendMode=Dl;A.AdditiveBlending=Xa;A.AlphaFormat=pu;A.AlwaysDepth=Kh;A.AlwaysStencilFunc=Lu;A.AmbientLight=Rd;A.AmbientLightProbe=Qv;A.AnimationClip=_r;A.AnimationLoader=kv;A.AnimationMixer=vx;A.AnimationObjectGroup=mx;A.AnimationUtils=Fv;A.ArcCurve=td;A.ArrayCamera=Vu;A.ArrowHelper=kx;A.Audio=Nd;A.AudioAnalyser=rx;A.AudioContext=sc;A.AudioListener=nx;A.AudioLoader=$v;A.AxesHelper=Hx;A.BackSide=sn;A.BasicDepthPacking=Au;A.BasicShadowMap=lf;A.Bone=Gl;A.BooleanKeyframeTrack=Ki;A.Box2=Tx;A.Box3=Yi;A.Box3Helper=Bx;A.BoxBufferGeometry=$x;A.BoxGeometry=fi;A.BoxHelper=Ux;A.BufferAttribute=gt;A.BufferGeometry=$e;A.BufferGeometryLoader=Dd;A.ByteType=cu;A.Cache=Xi;A.Camera=Xo;A.CameraHelper=Fx;A.CanvasTexture=ov;A.CapsuleBufferGeometry=jx;A.CapsuleGeometry=wr;A.CatmullRomCurve3=nd;A.CineonToneMapping=ou;A.CircleBufferGeometry=Qx;A.CircleGeometry=Sr;A.ClampToEdgeWrapping=Ht;A.Clock=Od;A.Color=Se;A.ColorKeyframeTrack=tc;A.ColorManagement=hn;A.CompressedArrayTexture=rv;A.CompressedTexture=Wl;A.CompressedTextureLoader=Hv;A.ConeBufferGeometry=ey;A.ConeGeometry=Er;A.CubeCamera=Nu;A.CubeReflectionMapping=oi;A.CubeRefractionMapping=ai;A.CubeTexture=br;A.CubeTextureLoader=Gv;A.CubeUVReflectionMapping=Cs;A.CubicBezierCurve=ql;A.CubicBezierCurve3=id;A.CubicInterpolant=Md;A.CullFaceBack=Wa;A.CullFaceFront=Nh;A.CullFaceFrontBack=af;A.CullFaceNone=Oh;A.Curve=yn;A.CurvePath=rd;A.CustomBlending=Uh;A.CustomToneMapping=lu;A.CylinderBufferGeometry=ty;A.CylinderGeometry=Ji;A.Cylindrical=Ex;A.Data3DTexture=Vo;A.DataArrayTexture=yr;A.DataTexture=Ss;A.DataTexture2DArray=Jx;A.DataTexture3D=Kx;A.DataTextureLoader=Vv;A.DataUtils=qx;A.DecrementStencilOp=yf;A.DecrementWrapStencilOp=bf;A.DefaultLoadingManager=Sd;A.DepthFormat=ri;A.DepthStencilFormat=Gi;A.DepthTexture=Wu;A.DirectionalLight=Cd;A.DirectionalLightHelper=Nx;A.DiscreteInterpolant=bd;A.DodecahedronBufferGeometry=ny;A.DodecahedronGeometry=Tr;A.DoubleSide=Bn;A.DstAlphaFactor=Wh;A.DstColorFactor=qh;A.DynamicCopyUsage=Uf;A.DynamicDrawUsage=Pf;A.DynamicReadUsage=Of;A.EdgesGeometry=od;A.EllipseCurve=Qo;A.EqualDepth=jh;A.EqualStencilFunc=Tf;A.EquirectangularReflectionMapping=tr;A.EquirectangularRefractionMapping=nr;A.Euler=Rs;A.EventDispatcher=Vn;A.ExtrudeBufferGeometry=iy;A.ExtrudeGeometry=Ar;A.FileLoader=Gn;A.Float16BufferAttribute=vp;A.Float32BufferAttribute=Ce;A.Float64BufferAttribute=xp;A.FloatType=zn;A.Fog=Ko;A.FogExp2=Jo;A.FramebufferTexture=sv;A.FrontSide=Hi;A.Frustum=qo;A.GLBufferAttribute=bx;A.GLSL1=zf;A.GLSL3=_l;A.GreaterDepth=eu;A.GreaterEqualDepth=Qh;A.GreaterEqualStencilFunc=Lf;A.GreaterStencilFunc=Cf;A.GridHelper=Dx;A.Group=bs;A.HalfFloatType=Es;A.HemisphereLight=Ed;A.HemisphereLightHelper=Ix;A.HemisphereLightProbe=jv;A.IcosahedronBufferGeometry=sy;A.IcosahedronGeometry=Cr;A.ImageBitmapLoader=Kv;A.ImageLoader=vr;A.ImageUtils=Nl;A.ImmediateRenderObject=Yx;A.IncrementStencilOp=xf;A.IncrementWrapStencilOp=Mf;A.InstancedBufferAttribute=As;A.InstancedBufferGeometry=Id;A.InstancedInterleavedBuffer=Mx;A.InstancedMesh=ju;A.Int16BufferAttribute=gp;A.Int32BufferAttribute=_p;A.Int8BufferAttribute=fp;A.IntType=uu;A.InterleavedBuffer=$o;A.InterleavedBufferAttribute=Vi;A.Interpolant=Nr;A.InterpolateDiscrete=rr;A.InterpolateLinear=or;A.InterpolateSmooth=Po;A.InvertStencilOp=wf;A.KeepStencilOp=Io;A.KeyframeTrack=Mn;A.LOD=Ku;A.LatheBufferGeometry=ry;A.LatheGeometry=Is;A.Layers=Wo;A.LessDepth=$h;A.LessEqualDepth=No;A.LessEqualStencilFunc=Af;A.LessStencilFunc=Ef;A.Light=pi;A.LightProbe=na;A.Line=hi;A.Line3=Ax;A.LineBasicMaterial=qt;A.LineCurve=ea;A.LineCurve3=sd;A.LineDashedMaterial=xd;A.LineLoop=Qu;A.LineSegments=Cn;A.LinearEncoding=ci;A.LinearFilter=St;A.LinearInterpolant=ec;A.LinearMipMapLinearFilter=df;A.LinearMipMapNearestFilter=uf;A.LinearMipmapLinearFilter=qi;A.LinearMipmapNearestFilter=Pl;A.LinearSRGBColorSpace=si;A.LinearToneMapping=su;A.Loader=on;A.LoaderUtils=El;A.LoadingManager=nc;A.LoopOnce=Su;A.LoopPingPong=Tu;A.LoopRepeat=Eu;A.LuminanceAlphaFormat=_u;A.LuminanceFormat=gu;A.MOUSE=rf;A.Material=Gt;A.MaterialLoader=ia;A.MathUtils=Qf;A.Matrix3=Zt;A.Matrix4=Xe;A.MaxEquation=Ja;A.Mesh=Bt;A.MeshBasicMaterial=di;A.MeshDepthMaterial=zl;A.MeshDistanceMaterial=kl;A.MeshLambertMaterial=_d;A.MeshMatcapMaterial=vd;A.MeshNormalMaterial=gd;A.MeshPhongMaterial=pd;A.MeshPhysicalMaterial=fd;A.MeshStandardMaterial=$l;A.MeshToonMaterial=md;A.MinEquation=Za;A.MirroredRepeatWrapping=sr;A.MixOperation=nu;A.MultiplyBlending=Ya;A.MultiplyOperation=xr;A.NearestFilter=Ct;A.NearestMipMapLinearFilter=hf;A.NearestMipMapNearestFilter=cf;A.NearestMipmapLinearFilter=Uo;A.NearestMipmapNearestFilter=Fo;A.NeverDepth=Jh;A.NeverStencilFunc=Sf;A.NoBlending=Hn;A.NoColorSpace=gf;A.NoToneMapping=En;A.NormalAnimationBlendMode=Go;A.NormalBlending=Fi;A.NotEqualDepth=tu;A.NotEqualStencilFunc=Rf;A.NumberKeyframeTrack=mr;A.Object3D=rt;A.ObjectLoader=Zv;A.ObjectSpaceNormalMap=Ru;A.OctahedronBufferGeometry=oy;A.OctahedronGeometry=Ds;A.OneFactor=Hh;A.OneMinusDstAlphaFactor=Xh;A.OneMinusDstColorFactor=Yh;A.OneMinusSrcAlphaFactor=Ll;A.OneMinusSrcColorFactor=Vh;A.OrthographicCamera=Yo;A.PCFShadowMap=Cl;A.PCFSoftShadowMap=Fh;A.PMREMGenerator=xl;A.Path=ur;A.PerspectiveCamera=Ut;A.Plane=ni;A.PlaneBufferGeometry=ay;A.PlaneGeometry=Ls;A.PlaneHelper=zx;A.PointLight=Ad;A.PointLightHelper=Lx;A.Points=ed;A.PointsMaterial=Vl;A.PolarGridHelper=Ox;A.PolyhedronBufferGeometry=ly;A.PolyhedronGeometry=Wn;A.PositionalAudio=sx;A.PropertyBinding=it;A.PropertyMixer=Fd;A.QuadraticBezierCurve=Yl;A.QuadraticBezierCurve3=Zl;A.Quaternion=Jt;A.QuaternionKeyframeTrack=Ns;A.QuaternionLinearInterpolant=wd;A.REVISION=ko;A.RGBADepthPacking=Cu;A.RGBAFormat=nn;A.RGBAIntegerFormat=bu;A.RGBA_ASTC_10x10_Format=fl;A.RGBA_ASTC_10x5_Format=hl;A.RGBA_ASTC_10x6_Format=ul;A.RGBA_ASTC_10x8_Format=dl;A.RGBA_ASTC_12x10_Format=pl;A.RGBA_ASTC_12x12_Format=ml;A.RGBA_ASTC_4x4_Format=nl;A.RGBA_ASTC_5x4_Format=il;A.RGBA_ASTC_5x5_Format=sl;A.RGBA_ASTC_6x5_Format=rl;A.RGBA_ASTC_6x6_Format=ol;A.RGBA_ASTC_8x5_Format=al;A.RGBA_ASTC_8x6_Format=ll;A.RGBA_ASTC_8x8_Format=cl;A.RGBA_BPTC_Format=gl;A.RGBA_ETC2_EAC_Format=tl;A.RGBA_PVRTC_2BPPV1_Format=Qa;A.RGBA_PVRTC_4BPPV1_Format=ja;A.RGBA_S3TC_DXT1_Format=Co;A.RGBA_S3TC_DXT3_Format=Ro;A.RGBA_S3TC_DXT5_Format=Lo;A.RGBFormat=mu;A.RGB_ETC1_Format=wu;A.RGB_ETC2_Format=el;A.RGB_PVRTC_2BPPV1_Format=$a;A.RGB_PVRTC_4BPPV1_Format=Ka;A.RGB_S3TC_DXT1_Format=Ao;A.RGFormat=yu;A.RGIntegerFormat=Mu;A.RawShaderMaterial=dd;A.Ray=Mr;A.Raycaster=wx;A.RectAreaLight=Ld;A.RedFormat=vu;A.RedIntegerFormat=xu;A.ReinhardToneMapping=ru;A.RepeatWrapping=ir;A.ReplaceStencilOp=vf;A.ReverseSubtractEquation=zh;A.RingBufferGeometry=cy;A.RingGeometry=Rr;A.SRGBColorSpace=Sn;A.Scene=Yu;A.ShaderChunk=Ke;A.ShaderLib=xn;A.ShaderMaterial=An;A.ShadowMaterial=ud;A.Shape=ki;A.ShapeBufferGeometry=hy;A.ShapeGeometry=Lr;A.ShapePath=Gx;A.ShapeUtils=Tn;A.ShortType=hu;A.Skeleton=jo;A.SkeletonHelper=Rx;A.SkinnedMesh=$u;A.Source=Oi;A.Sphere=Zi;A.SphereBufferGeometry=uy;A.SphereGeometry=Os;A.Spherical=Sx;A.SphericalHarmonics3=Pd;A.SplineCurve=Jl;A.SpotLight=Td;A.SpotLightHelper=Cx;A.Sprite=Ju;A.SpriteMaterial=Hl;A.SrcAlphaFactor=Rl;A.SrcAlphaSaturateFactor=Zh;A.SrcColorFactor=Gh;A.StaticCopyUsage=Ff;A.StaticDrawUsage=lr;A.StaticReadUsage=Df;A.StereoCamera=ex;A.StreamCopyUsage=Bf;A.StreamDrawUsage=If;A.StreamReadUsage=Nf;A.StringKeyframeTrack=$i;A.SubtractEquation=Bh;A.SubtractiveBlending=qa;A.TOUCH=of;A.TangentSpaceNormalMap=ui;A.TetrahedronBufferGeometry=dy;A.TetrahedronGeometry=Pr;A.Texture=It;A.TextureLoader=Wv;A.TorusBufferGeometry=fy;A.TorusGeometry=Ir;A.TorusKnotBufferGeometry=py;A.TorusKnotGeometry=Dr;A.Triangle=dn;A.TriangleFanDrawMode=mf;A.TriangleStripDrawMode=pf;A.TrianglesDrawMode=ff;A.TubeBufferGeometry=my;A.TubeGeometry=Or;A.UVMapping=Ho;A.Uint16BufferAttribute=Fl;A.Uint32BufferAttribute=Ul;A.Uint8BufferAttribute=pp;A.Uint8ClampedBufferAttribute=mp;A.Uniform=ac;A.UniformsGroup=yx;A.UniformsLib=ve;A.UniformsUtils=Ou;A.UnsignedByteType=li;A.UnsignedInt248Type=Ui;A.UnsignedIntType=ii;A.UnsignedShort4444Type=du;A.UnsignedShort5551Type=fu;A.UnsignedShortType=Il;A.VSMShadowMap=xs;A.Vector2=ae;A.Vector3=N;A.Vector4=ht;A.VectorKeyframeTrack=gr;A.VideoTexture=iv;A.WebGL1Renderer=qu;A.WebGL3DRenderTarget=ip;A.WebGLArrayRenderTarget=np;A.WebGLCubeRenderTarget=Fu;A.WebGLMultipleRenderTargets=sp;A.WebGLMultisampleRenderTarget=Zx;A.WebGLRenderTarget=fn;A.WebGLRenderer=Xu;A.WebGLUtils=Gu;A.WireframeGeometry=hd;A.WrapAroundEnding=ar;A.ZeroCurvatureEnding=Ii;A.ZeroFactor=kh;A.ZeroSlopeEnding=Di;A.ZeroStencilOp=_f;A._SRGBAFormat=Bo;A.sRGBEncoding=xt;var Al={exports:{}};/*!
 * uevent (v2.2.0)
 * @copyright 2015-2022 Damien "Mistic" Sorel <contact@git.strangeplanet.fr>
 * @licence MIT
 */(function(r,e){(function(t,n){n(e)})(Dh,function(t){var n=function(){return!0},i=function(){return!1},s=function(){function _(m,x,C){Object.defineProperties(this,{target:{get:function(){return m},set:function(){},enumerable:!0},type:{get:function(){return x},set:function(){},enumerable:!0},args:{get:function(){return C},set:function(){},enumerable:!0}}),this.isDefaultPrevented=i,this.isPropagationStopped=i}var g=_.prototype;return g.preventDefault=function(){this.isDefaultPrevented=n},g.stopPropagation=function(){this.isPropagationStopped=n},_}(),o=s,a=function(){function _(){}var g=_.prototype;return g.on=function(x,C){var S=this;if(this.__events=this.__events||{},typeof x=="object")for(var w in x)x.hasOwnProperty(w)&&(this.__events[w]=this.__events[w]||[],this.__events[w].push(x[w]));else x.split(" ").forEach(function(R){S.__events[R]=S.__events[R]||[],S.__events[R].push(C)});return this},g.off=function(x,C){var S=this;if(typeof x=="object"){for(var w in x)if(x.hasOwnProperty(w)){if(this.__events&&w in this.__events){var R=this.__events[w].indexOf(x[w]);R!==-1&&this.__events[w].splice(R,1)}if(this.__once&&w in this.__once){var I=this.__once[w].indexOf(x[w]);I!==-1&&this.__once[w].splice(I,1)}}}else x?x.split(" ").forEach(function(B){if(S.__events&&B in S.__events)if(C){var E=S.__events[B].indexOf(C);E!==-1&&S.__events[B].splice(E,1)}else S.__events[B].length=0;if(S.__once&&B in S.__once)if(C){var O=S.__once[B].indexOf(C);O!==-1&&S.__once[B].splice(O,1)}else S.__once[B].length=0}):(this.__events={},this.__once={});return this},g.once=function(x,C){var S=this;if(this.__once=this.__once||{},typeof x=="object")for(var w in x)x.hasOwnProperty(w)&&(this.__once[w]=this.__once[w]||[],this.__once[w].push(x[w]));else x.split(" ").forEach(function(R){S.__once[R]=S.__once[R]||[],S.__once[R].push(C)});return this},g.trigger=function(x){var C=Array.prototype.slice.call(arguments,1),S=new o(this,x,C);if(this.__events&&x in this.__events)for(var w=0,R=this.__events[x].length;w<R;w++){var I=this.__events[x][w];if(typeof I=="object"?I.handleEvent(S):I.call.apply(I,[this,S].concat(C)),S.isPropagationStopped())break}if(this.__once&&x in this.__once){for(var B=0,E=this.__once[x].length;B<E;B++){var O=this.__once[x][B];if(typeof O=="object"?O.handleEvent(S):O.call.apply(O,[this,S].concat(C)),S.isPropagationStopped())break}delete this.__once[x]}return S},g.change=function(x,C){var S=Array.prototype.slice.call(arguments,2),w=new o(this,x,S);if(w.value=C,this.__events&&x in this.__events)for(var R=0,I=this.__events[x].length;R<I;R++){var B=this.__events[x][R];if(typeof B=="object"?w.value=B.handleEvent(w):w.value=B.call.apply(B,[this,w,w.value].concat(S)),w.isPropagationStopped())break}return w.value},_}(),l=a;function h(_){return _=typeof _=="function"?_.prototype:_,["on","off","once","trigger","change"].forEach(function(g){_[g]=l.prototype[g]}),_}var u={EventEmitter:l,Event:o,mixin:h},d=u.EventEmitter,f=u.Event,p=u.mixin;t.Event=f,t.EventEmitter=d,t.default=u,t.mixin=p,Object.defineProperty(t,"__esModule",{value:!0})})})(Al,Al.exports);/*!
* Photo Sphere Viewer 4.8.0
* @copyright 2014-2015 Jérémy Heleine
* @copyright 2015-2022 Damien "Mistic" Sorel
* @licence MIT (https://opensource.org/licenses/MIT)
*/(function(r,e){(function(t,n){n(e,A,Al.exports)})(Dh,function(t,n,i){function s(T,y){for(var M=0;M<y.length;M++){var b=y[M];b.enumerable=b.enumerable||!1,b.configurable=!0,"value"in b&&(b.writable=!0),Object.defineProperty(T,b.key,b)}}function o(T,y,M){return y&&s(T.prototype,y),M&&s(T,M),Object.defineProperty(T,"prototype",{writable:!1}),T}function a(){return a=Object.assign?Object.assign.bind():function(T){for(var y=1;y<arguments.length;y++){var M=arguments[y];for(var b in M)Object.prototype.hasOwnProperty.call(M,b)&&(T[b]=M[b])}return T},a.apply(this,arguments)}function l(T,y){T.prototype=Object.create(y.prototype),T.prototype.constructor=T,h(T,y)}function h(T,y){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(b,c){return b.__proto__=c,b},h(T,y)}function u(T){if(T===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return T}function d(T){this.message=T,"captureStackTrace"in Error?Error.captureStackTrace(this,d):this.stack=new Error().stack}d.prototype=Object.create(Error.prototype),d.prototype.name="PSVError",d.prototype.constructor=d;var f=function(){function T(M){this.psv=M}var y=T.prototype;return y.destroy=function(){delete this.psv},y.supportsTransition=function(b){return!1},y.supportsPreload=function(b){return!1},y.loadTexture=function(b,c,v){throw new d("loadTexture not implemented")},y.createMesh=function(b){throw new d("createMesh not implemented")},y.setTexture=function(b,c,v){throw new d("setTexture not implemented")},y.setTextureOpacity=function(b,c){throw new d("setTextureOpacity not implemented")},y.disposeTexture=function(b){throw new d("disposeTexture not implemented")},y.setOverlay=function(b,c,v){throw new d("setOverlay not implemented")},T.createOverlayMaterial=function(b){var c,v=b===void 0?{}:b,P=v.additionalUniforms,U=v.overrideVertexShader;return new n.ShaderMaterial({uniforms:a({},P,(c={},c[T.OVERLAY_UNIFORMS.panorama]={value:new n.Texture},c[T.OVERLAY_UNIFORMS.overlay]={value:new n.Texture},c[T.OVERLAY_UNIFORMS.globalOpacity]={value:1},c[T.OVERLAY_UNIFORMS.overlayOpacity]={value:1},c)),vertexShader:U||`
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix *  modelViewMatrix * vec4( position, 1.0 );
}`,fragmentShader:`
uniform sampler2D `+T.OVERLAY_UNIFORMS.panorama+`;
uniform sampler2D `+T.OVERLAY_UNIFORMS.overlay+`;
uniform float `+T.OVERLAY_UNIFORMS.globalOpacity+`;
uniform float `+T.OVERLAY_UNIFORMS.overlayOpacity+`;

varying vec2 vUv;

void main() {
  vec4 tColor1 = texture2D( `+T.OVERLAY_UNIFORMS.panorama+`, vUv );
  vec4 tColor2 = texture2D( `+T.OVERLAY_UNIFORMS.overlay+`, vUv );
  gl_FragColor = vec4(
    mix( tColor1.rgb, tColor2.rgb, tColor2.a * `+T.OVERLAY_UNIFORMS.overlayOpacity+` ),
    `+T.OVERLAY_UNIFORMS.globalOpacity+`
  );
}`})},T}();f.id=null,f.supportsDownload=!1,f.supportsOverlay=!1,f.OVERLAY_UNIFORMS={panorama:"panorama",overlay:"overlay",globalOpacity:"globalOpacity",overlayOpacity:"overlayOpacity"};var p=1500,_=4,g=300,m=500,x=100,C=2e3,S=300,w=10,R="photoSphereViewer",I="psvSphere",B={ROTATE_LAT_UP:"rotateLatitudeUp",ROTATE_LAT_DOWN:"rotateLatitudeDown",ROTATE_LONG_RIGHT:"rotateLongitudeRight",ROTATE_LONG_LEFT:"rotateLongitudeLeft",ZOOM_IN:"zoomIn",ZOOM_OUT:"zoomOut",TOGGLE_AUTOROTATE:"toggleAutorotate"},E={AUTOROTATE:"autorotate",BEFORE_RENDER:"before-render",BEFORE_ROTATE:"before-rotate",CLICK:"click",CLOSE_PANEL:"close-panel",CONFIG_CHANGED:"config-changed",DOUBLE_CLICK:"dblclick",FULLSCREEN_UPDATED:"fullscreen-updated",HIDE_NOTIFICATION:"hide-notification",HIDE_OVERLAY:"hide-overlay",HIDE_TOOLTIP:"hide-tooltip",KEY_PRESS:"key-press",LOAD_PROGRESS:"load-progress",OPEN_PANEL:"open-panel",PANORAMA_LOADED:"panorama-loaded",POSITION_UPDATED:"position-updated",READY:"ready",RENDER:"render",SHOW_NOTIFICATION:"show-notification",SHOW_OVERLAY:"show-overlay",SHOW_TOOLTIP:"show-tooltip",SIZE_UPDATED:"size-updated",STOP_ALL:"stop-all",ZOOM_UPDATED:"zoom-updated"},O={GET_ANIMATE_POSITION:"get-animate-position",GET_ROTATE_POSITION:"get-rotate-position"},z={ENTER_OBJECT:"enter-object",HOVER_OBJECT:"hover-object",LEAVE_OBJECT:"leave-object"},J={MENU:"menu",TWO_FINGERS:"twoFingers",CTRL_ZOOM:"ctrlZoom",ERROR:"error",DESCRIPTION:"description"},le={linear:function(y){return y},inQuad:function(y){return y*y},outQuad:function(y){return y*(2-y)},inOutQuad:function(y){return y<.5?2*y*y:-1+(4-2*y)*y},inCubic:function(y){return y*y*y},outCubic:function(y){return--y*y*y+1},inOutCubic:function(y){return y<.5?4*y*y*y:(y-1)*(2*y-2)*(2*y-2)+1},inQuart:function(y){return y*y*y*y},outQuart:function(y){return 1- --y*y*y*y},inOutQuart:function(y){return y<.5?8*y*y*y*y:1-8*--y*y*y*y},inQuint:function(y){return y*y*y*y*y},outQuint:function(y){return 1+--y*y*y*y*y},inOutQuint:function(y){return y<.5?16*y*y*y*y*y:1+16*--y*y*y*y*y},inSine:function(y){return 1-Math.cos(y*(Math.PI/2))},outSine:function(y){return Math.sin(y*(Math.PI/2))},inOutSine:function(y){return .5-.5*Math.cos(Math.PI*y)},inExpo:function(y){return Math.pow(2,10*(y-1))},outExpo:function(y){return 1-Math.pow(2,-10*y)},inOutExpo:function(y){return(y=y*2-1)<0?.5*Math.pow(2,10*y):1-.5*Math.pow(2,-10*y)},inCirc:function(y){return 1-Math.sqrt(1-y*y)},outCirc:function(y){return Math.sqrt(1-(y-1)*(y-1))},inOutCirc:function(y){return(y*=2)<1?.5-.5*Math.sqrt(1-y*y):.5+.5*Math.sqrt(1-(y-=2)*y)}},Y={Enter:"Enter",Control:"Control",Escape:"Escape",Space:" ",PageUp:"PageUp",PageDown:"PageDown",ArrowLeft:"ArrowLeft",ArrowUp:"ArrowUp",ArrowRight:"ArrowRight",ArrowDown:"ArrowDown",Delete:"Delete",Plus:"+",Minus:"-"},H=Object.freeze({__proto__:null,DEFAULT_TRANSITION:p,MOVE_THRESHOLD:_,DBLCLICK_DELAY:g,LONGTOUCH_DELAY:m,TWOFINGERSOVERLAY_DELAY:x,CTRLZOOM_TIMEOUT:C,INERTIA_WINDOW:S,SPHERE_RADIUS:w,VIEWER_DATA:R,MESH_USER_DATA:I,ACTIONS:B,EVENTS:E,CHANGE_EVENTS:O,OBJECT_EVENTS:z,IDS:J,EASINGS:le,KEY_CODES:Y}),te=R+"_touchSupport",X={loaded:!1,pixelRatio:1,isWebGLSupported:!1,isTouchEnabled:null,maxTextureWidth:0,mouseWheelEvent:null,fullscreenEvent:null};X.load=function(){if(!X.loaded){var T=se();X.loaded=!0,X.pixelRatio=window.devicePixelRatio||1,X.isWebGLSupported=T!=null,X.isTouchEnabled=W(),X.maxTextureWidth=Z(T),X.mouseWheelEvent=ce(),X.fullscreenEvent=Ee()}};var de=null;X.getMaxCanvasWidth=function(){return de===null&&(de=fe(X.maxTextureWidth)),de};function se(){var T=document.createElement("canvas"),y=["webgl","experimental-webgl","moz-webgl","webkit-3d"],M=null;return T.getContext&&y.some(function(b){try{return M=T.getContext(b),M!==null}catch{return!1}})?M:null}function W(){var T="ontouchstart"in window||navigator.maxTouchPoints>0;te in localStorage&&(T=localStorage[te]==="true");var y=new Promise(function(M){var b,c=function(){b(),localStorage[te]=!1,M(!1)},v=function(){b(),localStorage[te]=!0,M(!0)},P=function(){b(),localStorage[te]=T,M(T)};window.addEventListener("mousedown",c,!1),window.addEventListener("touchstart",v,!1);var U=setTimeout(P,1e4);b=function(){window.removeEventListener("mousedown",c),window.removeEventListener("touchstart",v),clearTimeout(U)}});return{initial:T,promise:y}}function Z(T){return T!==null?T.getParameter(T.MAX_TEXTURE_SIZE):0}function fe(T){var y=document.createElement("canvas"),M=y.getContext("2d");for(y.width=T,y.height=T/2;y.width>1024;){M.fillStyle="white",M.fillRect(0,0,1,1);try{if(M.getImageData(0,0,1,1).data[0]>0)return y.width}catch{}y.width/=2,y.height/=2}throw new d("Unable to detect system capabilities")}function ce(){return"onwheel"in document.createElement("div")?"wheel":document.onmousewheel!==void 0?"mousewheel":"DOMMouseScroll"}var _e={exitFullscreen:"fullscreenchange",webkitExitFullscreen:"webkitfullscreenchange",mozCancelFullScreen:"mozfullscreenchange",msExitFullscreen:"MSFullscreenChange"};function Ee(){var T=Object.keys(_e).filter(function(y){return y in document});return T.length?_e[T[0]]:null}function ze(T,y,M){M===void 0?T.classList.toggle(y):M?T.classList.add(y):M||T.classList.remove(y)}function G(T,y){var M;(M=T.classList).add.apply(M,y.split(" "))}function Ye(T,y){var M;(M=T.classList).remove.apply(M,y.split(" "))}function Ne(T,y){var M=T;do{if(M===y)return!0;M=M.parentNode}while(M);return!1}function He(T,y){if(!(T!=null&&T.matches))return null;var M=T;do{if(M.matches(y))return M;M=M instanceof SVGElement?M.parentNode:M.parentElement}while(M);return null}function ye(T){for(var y=0,M=0,b=T;b;)y+=b.offsetLeft-b.scrollLeft+b.clientLeft,M+=b.offsetTop-b.scrollTop+b.clientTop,b=b.offsetParent;return{left:y,top:M}}function Ze(T){return(document.fullscreenElement||document.webkitFullscreenElement)===T}function re(T){(T.requestFullscreen||T.webkitRequestFullscreen).call(T)}function ie(){(document.exitFullscreen||document.webkitExitFullscreen).call(document)}function pe(T,y){return window.getComputedStyle(T,null)[y]}function Te(T){var y=10,M=40,b=800,c=0,v=0,P=0,U=0;return"detail"in T&&(v=T.detail),"wheelDelta"in T&&(v=-T.wheelDelta/120),"wheelDeltaY"in T&&(v=-T.wheelDeltaY/120),"wheelDeltaX"in T&&(c=-T.wheelDeltaX/120),"axis"in T&&T.axis===T.HORIZONTAL_AXIS&&(c=v,v=0),P=c*y,U=v*y,"deltaY"in T&&(U=T.deltaY),"deltaX"in T&&(P=T.deltaX),(P||U)&&T.deltaMode&&(T.deltaMode===1?(P*=M,U*=M):(P*=b,U*=b)),P&&!c&&(c=P<1?-1:1),U&&!v&&(v=U<1?-1:1),{spinX:c,spinY:v,pixelX:P,pixelY:U}}function xe(T,y,M){return n.MathUtils.clamp(T,y,M)}function Ge(T,y){var M=T%y;return M<0&&(M+=y),M}function ke(T){return n.MathUtils.isPowerOfTwo(T)}function Fe(T){return T.reduce(function(y,M){return y+M},0)}function lt(T,y){return Math.sqrt(Math.pow(T.x-y.x,2)+Math.pow(T.y-y.y,2))}function ct(T,y){var M=[0,Math.PI*2,-Math.PI*2];return M.reduce(function(b,c){var v=y-T+c;return Math.abs(v)<Math.abs(b)?v:b},1/0)}function F(T,y){return Math.acos(Math.cos(T.latitude)*Math.cos(y.latitude)*Math.cos(T.longitude-y.longitude)+Math.sin(T.latitude)*Math.sin(y.latitude))}function L(T,y){var M=T[0],b=T[1],c=y[0],v=y[1],P=(c-M)*Math.cos((b+v)/2),U=v-b;return Math.sqrt(P*P+U*U)}function K(T){return T.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g,function(y,M){return(M>0?"-":"")+y.toLowerCase()})}function he(T,y){var M,b,c,v,P=0,U=function(){P=Date.now(),v=void 0,c=T.apply(M,b),v||(M=b=null)};return function(){var Q=Date.now();P||(P=Q);var oe=y-(Q-P);return M=this,b=arguments,oe<=0||oe>y?(v&&(clearTimeout(v),v=void 0),P=Q,c=T.apply(M,b),v||(M=b=null)):v||(v=setTimeout(U,oe)),c}}function me(T){if(typeof T=="object"&&T!==null){if(typeof Object.getPrototypeOf=="function"){var y=Object.getPrototypeOf(T);return y===Object.prototype||y===null}return Object.prototype.toString.call(T)==="[object Object]"}return!1}function Me(T,y){var M=y;return function b(c,v){return Array.isArray(v)?(!c||!Array.isArray(c)?c=[]:c.length=0,v.forEach(function(P,U){c[U]=b(null,P)})):typeof v=="object"?((!c||Array.isArray(c))&&(c={}),Object.keys(v).forEach(function(P){typeof v[P]!="object"||!v[P]||!me(v[P])?c[P]=v[P]:v[P]!=M&&(c[P]?b(c[P],v[P]):c[P]=b(null,v[P]))})):c=v,c}(T,y)}function Be(T){return Me(null,T)}function be(T){return!T||Object.keys(T).length===0&&T.constructor===Object}function $(T,y){Object.keys(T).forEach(function(M){y(T[M],M)})}function Ie(T){return T==null}function De(){for(var T=arguments.length,y=new Array(T),M=0;M<T;M++)y[M]=arguments[M];for(var b=0,c=y;b<c.length;b++){var v=c[b];if(!Ie(v))return v}}function Re(T,y){if(T===y)return!0;if(Ue(T)&&Ue(y)){if(Object.keys(T).length!==Object.keys(y).length)return!1;for(var M=0,b=Object.keys(T);M<b.length;M++){var c=b[M];if(!Re(T[c],y[c]))return!1}return!0}else return!1}function Ue(T){return typeof T=="object"&&T!=null}function Pe(T,y){if(T)for(var M=0,b=[["_",T]].concat(Object.entries(T));M<b.length;M++){var c=b[M],v=c[1];if(v.prototype instanceof y)return v}return null}function Qe(){var T=new Error("Loading was aborted.");return T.name="AbortError",T}function ft(T){return(T==null?void 0:T.name)==="AbortError"}function ot(T){console.warn("PhotoSphereViewer: "+T)}function k(T){return[["x","y"],["longitude","latitude"]].some(function(y){var M=y[0],b=y[1];return T[M]!==void 0&&T[b]!==void 0})}function j(T,y){var M=T.match("<GPano:"+y+">(.*)</GPano:"+y+">");if(M!==null){var b=parseInt(M[1],10);return isNaN(b)?null:b}if(M=T.match("GPano:"+y+'="(.*?)"'),M!==null){var c=parseInt(M[1],10);return isNaN(c)?null:c}return null}var ue={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"};function we(T){if(!T)return{x:.5,y:.5};if(typeof T=="object")return T;var y=T.toLocaleLowerCase().split(" ").slice(0,2);y.length===1&&(ue[y[0]]!==void 0?y=[y[0],"center"]:y=[y[0],y[0]]);var M=y[1]!=="left"&&y[1]!=="right"&&y[0]!=="top"&&y[0]!=="bottom";y=y.map(function(c){return ue[c]||c}),M||y.reverse();var b=y.join(" ").match(/^([0-9.]+)% ([0-9.]+)%$/);return b?{x:parseFloat(b[1])/100,y:parseFloat(b[2])/100}:{x:.5,y:.5}}var Le=["left","center","right"],et=["top","center","bottom"],bt=[].concat(Le,et),ut="center";function bn(T,y){var M=y===void 0?{allowCenter:!0,cssOrder:!0}:y,b=M.allowCenter,c=M.cssOrder;return T?(typeof T=="string"&&(T=T.split(" ")),T.length===1&&(T[0]===ut?T=[ut,ut]:Le.indexOf(T[0])!==-1?T=[ut,T[0]]:et.indexOf(T[0])!==-1&&(T=[T[0],ut])),T.length!==2||bt.indexOf(T[0])===-1||bt.indexOf(T[1])===-1?(ot("Unparsable position "+T),null):!b&&T[0]===ut&&T[1]===ut?(ot("Invalid position center center"),null):(c&&!dt(T)&&(T=[T[1],T[0]]),T[1]===ut&&Le.indexOf(T[0])!==-1&&(T=[ut,T[0]]),T[0]===ut&&et.indexOf(T[1])!==-1&&(T=[T[1],ut]),T)):null}function dt(T){return et.indexOf(T[0])!==-1&&Le.indexOf(T[1])!==-1}function Kt(T){var y;if(typeof T=="string"){var M=T.toString().trim(),b=parseFloat(M.replace(/^(-?[0-9]+(?:\.[0-9]*)?).*$/,"$1")),c=M.replace(/^-?[0-9]+(?:\.[0-9]*)?(.*)$/,"$1").trim();switch(c.match(/(pm|per minute)$/)&&(b/=60),c){case"dpm":case"degrees per minute":case"dps":case"degrees per second":y=n.MathUtils.degToRad(b);break;case"rdpm":case"radians per minute":case"rdps":case"radians per second":y=b;break;case"rpm":case"revolutions per minute":case"rps":case"revolutions per second":y=b*Math.PI*2;break;default:throw new d('Unknown speed unit "'+c+'"')}}else y=T;return y}function vt(T,y,M){y===void 0&&(y=!1),M===void 0&&(M=y);var b;if(typeof T=="string"){var c=T.toLowerCase().trim().match(/^(-?[0-9]+(?:\.[0-9]*)?)(.*)$/);if(!c)throw new d('Unknown angle "'+T+'"');var v=parseFloat(c[1]),P=c[2];if(P)switch(P){case"deg":case"degs":b=n.MathUtils.degToRad(v);break;case"rad":case"rads":b=v;break;default:throw new d('Unknown angle unit "'+P+'"')}else b=v}else if(typeof T=="number"&&!isNaN(T))b=T;else throw new d('Unknown angle "'+T+'"');return b=Ge(y?b+Math.PI:b,Math.PI*2),y?n.MathUtils.clamp(b-Math.PI,-Math.PI/(M?2:1),Math.PI/(M?2:1)):b}function ji(T){var y=new n.Texture(T);return y.needsUpdate=!0,y.minFilter=n.LinearFilter,y.generateMipmaps=!1,y}var Fr=new n.Quaternion;function Fs(T,y){Fr.setFromEuler(y).invert(),T.applyQuaternion(Fr)}var mi=function(){function T(M){var b=this;this.__callbacks=[],M?((!M.easing||typeof M.easing=="string")&&(M.easing=le[M.easing||"linear"]),this.__start=null,this.options=M,M.delay?this.__delayTimeout=setTimeout(function(){b.__delayTimeout=null,b.__animationFrame=window.requestAnimationFrame(function(c){return b.__run(c)})},M.delay):this.__animationFrame=window.requestAnimationFrame(function(c){return b.__run(c)})):this.__resolved=!0}var y=T.prototype;return y.__run=function(b){var c=this;if(!this.__cancelled){this.__start===null&&(this.__start=b);var v=(b-this.__start)/this.options.duration,P={};v<1?($(this.options.properties,function(U,Q){U&&(P[Q]=U.start+(U.end-U.start)*c.options.easing(v))}),this.options.onTick(P,v),this.__animationFrame=window.requestAnimationFrame(function(U){return c.__run(U)})):($(this.options.properties,function(U,Q){U&&(P[Q]=U.end)}),this.options.onTick(P,1),this.__animationFrame=window.requestAnimationFrame(function(){c.__resolved=!0,c.__resolve(!0)}))}},y.__resolve=function(b){this.__callbacks.forEach(function(c){return c(b)}),this.__callbacks.length=0},y.then=function(b){var c=this;return this.__resolved||this.__cancelled?Promise.resolve(this.__resolved).then(b):new Promise(function(v){c.__callbacks.push(v)}).then(b)},y.cancel=function(){!this.__cancelled&&!this.__resolved&&(this.__cancelled=!0,this.__resolve(!1),this.__delayTimeout&&(window.clearTimeout(this.__delayTimeout),this.__delayTimeout=null),this.__animationFrame&&(window.cancelAnimationFrame(this.__animationFrame),this.__animationFrame=null))},T}(),D=function(){function T(M,b,c,v,P){if(b===void 0&&(b=0),c===void 0&&(c=-1/0),v===void 0&&(v=1/0),P===void 0&&(P=!1),this.fn=M,this.mode=T.STOP,this.speed=0,this.speedMult=1,this.currentSpeed=0,this.target=0,this.current=b,this.min=c,this.max=v,this.loopValue=P,P&&c!==0)throw new d("invalid config");this.fn&&this.fn(b)}var y=T.prototype;return y.setSpeed=function(b){this.speed=b},y.goto=function(b,c){c===void 0&&(c=1),this.mode=T.POSITION,this.target=this.loopValue?Ge(b,this.max):n.MathUtils.clamp(b,this.min,this.max),this.speedMult=c},y.step=function(b,c){c===void 0&&(c=1),this.mode!==T.POSITION&&(this.target=this.current),this.goto(this.target+b,c)},y.roll=function(b,c){b===void 0&&(b=!1),c===void 0&&(c=1),this.mode=T.INFINITE,this.target=b?-1/0:1/0,this.speedMult=c},y.stop=function(){this.mode=T.STOP},y.setValue=function(b){return this.target=this.loopValue?Ge(b,this.max):n.MathUtils.clamp(b,this.min,this.max),this.mode=T.STOP,this.target!==this.current?(this.current=this.target,this.fn&&this.fn(this.current),!0):!1},y.update=function(b){if(this.mode===T.POSITION){this.loopValue&&Math.abs(this.target-this.current)>this.max/2&&(this.current=this.current<this.target?this.current+this.max:this.current-this.max);var c=this.currentSpeed*this.currentSpeed/(this.speed*this.speedMult*4);Math.abs(this.target-this.current)<=c&&(this.mode=T.STOP)}var v=this.mode===T.STOP?0:this.speed*this.speedMult;this.target<this.current&&(v=-v),this.currentSpeed<v?this.currentSpeed=Math.min(v,this.currentSpeed+b/1e3*this.speed*this.speedMult*2):this.currentSpeed>v&&(this.currentSpeed=Math.max(v,this.currentSpeed-b/1e3*this.speed*this.speedMult*2));var P=null;return this.current>this.target&&this.currentSpeed?P=Math.max(this.target,this.current+this.currentSpeed*b/1e3):this.current<this.target&&this.currentSpeed&&(P=Math.min(this.target,this.current+this.currentSpeed*b/1e3)),P!==null&&(P=this.loopValue?Ge(P,this.max):n.MathUtils.clamp(P,this.min,this.max),P!==this.current)?(this.current=P,this.fn&&this.fn(this.current),!0):!1},T}();D.STOP=0,D.INFINITE=1,D.POSITION=2;var q=function(){function T(M,b){this.fn=b,this.dynamics=M,this.fn&&this.fn(this.current)}var y=T.prototype;return y.setSpeed=function(b){$(this.dynamics,function(c){c.setSpeed(b)})},y.goto=function(b,c){var v=this;c===void 0&&(c=1),$(b,function(P,U){v.dynamics[U].goto(P,c)})},y.step=function(b,c){var v=this;c===void 0&&(c=1),$(b,function(P,U){v.dynamics[U].step(P,c)})},y.roll=function(b,c){var v=this;c===void 0&&(c=1),$(b,function(P,U){v.dynamics[U].roll(P,c)})},y.stop=function(){$(this.dynamics,function(b){return b.stop()})},y.setValue=function(b){var c=this,v=!1;return $(b,function(P,U){v|=c.dynamics[U].setValue(P)}),v&&this.fn&&this.fn(this.current),v},y.update=function(b){var c=!1;return $(this.dynamics,function(v){c|=v.update(b)}),c&&this.fn&&this.fn(this.current),c},o(T,[{key:"current",get:function(){var b={};return $(this.dynamics,function(c,v){b[v]=c.current}),b}}]),T}(),ee=function(T){l(y,T);function y(b){var c,v=b.psv,P=b.container,U=b.direction,Q=b.onUpdate;return c=T.call(this)||this,c.psv=v,c.container=P,c.prop={onUpdate:Q,direction:U,mousedown:!1,mouseover:!1},c.container.addEventListener("click",u(c)),c.container.addEventListener("mousedown",u(c)),c.container.addEventListener("mouseenter",u(c)),c.container.addEventListener("mouseleave",u(c)),c.container.addEventListener("touchstart",u(c)),c.container.addEventListener("mousemove",u(c),!0),c.container.addEventListener("touchmove",u(c),!0),window.addEventListener("mouseup",u(c)),window.addEventListener("touchend",u(c)),c}var M=y.prototype;return M.destroy=function(){window.removeEventListener("mouseup",this),window.removeEventListener("touchend",this)},M.handleEvent=function(c){switch(c.type){case"click":c.stopPropagation();break;case"mousedown":this.__onMouseDown(c);break;case"mouseenter":this.__onMouseEnter(c);break;case"mouseleave":this.__onMouseLeave(c);break;case"touchstart":this.__onTouchStart(c);break;case"mousemove":this.__onMouseMove(c);break;case"touchmove":this.__onTouchMove(c);break;case"mouseup":this.__onMouseUp(c);break;case"touchend":this.__onTouchEnd(c);break}},M.__onMouseDown=function(c){this.prop.mousedown=!0,this.__update(c,!0)},M.__onMouseEnter=function(c){this.prop.mouseover=!0,this.__update(c,!0)},M.__onTouchStart=function(c){this.prop.mouseover=!0,this.prop.mousedown=!0,this.__update(c.changedTouches[0],!0)},M.__onMouseMove=function(c){(this.prop.mousedown||this.prop.mouseover)&&(c.stopPropagation(),this.__update(c,!0))},M.__onTouchMove=function(c){(this.prop.mousedown||this.prop.mouseover)&&(c.stopPropagation(),this.__update(c.changedTouches[0],!0))},M.__onMouseUp=function(c){this.prop.mousedown&&(this.prop.mousedown=!1,this.__update(c,!1))},M.__onMouseLeave=function(c){this.prop.mouseover&&(this.prop.mouseover=!1,this.__update(c,!0))},M.__onTouchEnd=function(c){this.prop.mousedown&&(this.prop.mouseover=!1,this.prop.mousedown=!1,this.__update(c.changedTouches[0],!1))},M.__update=function(c,v){var P=this.container.getBoundingClientRect(),U=c[this.vertical?"clientY":"clientX"],Q=P[this.vertical?"bottom":"left"],oe=P[this.vertical?"height":"width"],ge=Math.abs((Q-U)/oe);this.prop.onUpdate({value:ge,click:!v,mousedown:this.prop.mousedown,mouseover:this.prop.mouseover,cursor:c})},o(y,[{key:"vertical",get:function(){return this.prop.direction===y.VERTICAL}}]),y}(i.EventEmitter);ee.VERTICAL=1,ee.HORIZONTAL=2;var V=Object.freeze({__proto__:null,toggleClass:ze,addClasses:G,removeClasses:Ye,hasParent:Ne,getClosest:He,getPosition:ye,isFullscreenEnabled:Ze,requestFullscreen:re,exitFullscreen:ie,getStyle:pe,normalizeWheel:Te,bound:xe,loop:Ge,isPowerOfTwo:ke,sum:Fe,distance:lt,getShortestArc:ct,getAngle:F,greatArcDistance:L,dasherize:K,throttle:he,isPlainObject:me,deepmerge:Me,clone:Be,isEmpty:be,each:$,isNil:Ie,firstNonNull:De,deepEqual:Re,pluginInterop:Pe,getAbortError:Qe,isAbortError:ft,logWarn:ot,isExtendedPosition:k,getXMPValue:j,parsePosition:we,cleanPosition:bn,positionIsOrdered:dt,parseSpeed:Kt,parseAngle:vt,createTexture:ji,applyEulerInverse:Fs,Animation:mi,Dynamic:D,MultiDynamic:q,Slider:ee}),ne=function(T){l(y,T);function y(b,c){var v;if(v=T.call(this,b)||this,v.config=a({resolution:64},c),!n.MathUtils.isPowerOfTwo(v.config.resolution))throw new d("EquirectangularAdapter resolution must be power of two");return v.SPHERE_SEGMENTS=v.config.resolution,v.SPHERE_HORIZONTAL_SEGMENTS=v.SPHERE_SEGMENTS/2,v}var M=y.prototype;return M.supportsTransition=function(){return!0},M.supportsPreload=function(){return!0},M.loadTexture=function(c,v,P){var U=this;return P===void 0&&(P=this.psv.config.useXmpData),typeof c!="string"?((Array.isArray(c)||typeof c=="object"&&!!c.left)&&ot("Cubemap support now requires an additional adapter, see https://photo-sphere-viewer.js.org/guide/adapters"),Promise.reject(new d("Invalid panorama url, are you using the right adapter?"))):(P?this.__loadXMP(c,function(Q){return U.psv.loader.setProgress(Q)}).then(function(Q){return U.psv.textureLoader.loadImage(c).then(function(oe){return{img:oe,xmpPanoData:Q}})}):this.psv.textureLoader.loadImage(c,function(Q){return U.psv.loader.setProgress(Q)}).then(function(Q){return{img:Q,xmpPanoData:null}})).then(function(Q){var oe,ge,We,Ve,at,ln,Rt,Hs,es,wn=Q.img,Lt=Q.xmpPanoData;typeof v=="function"&&(v=v(wn));var Yn={fullWidth:De((oe=v)==null?void 0:oe.fullWidth,Lt==null?void 0:Lt.fullWidth,wn.width),fullHeight:De((ge=v)==null?void 0:ge.fullHeight,Lt==null?void 0:Lt.fullHeight,wn.height),croppedWidth:De((We=v)==null?void 0:We.croppedWidth,Lt==null?void 0:Lt.croppedWidth,wn.width),croppedHeight:De((Ve=v)==null?void 0:Ve.croppedHeight,Lt==null?void 0:Lt.croppedHeight,wn.height),croppedX:De((at=v)==null?void 0:at.croppedX,Lt==null?void 0:Lt.croppedX,0),croppedY:De((ln=v)==null?void 0:ln.croppedY,Lt==null?void 0:Lt.croppedY,0),poseHeading:De((Rt=v)==null?void 0:Rt.poseHeading,Lt==null?void 0:Lt.poseHeading,0),posePitch:De((Hs=v)==null?void 0:Hs.posePitch,Lt==null?void 0:Lt.posePitch,0),poseRoll:De((es=v)==null?void 0:es.poseRoll,Lt==null?void 0:Lt.poseRoll,0)};(Yn.croppedWidth!==wn.width||Yn.croppedHeight!==wn.height)&&ot(`Invalid panoData, croppedWidth and/or croppedHeight is not coherent with loaded image.
    panoData: `+Yn.croppedWidth+"x"+Yn.croppedHeight+", image: "+wn.width+"x"+wn.height),(v||Lt)&&Yn.fullWidth!==Yn.fullHeight*2&&ot("Invalid panoData, fullWidth should be twice fullHeight");var sf=U.__createEquirectangularTexture(wn,Yn);return{panorama:c,texture:sf,panoData:Yn}})},M.__loadXMP=function(c,v){var P=this;return this.psv.textureLoader.loadFile(c,v).then(function(U){return P.__loadBlobAsString(U)}).then(function(U){var Q=U.indexOf("<x:xmpmeta"),oe=U.indexOf("</x:xmpmeta>"),ge=U.substring(Q,oe);return Q!==-1&&oe!==-1&&ge.includes("GPano:")?{fullWidth:j(ge,"FullPanoWidthPixels"),fullHeight:j(ge,"FullPanoHeightPixels"),croppedWidth:j(ge,"CroppedAreaImageWidthPixels"),croppedHeight:j(ge,"CroppedAreaImageHeightPixels"),croppedX:j(ge,"CroppedAreaLeftPixels"),croppedY:j(ge,"CroppedAreaTopPixels"),poseHeading:j(ge,"PoseHeadingDegrees"),posePitch:j(ge,"PosePitchDegrees"),poseRoll:j(ge,"PoseRollDegrees")}:null})},M.__loadBlobAsString=function(c){return new Promise(function(v,P){var U=new FileReader;U.onload=function(){return v(U.result)},U.onerror=P,U.readAsText(c)})},M.__createEquirectangularTexture=function(c,v){if(v.fullWidth>X.maxTextureWidth||v.croppedWidth!==v.fullWidth||v.croppedHeight!==v.fullHeight){var P=X.getMaxCanvasWidth()/v.fullWidth,U=a({},v);P<1&&(U.fullWidth*=P,U.fullHeight*=P,U.croppedWidth*=P,U.croppedHeight*=P,U.croppedX*=P,U.croppedY*=P);var Q=document.createElement("canvas");Q.width=U.fullWidth,Q.height=U.fullHeight;var oe=Q.getContext("2d");return oe.drawImage(c,U.croppedX,U.croppedY,U.croppedWidth,U.croppedHeight),ji(Q)}return ji(c)},M.createMesh=function(c){c===void 0&&(c=1);var v=new n.SphereGeometry(w*c,this.SPHERE_SEGMENTS,this.SPHERE_HORIZONTAL_SEGMENTS,-Math.PI/2).scale(-1,1,1),P=f.createOverlayMaterial();return new n.Mesh(v,P)},M.setTexture=function(c,v){this.__setUniform(c,f.OVERLAY_UNIFORMS.panorama,v.texture),this.setOverlay(c,null)},M.setOverlay=function(c,v,P){this.__setUniform(c,f.OVERLAY_UNIFORMS.overlayOpacity,P),v?this.__setUniform(c,f.OVERLAY_UNIFORMS.overlay,v.texture):this.__setUniform(c,f.OVERLAY_UNIFORMS.overlay,new n.Texture)},M.setTextureOpacity=function(c,v){this.__setUniform(c,f.OVERLAY_UNIFORMS.globalOpacity,v),c.material.transparent=v<1},M.disposeTexture=function(c){var v;(v=c.texture)==null||v.dispose()},M.__setUniform=function(c,v,P){c.material.uniforms[v].value instanceof n.Texture&&c.material.uniforms[v].value.dispose(),c.material.uniforms[v].value=P},y}(f);ne.id="equirectangular",ne.supportsDownload=!0,ne.supportsOverlay=!0;var Ae=function(){function T(M,b){this.psv=M.psv||M,this.parent=M,this.parent.children.push(this),this.children=[],this.prop={visible:!0},this.container=document.createElement("div"),this.container.className=b,this.parent.container.appendChild(this.container)}var y=T.prototype;return y.destroy=function(){this.parent.container.removeChild(this.container);var b=this.parent.children.indexOf(this);b!==-1&&this.parent.children.splice(b,1),this.children.slice().forEach(function(c){return c.destroy()}),this.children.length=0,delete this.container,delete this.parent,delete this.psv,delete this.prop},y.refreshUi=function(){var b=this;this.children.every(function(c){return c.refreshUi(),b.psv.prop.uiRefresh===!0})},y.toggle=function(b){b===!1||b===void 0&&this.isVisible()?this.hide():(b===!0||b===void 0&&!this.isVisible())&&this.show()},y.hide=function(){this.container.style.display="none",this.prop.visible=!1},y.show=function(){this.container.style.display="",this.prop.visible=!0},y.isVisible=function(){return this.prop.visible},T}(),Oe=function(T){l(y,T);function y(b,c,v,P){var U;return c===void 0&&(c=""),v===void 0&&(v=!1),P===void 0&&(P=!0),U=T.call(this,b,"psv-button "+c)||this,U.prop=a({},U.prop,{id:U.constructor.id,collapsable:v,enabled:!0,supported:!0,collapsed:!1,active:!1,width:U.container.offsetWidth}),U.constructor.icon&&U.__setIcon(U.constructor.icon),U.prop.id&&U.psv.config.lang[U.prop.id]&&(U.container.title=U.psv.config.lang[U.prop.id]),P&&(U.container.tabIndex=0),U.container.addEventListener("click",function(Q){U.prop.enabled&&U.onClick(),Q.stopPropagation()}),U.container.addEventListener("keydown",function(Q){Q.key===Y.Enter&&U.prop.enabled&&(U.onClick(),Q.stopPropagation())}),U}var M=y.prototype;return M.checkSupported=function(){var c=this,v=this.isSupported();me(v)?(v.initial===!1&&(this.hide(),this.prop.supported=!1),v.promise.then(function(P){!c.prop||(c.prop.supported=P,c.toggle(P))})):(this.prop.supported=v,v||this.hide())},M.isSupported=function(){return!0},M.toggleActive=function(c){this.prop.active=c!==void 0?c:!this.prop.active,ze(this.container,"psv-button--active",this.prop.active),this.constructor.iconActive&&this.__setIcon(this.prop.active?this.constructor.iconActive:this.constructor.icon)},M.show=function(c){c===void 0&&(c=!0),this.isVisible()||(this.prop.visible=!0,this.prop.collapsed||(this.container.style.display=""),c&&this.psv.refreshUi("show button "+this.prop.id))},M.hide=function(c){c===void 0&&(c=!0),this.isVisible()&&(this.prop.visible=!1,this.container.style.display="none",c&&this.psv.refreshUi("hide button "+this.prop.id))},M.disable=function(){this.container.classList.add("psv-button--disabled"),this.prop.enabled=!1},M.enable=function(){this.container.classList.remove("psv-button--disabled"),this.prop.enabled=!0},M.collapse=function(){this.prop.collapsed=!0,this.container.style.display="none"},M.uncollapse=function(){this.prop.collapsed=!1,this.prop.visible&&(this.container.style.display="")},M.__setIcon=function(c,v){v===void 0&&(v=this.container),c?(v.innerHTML=c,v.querySelector("svg").classList.add("psv-button-svg")):v.innerHTML=""},M.onClick=function(){throw new d('onClick not implemented for button "'+this.prop.id+'".')},y}(Ae);Oe.id=null,Oe.groupId=null,Oe.icon=null,Oe.iconActive=null;var Je=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.898-1-.102 0-.202-.1-.202-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.399 2.7.899.1 0 .2.101.2.199C6.3 34.4 12.9 39 20.5 39c7.602 0 14.102-4.6 16.9-11.1 0-.102.1-.102.199-.2 1.699-.601 2.699-1 2.801-1l.6-.3V14.3l-.5-.2zM6.701 11.5C9.7 7 14.8 4 20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.799-1-8.799-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5zM25.1 20.3L18.7 24c-.3.2-.7 0-.7-.5v-7.4c0-.4.4-.6.7-.4l6.399 3.8c.301.1.301.6.001.8zm9.4 8.901A16.421 16.421 0 0 1 20.5 37c-5.9 0-11.1-3.1-14-7.898-.2-.302.1-.602.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.602-2 .298-.1.5.198.398.499z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,qe=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.899-1-.101 0-.2-.1-.2-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.4 2.7.9.1 0 .2.1.2.199C6.3 34.4 12.9 39 20.5 39c7.601 0 14.101-4.6 16.9-11.1 0-.101.1-.101.2-.2 1.699-.6 2.699-1 2.8-1l.6-.3V14.3l-.5-.2zM20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.8-1-8.8-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5C9.7 7 14.8 4 20.5 4zm0 33c-5.9 0-11.1-3.1-14-7.899-.2-.301.1-.601.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.601-2 .3-.1.5.2.399.5A16.422 16.422 0 0 1 20.5 37zm18.601-12.1c0 .1-.101.3-.2.3-2.5.9-10.4 3.6-18.4 3.6-7.1 0-15.6-2.699-18.3-3.6C2.1 25.2 2 25 2 24.9V16c0-.1.1-.3.2-.3 2.6-.9 10.6-3.6 18.2-3.6 7.5 0 15.899 2.7 18.5 3.6.1 0 .2.2.2.3v8.9z"/><path fill="currentColor" d="M18.7 24l6.4-3.7c.3-.2.3-.7 0-.8l-6.4-3.8c-.3-.2-.7 0-.7.4v7.4c0 .5.4.7.7.5z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,tt=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-button--hover-scale psv-autorotate-button",!0)||this,c.psv.on(E.AUTOROTATE,u(c)),c}var M=y.prototype;return M.destroy=function(){this.psv.off(E.AUTOROTATE,this),T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case E.AUTOROTATE:this.toggleActive(c.args[0]);break}},M.onClick=function(){this.psv.isAutorotateEnabled()&&(this.psv.config.autorotateIdle=!1,this.psv.resetIdleTimer()),this.psv.toggleAutorotate()},y}(Oe);tt.id="autorotate",tt.icon=qe,tt.iconActive=Je;var je=function(T){l(y,T);function y(b,c){var v;return v=T.call(this,b,"psv-custom-button",c.collapsable!==!1,c.tabbable!==!1)||this,v.config=c,v.config.id?v.prop.id=v.config.id:v.prop.id="psvButton-"+Math.random().toString(36).substr(2,9),v.config.className&&G(v.container,v.config.className),v.config.title&&(v.container.title=v.config.title),v.config.content&&(v.container.innerHTML=v.config.content),v.prop.width=v.container.offsetWidth,v.config.enabled===!1&&v.disable(),v.config.visible===!1&&v.hide(),v}var M=y.prototype;return M.destroy=function(){delete this.config,T.prototype.destroy.call(this)},M.onClick=function(){this.config.onClick&&this.config.onClick.call(this.psv,this.psv)},y}(Oe),nt=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><path fill="currentColor" d="M28.3 26.1c-1 2.6-1.9 4.8-2.6 7-2.5 7.4-5 14.7-7.2 22-1.3 4.4.5 7.2 4.3 7.8 1.3.2 2.8.2 4.2-.1 8.2-2 11.9-8.6 15.7-15.2l-2.2 2a18.8 18.8 0 0 1-7.4 5.2 2 2 0 0 1-1.6-.2c-.2-.1 0-1 0-1.4l.8-1.8L41.9 28c.5-1.4.9-3 .7-4.4-.2-2.6-3-4.4-6.3-4.4-8.8.2-15 4.5-19.5 11.8-.2.3-.2.6-.3 1.3 3.7-2.8 6.8-6.1 11.8-6.2z"/><circle fill="currentColor" cx="39.3" cy="9.2" r="8.2"/><!--Created by Arafat Uddin from the Noun Project--></svg>
`,pt=1,an=2,$t=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-button--hover-scale psv-description-button")||this,c.prop=a({},c.prop,{mode:null}),c.psv.on(E.HIDE_NOTIFICATION,u(c)),c.psv.on(E.SHOW_NOTIFICATION,u(c)),c.psv.on(E.CLOSE_PANEL,u(c)),c.psv.on(E.OPEN_PANEL,u(c)),c}var M=y.prototype;return M.destroy=function(){this.psv.off(E.HIDE_NOTIFICATION,this),this.psv.off(E.SHOW_NOTIFICATION,this),this.psv.off(E.CLOSE_PANEL,this),this.psv.off(E.OPEN_PANEL,this),T.prototype.destroy.call(this)},M.handleEvent=function(c){if(!!this.prop.mode){var v=!1;switch(c.type){case E.HIDE_NOTIFICATION:v=this.prop.mode===pt;break;case E.SHOW_NOTIFICATION:v=this.prop.mode===pt&&c.args[0]!==J.DESCRIPTION;break;case E.CLOSE_PANEL:v=this.prop.mode===an;break;case E.OPEN_PANEL:v=this.prop.mode===an&&c.args[0]!==J.DESCRIPTION;break}v&&(this.toggleActive(!1),this.prop.mode=null)}},M.hide=function(c){T.prototype.hide.call(this,c),this.prop.mode&&this.__close()},M.refreshUi=function(c){if(c===void 0&&(c=!1),c){var v=this.psv.navbar.getButton("caption",!1),P=v&&!v.isVisible(),U=!!this.psv.config.description;P||U?this.show(!1):this.hide(!1)}},M.onClick=function(){this.prop.mode?this.__close():this.__open()},M.__close=function(){switch(this.prop.mode){case pt:this.psv.notification.hide(J.DESCRIPTION);break;case an:this.psv.panel.hide(J.DESCRIPTION);break}},M.__open=function(){this.toggleActive(!0),this.psv.config.description?(this.prop.mode=an,this.psv.panel.show({id:J.DESCRIPTION,content:(this.psv.config.caption?"<p>"+this.psv.config.caption+"</p>":"")+this.psv.config.description})):(this.prop.mode=pt,this.psv.notification.show({id:J.DESCRIPTION,content:this.psv.config.caption}))},y}(Oe);$t.id="description",$t.icon=nt;var Xn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M83.3 35.6h-17V3H32.2v32.6H16.6l33.6 32.7 33-32.7z"/><path fill="currentColor" d="M83.3 64.2v16.3H16.6V64.2H-.1v32.6H100V64.2H83.3z"/><!--Created by Michael Zenaty from the Noun Project--></svg>
`,Yt=function(T){l(y,T);function y(b){return T.call(this,b,"psv-button--hover-scale psv-download-button",!0)||this}var M=y.prototype;return M.onClick=function(){var c=this,v=document.createElement("a");v.href=this.psv.config.downloadUrl||this.psv.config.panorama,v.download=v.href.split("/").pop(),this.psv.container.appendChild(v),v.click(),setTimeout(function(){c.psv.container.removeChild(v)},100)},M.refreshUi=function(){var c=this.psv.adapter.constructor.supportsDownload||this.psv.config.downloadUrl;c&&!this.prop.visible?this.show():!c&&this.prop.visible&&this.hide()},y}(Oe);Yt.id="download",Yt.icon=Xn;var st=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M100 40H87.1V18.8h-21V6H100zM100 93.2H66V80.3h21.1v-21H100zM34 93.2H0v-34h12.9v21.1h21zM12.9 40H0V6h34v12.9H12.8z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,qn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M66 7h13v21h21v13H66zM66 60.3h34v12.9H79v21H66zM0 60.3h34v34H21V73.1H0zM21 7h13v34H0V28h21z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,_t=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-button--hover-scale psv-fullscreen-button")||this,c.psv.on(E.FULLSCREEN_UPDATED,u(c)),c}var M=y.prototype;return M.destroy=function(){this.psv.off(E.FULLSCREEN_UPDATED,this),T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case E.FULLSCREEN_UPDATED:this.toggleActive(c.args[0]);break}},M.onClick=function(){this.psv.toggleFullscreen()},y}(Oe);_t.id="fullscreen",_t.icon=st,_t.iconActive=qn;var Vt=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 10 80 80"><g fill="currentColor"><circle r="10" cx="20" cy="20"/><circle r="10" cx="50" cy="20"/><circle r="10" cx="80" cy="20"/><circle r="10" cx="20" cy="50"/><circle r="10" cx="50" cy="50"/><circle r="10" cx="80" cy="50"/><circle r="10" cx="20" cy="80"/><circle r="10" cx="50" cy="80"/><circle r="10" cx="80" cy="80"/></g><!-- Created by Richard Kun\xE1k from the Noun Project--></svg>
`,zt=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-button--hover-scale psv-menu-button")||this,c.psv.on(E.OPEN_PANEL,u(c)),c.psv.on(E.CLOSE_PANEL,u(c)),T.prototype.hide.call(u(c)),c}var M=y.prototype;return M.destroy=function(){this.psv.off(E.OPEN_PANEL,this),this.psv.off(E.CLOSE_PANEL,this),T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case E.OPEN_PANEL:this.toggleActive(c.args[0]===J.MENU);break;case E.CLOSE_PANEL:this.toggleActive(!1);break}},M.hide=function(c){T.prototype.hide.call(this,c),this.__hideMenu()},M.show=function(c){T.prototype.show.call(this,c),this.prop.active&&this.__showMenu()},M.onClick=function(){this.prop.active?this.__hideMenu():this.__showMenu()},M.__showMenu=function(){var c=this;this.psv.panel.show({id:J.MENU,content:y.MENU_TEMPLATE(this.parent.collapsed,this.psv,K(y.BUTTON_DATA)),noMargin:!0,clickHandler:function(P){var U=P.target?He(P.target,"li"):void 0,Q=U?U.dataset[y.BUTTON_DATA]:void 0;Q&&(c.parent.getButton(Q).onClick(),c.__hideMenu())}})},M.__hideMenu=function(){this.psv.panel.hide(J.MENU)},y}(Oe);zt.id="menu",zt.icon=Vt,zt.BUTTON_DATA="psvButton",zt.MENU_TEMPLATE=function(T,y,M){return`
<div class="psv-panel-menu psv-panel-menu--stripped">
  <h1 class="psv-panel-menu-title">`+Vt+" "+y.config.lang.menu+`</h1>
  <ul class="psv-panel-menu-list">
    `+T.map(function(b){return`
    <li data-`+M+'="'+b.prop.id+`" class="psv-panel-menu-item" tabindex="0">
      <span class="psv-panel-menu-item-icon">`+b.container.innerHTML+`</span>
      <span class="psv-panel-menu-item-label">`+b.container.title+`</span>
    </li>
    `}).join("")+`
  </ul>
</div>
`};var gi=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="40 40 432 432"><g transform="rotate(0, 256, 256)"><path fill="currentColor" d="M425.23 210.55H227.39a5 5 0 01-3.53-8.53l56.56-56.57a45.5 45.5 0 000-64.28 45.15 45.15 0 00-32.13-13.3 45.15 45.15 0 00-32.14 13.3L41.32 256l174.83 174.83a45.15 45.15 0 0032.14 13.3 45.15 45.15 0 0032.13-13.3 45.5 45.5 0 000-64.28l-56.57-56.57a5 5 0 013.54-8.53h197.84c25.06 0 45.45-20.39 45.45-45.45s-20.4-45.45-45.45-45.45z"/></g><!-- Created by Flatart from the Noun Project --></svg>
`,_i=function(){function T(M){M===void 0&&(M=200),this.delay=M,this.time=0,this.timeout=null}var y=T.prototype;return y.down=function(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.time=new Date().getTime()},y.up=function(b){var c=this;if(!!this.time){var v=new Date().getTime()-this.time;v<this.delay?this.timeout=setTimeout(function(){b(),c.timeout=null,c.time=0},this.delay):(b(),this.time=0)}},T}();function Tt(T){var y=0;switch(T){case"up":y=90;break;case"right":y=180;break;case"down":y=-90;break;default:y=0;break}return gi.replace("rotate(0","rotate("+y)}var jt=function(T){l(y,T);function y(b,c){var v;return v=T.call(this,b,"psv-button--hover-scale psv-move-button")||this,v.container.title=v.psv.config.lang.move,v.prop=a({},v.prop,{value:c,handler:new _i}),v.container.addEventListener("mousedown",u(v)),v.container.addEventListener("keydown",u(v)),v.container.addEventListener("keyup",u(v)),v.psv.container.addEventListener("mouseup",u(v)),v.psv.container.addEventListener("touchend",u(v)),v}var M=y.prototype;return M.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":c.key===Y.Enter&&this.__onMouseDown();break;case"keyup":c.key===Y.Enter&&this.__onMouseUp();break}},M.isSupported=function(){return{initial:!X.isTouchEnabled.initial,promise:X.isTouchEnabled.promise.then(function(c){return!c})}},M.onClick=function(){},M.__onMouseDown=function(){!this.prop.enabled||(this.psv.__stopAll(),this.psv.dynamics.position.roll(this.prop.value),this.prop.handler.down())},M.__onMouseUp=function(){var c=this;!this.prop.enabled||this.prop.handler.up(function(){c.psv.dynamics.position.stop(),c.psv.resetIdleTimer()})},y}(Oe);jt.groupId="move";var vi=function(T){l(y,T);function y(M){return T.call(this,M,{latitude:!0})||this}return y}(jt);vi.id="moveDown",vi.icon=Tt("down");var Ft=function(T){l(y,T);function y(M){return T.call(this,M,{longitude:!0})||this}return y}(jt);Ft.id="moveLeft",Ft.icon=Tt("left");var xi=function(T){l(y,T);function y(M){return T.call(this,M,{longitude:!1})||this}return y}(jt);xi.id="moveRight",xi.icon=Tt("right");var Us=function(T){l(y,T);function y(M){return T.call(this,M,{latitude:!1})||this}return y}(jt);Us.id="moveUp",Us.icon=Tt("up");var Qi=function(T){l(y,T);function y(b,c){var v;return v=T.call(this,b,"psv-button--hover-scale psv-zoom-button")||this,v.prop=a({},v.prop,{value:c,handler:new _i}),v.container.addEventListener("mousedown",u(v)),v.container.addEventListener("keydown",u(v)),v.container.addEventListener("keyup",u(v)),v.psv.container.addEventListener("mouseup",u(v)),v.psv.container.addEventListener("touchend",u(v)),v}var M=y.prototype;return M.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":c.key===Y.Enter&&this.__onMouseDown();break;case"keyup":c.key===Y.Enter&&this.__onMouseUp();break}},M.isSupported=function(){return{initial:!X.isTouchEnabled.initial,promise:X.isTouchEnabled.promise.then(function(c){return!c})}},M.onClick=function(){},M.__onMouseDown=function(){!this.prop.enabled||(this.psv.dynamics.zoom.roll(this.prop.value),this.prop.handler.down())},M.__onMouseUp=function(){var c=this;!this.prop.enabled||this.prop.handler.up(function(){return c.psv.dynamics.zoom.stop()})},y}(Oe);Qi.groupId="zoom";var Bd=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M8.728 4.009H6.744v2.737H4.006V8.73h2.738v2.736h1.984V8.73h2.737V6.746H8.728z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,sa=function(T){l(y,T);function y(M){return T.call(this,M,!1)||this}return y}(Qi);sa.id="zoomIn",sa.icon=Bd;var zd=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M4.006 6.746h7.459V8.73H4.006z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,ra=function(T){l(y,T);function y(M){return T.call(this,M,!0)||this}return y}(Qi);ra.id="zoomOut",ra.icon=zd;var oa=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-zoom-range",!1,!1)||this,c.prop=a({},c.prop,{mediaMinWidth:0}),c.zoomRange=document.createElement("div"),c.zoomRange.className="psv-zoom-range-line",c.container.appendChild(c.zoomRange),c.zoomValue=document.createElement("div"),c.zoomValue.className="psv-zoom-range-handle",c.zoomRange.appendChild(c.zoomValue),c.slider=new ee({container:c.container,direction:ee.HORIZONTAL,onUpdate:function(P){return c.__onSliderUpdate(P)}}),c.prop.mediaMinWidth=parseInt(pe(c.container,"maxWidth"),10),c.psv.on(E.ZOOM_UPDATED,u(c)),c.psv.prop.ready?c.__moveZoomValue(c.psv.getZoomLevel()):c.psv.once(E.READY,u(c)),c.refreshUi(),c}var M=y.prototype;return M.destroy=function(){this.slider.destroy(),delete this.zoomRange,delete this.zoomValue,this.psv.off(E.ZOOM_UPDATED,this),this.psv.off(E.READY,this),T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case E.ZOOM_UPDATED:this.__moveZoomValue(c.args[0]);break;case E.READY:this.__moveZoomValue(this.psv.getZoomLevel());break}},M.isSupported=function(){return{initial:!X.isTouchEnabled.initial,promise:X.isTouchEnabled.promise.then(function(c){return!c})}},M.refreshUi=function(){this.prop.supported&&(this.psv.prop.size.width<=this.prop.mediaMinWidth&&this.prop.visible?this.hide():this.psv.prop.size.width>this.prop.mediaMinWidth&&!this.prop.visible&&this.show())},M.onClick=function(){},M.__moveZoomValue=function(c){this.zoomValue.style.left=c/100*this.zoomRange.offsetWidth-this.zoomValue.offsetWidth/2+"px"},M.__onSliderUpdate=function(c){c.mousedown&&this.psv.zoom(c.value*100)},y}(Oe);oa.id="zoomRange",oa.groupId="zoom";var Bs=function(T){l(y,T);function y(b){var c;return c=T.call(this)||this,c.psv=b,c}var M=y.prototype;return M.init=function(){},M.destroy=function(){delete this.psv},y}(i.EventEmitter);Bs.id=null;var pn,mn={panorama:null,overlay:null,overlayOpacity:1,container:null,adapter:null,plugins:[],caption:null,description:null,downloadUrl:null,loadingImg:null,loadingTxt:"Loading...",size:null,fisheye:!1,minFov:30,maxFov:90,defaultZoomLvl:50,defaultLong:0,defaultLat:0,sphereCorrection:null,moveSpeed:1,zoomSpeed:1,autorotateDelay:null,autorotateIdle:!1,autorotateSpeed:"2rpm",autorotateLat:null,autorotateZoomLvl:null,moveInertia:!0,mousewheel:!0,mousemove:!0,mousewheelCtrlKey:!1,touchmoveTwoFingers:!1,useXmpData:!0,panoData:null,requestHeaders:null,canvasBackground:"#000",withCredentials:!1,navbar:["autorotate","zoom","move","download","description","caption","fullscreen"],lang:{autorotate:"Automatic rotation",zoom:"Zoom",zoomOut:"Zoom out",zoomIn:"Zoom in",move:"Move",download:"Download",fullscreen:"Fullscreen",menu:"Menu",twoFingers:"Use two fingers to navigate",ctrlZoom:"Use ctrl + scroll to zoom the image",loadError:"The panorama can't be loaded"},keyboard:(pn={},pn[Y.ArrowUp]=B.ROTATE_LAT_UP,pn[Y.ArrowDown]=B.ROTATE_LAT_DOWN,pn[Y.ArrowRight]=B.ROTATE_LONG_RIGHT,pn[Y.ArrowLeft]=B.ROTATE_LONG_LEFT,pn[Y.PageUp]=B.ZOOM_IN,pn[Y.PageDown]=B.ZOOM_OUT,pn[Y.Plus]=B.ZOOM_IN,pn[Y.Minus]=B.ZOOM_OUT,pn[Y.Space]=B.TOGGLE_AUTOROTATE,pn)},lc={panorama:"Use setPanorama method to change the panorama",panoData:"Use setPanorama method to change the panorama",container:"Cannot change viewer container",adapter:"Cannot change adapter",plugins:"Cannot change plugins"},Ur={captureCursor:"captureCursor is deprecated"},Br={container:function(y){if(!y)throw new d("No value given for container.");return y},adapter:function(y){if(y?Array.isArray(y)?y=[Pe(y[0],f),y[1]]:y=[Pe(y,f)]:y=[ne],!y[0])throw new d("Un undefined value with given for adapter.");return y},overlayOpacity:function(y){return n.MathUtils.clamp(y,0,1)},defaultLong:function(y){return vt(y)},defaultLat:function(y){return vt(y,!0)},defaultZoomLvl:function(y){return n.MathUtils.clamp(y,0,100)},minFov:function(y,M){return M.maxFov<y&&(ot("maxFov cannot be lower than minFov"),y=M.maxFov),n.MathUtils.clamp(y,1,179)},maxFov:function(y,M){return y<M.minFov&&(y=M.minFov),n.MathUtils.clamp(y,1,179)},lang:function(y){return Array.isArray(y.twoFingers)&&(ot("lang.twoFingers must not be an array"),y.twoFingers=y.twoFingers[0]),a({},mn.lang,y)},keyboard:function(y){return y===!0?Be(mn.keyboard):y},autorotateLat:function(y,M){return vt(y===null?M.defaultLat:y,!0)},autorotateZoomLvl:function(y){return Ie(y)?null:n.MathUtils.clamp(y,0,100)},autorotateSpeed:function(y){return Kt(y)},autorotateIdle:function(y,M){return y&&Ie(M.autorotateDelay)?(ot("autorotateIdle requires a non null autorotateDelay"),!1):y},fisheye:function(y){return y===!0?1:y===!1?0:y},plugins:function(y){return y.map(function(M){if(Array.isArray(M)?M=[Pe(M[0],Bs),M[1]]:M=[Pe(M,Bs)],!M[0])throw new d("Un undefined value was given for plugins.");return M})}};function kd(T){var y=Be(mn);Me(y,T);var M={};return $(y,function(b,c){if(Ur[c]){ot(Ur[c]);return}if(!Object.prototype.hasOwnProperty.call(mn,c))throw new d("Unknown option "+c);Br[c]?M[c]=Br[c](b,y):M[c]=b}),M}var yi=function(T){l(y,T);function y(b,c){var v;return v=T.call(this,b,"psv-caption")||this,v.prop=a({},v.prop,{id:v.constructor.id,collapsable:!1,width:0,contentWidth:0}),v.content=document.createElement("div"),v.content.className="psv-caption-content",v.container.appendChild(v.content),v.setCaption(c),v}var M=y.prototype;return M.destroy=function(){delete this.content,T.prototype.destroy.call(this)},M.setCaption=function(c){this.show(),this.content.innerHTML=c,this.prop.contentWidth=c?this.content.offsetWidth:0,this.refreshUi()},M.refreshUi=function(){this.toggle(this.container.offsetWidth>=this.prop.contentWidth),this.__refreshButton()},M.hide=function(){this.content.style.display="none",this.prop.visible=!1},M.show=function(){this.content.style.display="",this.prop.visible=!0},M.__refreshButton=function(){var c;(c=this.psv.navbar.getButton($t.id,!1))==null||c.refreshUi(!0)},y}(Ae);yi.id="caption";var aa={},zs={};function cc(T,y){if(!T.id)throw new d("Button ID is required");if(aa[T.id]=T,T.groupId&&(zs[T.groupId]=zs[T.groupId]||[],zs[T.groupId].push(T)),typeof y=="string")switch(y){case"start":mn.navbar.unshift(T.id);break;case"end":mn.navbar.push(T.id);break;default:var M=y.split(":"),b=M[0],c=M[1];mn.navbar.splice(mn.navbar.indexOf(b)+(c==="right"?1:0),0,T.id)}}[tt,ra,oa,sa,$t,Yt,_t,Ft,xi,Us,vi].forEach(cc);var Hd=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-navbar psv--capture-event")||this,c.children=[],c.collapsed=[],c}var M=y.prototype;return M.setButtons=function(c){var v=this;this.children.slice().forEach(function(U){return U.destroy()}),this.children.length=0;var P=this.__cleanButtons(c);P.indexOf(yi.id)!==-1&&P.indexOf($t.id)===-1&&P.splice(P.indexOf(yi.id),0,$t.id),P.forEach(function(U){if(typeof U=="object")new je(v,U);else if(aa[U])new aa[U](v);else if(zs[U])zs[U].forEach(function(Q){return new Q(v)});else if(U===yi.id)new yi(v,v.psv.config.caption);else throw new d("Unknown button "+U)}),new zt(this),this.children.forEach(function(U){typeof U.checkSupported=="function"&&U.checkSupported()})},M.setCaption=function(c){var v=this.getButton(yi.id,!1);v==null||v.setCaption(c)},M.getButton=function(c,v){v===void 0&&(v=!0);var P=null;return this.children.some(function(U){return U.prop.id===c?(P=U,!0):!1}),!P&&v&&ot('button "'+c+'" not found in the navbar'),P},M.show=function(){this.container.classList.add("psv-navbar--open"),this.prop.visible=!0},M.hide=function(){this.container.classList.remove("psv-navbar--open"),this.prop.visible=!1},M.refreshUi=function(){if(T.prototype.refreshUi.call(this),this.psv.prop.uiRefresh===!0){var c=this.container.offsetWidth,v=0,P=[],U=[];if(this.children.forEach(function(oe){oe.prop.visible&&(v+=oe.prop.width,P.push(oe),oe.prop.collapsable&&U.push(oe))}),!P.length)return;c<v&&U.length>0?(U.forEach(function(oe){return oe.collapse()}),this.collapsed=U,this.getButton(zt.id).show(!1)):c>=v&&this.collapsed.length>0&&(this.collapsed.forEach(function(oe){return oe.uncollapse()}),this.collapsed=[],this.getButton(zt.id).hide(!1));var Q=this.getButton(yi.id,!1);Q&&Q.refreshUi()}},M.__cleanButtons=function(c){return c===!0?Be(mn.navbar):typeof c=="string"?c.split(/[ ,]/):c||[]},y}(Ae),Gd=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-loader-container")||this,c.loader=document.createElement("div"),c.loader.className="psv-loader",c.container.appendChild(c.loader),c.canvas=document.createElement("canvas"),c.canvas.className="psv-loader-canvas",c.canvas.width=c.loader.clientWidth*X.pixelRatio,c.canvas.height=c.loader.clientWidth*X.pixelRatio,c.loader.appendChild(c.canvas),c.prop=a({},c.prop,{tickness:(c.loader.offsetWidth-c.loader.clientWidth)/2*X.pixelRatio,current:null}),c.refreshUi(),c.hide(),c}var M=y.prototype;return M.destroy=function(){delete this.loader,delete this.canvas,T.prototype.destroy.call(this)},M.refreshUi=function(){if(this.prop.current!==(this.psv.config.loadingImg||this.psv.config.loadingTxt)){this.prop.current&&this.loader.removeChild(this.loader.lastChild);var c;if(this.psv.config.loadingImg?(c=document.createElement("img"),c.className="psv-loader-image",c.src=this.psv.config.loadingImg):this.psv.config.loadingTxt&&(c=document.createElement("div"),c.className="psv-loader-text",c.innerHTML=this.psv.config.loadingTxt),c){var v=Math.round(Math.sqrt(2*Math.pow((this.canvas.width/2-this.prop.tickness/2)/X.pixelRatio,2)));c.style.maxWidth=v+"px",c.style.maxHeight=v+"px",this.loader.appendChild(c)}this.prop.current=this.psv.config.loadingImg||this.psv.config.loadingTxt}},M.setProgress=function(c){var v=this.canvas.getContext("2d");v.clearRect(0,0,this.canvas.width,this.canvas.height),v.lineWidth=this.prop.tickness,v.strokeStyle=pe(this.loader,"color"),v.beginPath(),v.arc(this.canvas.width/2,this.canvas.height/2,this.canvas.width/2-this.prop.tickness/2,-Math.PI/2,n.MathUtils.clamp(c,0,100)/100*2*Math.PI-Math.PI/2),v.stroke(),this.psv.trigger(E.LOAD_PROGRESS,Math.round(c))},y}(Ae),Vd=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-notification")||this,c.prop=a({},c.prop,{visible:!1,contentId:void 0,timeout:null}),c.content=document.createElement("div"),c.content.className="psv-notification-content",c.container.appendChild(c.content),c.content.addEventListener("click",function(){return c.hide()}),c}var M=y.prototype;return M.destroy=function(){delete this.content,T.prototype.destroy.call(this)},M.isVisible=function(c){return this.prop.visible&&(!c||!this.prop.contentId||this.prop.contentId===c)},M.toggle=function(){throw new d("Notification cannot be toggled")},M.show=function(c){var v=this;this.prop.timeout&&(clearTimeout(this.prop.timeout),this.prop.timeout=null),typeof c=="string"&&(c={content:c}),this.prop.contentId=c.id,this.content.innerHTML=c.content,this.container.classList.add("psv-notification--visible"),this.prop.visible=!0,this.psv.trigger(E.SHOW_NOTIFICATION,c.id),c.timeout&&(this.prop.timeout=setTimeout(function(){return v.hide(c.id)},c.timeout))},M.hide=function(c){if(this.isVisible(c)){var v=this.prop.contentId;this.container.classList.remove("psv-notification--visible"),this.prop.visible=!1,this.prop.contentId=void 0,this.psv.trigger(E.HIDE_NOTIFICATION,v)}},y}(Ae),Wd=function(T){l(y,T);function y(b){var c;return c=T.call(this,b,"psv-overlay")||this,c.prop=a({},c.prop,{contentId:void 0,dissmisable:!0}),c.image=document.createElement("div"),c.image.className="psv-overlay-image",c.container.appendChild(c.image),c.text=document.createElement("div"),c.text.className="psv-overlay-text",c.container.appendChild(c.text),c.subtext=document.createElement("div"),c.subtext.className="psv-overlay-subtext",c.container.appendChild(c.subtext),c.psv.on(E.CLICK,u(c)),c.psv.on(E.KEY_PRESS,u(c)),T.prototype.hide.call(u(c)),c}var M=y.prototype;return M.destroy=function(){this.psv.off(E.CLICK,this),this.psv.off(E.KEY_PRESS,this),delete this.image,delete this.text,delete this.subtext,T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case E.CLICK:this.isVisible()&&this.prop.dissmisable&&(this.hide(),c.stopPropagation());break;case E.KEY_PRESS:this.isVisible()&&this.prop.dissmisable&&c.args[0]===Y.Escape&&(this.hide(),c.preventDefault());break}},M.isVisible=function(c){return this.prop.visible&&(!c||!this.prop.contentId||this.prop.contentId===c)},M.toggle=function(){throw new d("Overlay cannot be toggled")},M.show=function(c){typeof c=="string"&&(c={text:c}),this.prop.contentId=c.id,this.prop.dissmisable=c.dissmisable!==!1,this.image.innerHTML=c.image||"",this.text.innerHTML=c.text||"",this.subtext.innerHTML=c.subtext||"",T.prototype.show.call(this),this.psv.trigger(E.SHOW_OVERLAY,c.id)},M.hide=function(c){if(this.isVisible(c)){var v=this.prop.contentId;T.prototype.hide.call(this),this.prop.contentId=void 0,this.psv.trigger(E.HIDE_OVERLAY,v)}},y}(Ae),Xd=200,qd=function(T){l(y,T);function y(b){var c;c=T.call(this,b,"psv-panel psv--capture-event")||this,c.prop=a({},c.prop,{visible:!1,contentId:void 0,mouseX:0,mouseY:0,mousedown:!1,clickHandler:null,keyHandler:null,width:{}});var v=document.createElement("div");v.className="psv-panel-resizer",c.container.appendChild(v);var P=document.createElement("div");return P.className="psv-panel-close-button",c.container.appendChild(P),c.content=document.createElement("div"),c.content.className="psv-panel-content",c.container.appendChild(c.content),c.container.addEventListener(X.mouseWheelEvent,function(U){return U.stopPropagation()}),P.addEventListener("click",function(){return c.hide()}),v.addEventListener("mousedown",u(c)),v.addEventListener("touchstart",u(c)),c.psv.container.addEventListener("mouseup",u(c)),c.psv.container.addEventListener("touchend",u(c)),c.psv.container.addEventListener("mousemove",u(c)),c.psv.container.addEventListener("touchmove",u(c)),c.psv.on(E.KEY_PRESS,u(c)),c}var M=y.prototype;return M.destroy=function(){this.psv.off(E.KEY_PRESS,this),this.psv.container.removeEventListener("mousemove",this),this.psv.container.removeEventListener("touchmove",this),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),delete this.prop,delete this.content,T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case"mousedown":this.__onMouseDown(c);break;case"touchstart":this.__onTouchStart(c);break;case"mousemove":this.__onMouseMove(c);break;case"touchmove":this.__onTouchMove(c);break;case"mouseup":this.__onMouseUp(c);break;case"touchend":this.__onMouseUp(c);break;case E.KEY_PRESS:this.isVisible()&&c.args[0]===Y.Escape&&(this.hide(),c.preventDefault());break}},M.isVisible=function(c){return this.prop.visible&&(!c||!this.prop.contentId||this.prop.contentId===c)},M.toggle=function(){throw new d("Panel cannot be toggled")},M.show=function(c){var v=this,P=this.isVisible(c.id);typeof c=="string"&&(c={content:c}),this.prop.contentId=c.id,this.prop.visible=!0,this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.content.removeEventListener("keydown",this.prop.keyHandler),this.prop.clickHandler=null,this.prop.keyHandler=null),c.id&&this.prop.width[c.id]?this.container.style.width=this.prop.width[c.id]:c.width?this.container.style.width=c.width:this.container.style.width=null,this.content.innerHTML=c.content,this.content.scrollTop=0,this.container.classList.add("psv-panel--open"),ze(this.content,"psv-panel-content--no-margin",c.noMargin===!0),c.clickHandler&&(this.prop.clickHandler=c.clickHandler,this.prop.keyHandler=function(U){U.key===Y.Enter&&c.clickHandler(U)},this.content.addEventListener("click",this.prop.clickHandler),this.content.addEventListener("keydown",this.prop.keyHandler),P||setTimeout(function(){var U;(U=v.content.querySelector("a,button,[tabindex]"))==null||U.focus()},300)),this.psv.trigger(E.OPEN_PANEL,c.id)},M.hide=function(c){if(this.isVisible(c)){var v=this.prop.contentId;this.prop.visible=!1,this.prop.contentId=void 0,this.content.innerHTML=null,this.container.classList.remove("psv-panel--open"),this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.prop.clickHandler=null),this.psv.trigger(E.CLOSE_PANEL,v)}},M.__onMouseDown=function(c){c.stopPropagation(),this.__startResize(c)},M.__onTouchStart=function(c){c.stopPropagation(),this.__startResize(c.changedTouches[0])},M.__onMouseUp=function(c){this.prop.mousedown&&(c.stopPropagation(),this.prop.mousedown=!1,this.content.classList.remove("psv-panel-content--no-interaction"))},M.__onMouseMove=function(c){this.prop.mousedown&&(c.stopPropagation(),this.__resize(c))},M.__onTouchMove=function(c){this.prop.mousedown&&this.__resize(c.touches[0])},M.__startResize=function(c){this.prop.mouseX=c.clientX,this.prop.mouseY=c.clientY,this.prop.mousedown=!0,this.content.classList.add("psv-panel-content--no-interaction")},M.__resize=function(c){var v=c.clientX,P=c.clientY,U=Math.max(Xd,this.container.offsetWidth-(v-this.prop.mouseX))+"px";this.prop.contentId&&(this.prop.width[this.prop.contentId]=U),this.container.style.width=U,this.prop.mouseX=v,this.prop.mouseY=P},y}(Ae),Yd=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="15 15 70 70"><path fill="currentColor" d="M50,16.2c-18.6,0-33.8,15.1-33.8,33.8S31.4,83.7,50,83.7S83.8,68.6,83.8,50S68.6,16.2,50,16.2z M50,80.2c-16.7,0-30.2-13.6-30.2-30.2S33.3,19.7,50,19.7S80.3,33.3,80.3,50S66.7,80.2,50,80.2z"/><rect fill="currentColor" x="48" y="31.7" width="4" height="28"/><rect fill="currentColor" x="48" y="63.2" width="4" height="5"/><!--Created by Shastry from the Noun Project--></svg>
`,ks=function(){function T(M){this.psv=M,this.config=M.config,this.prop=M.prop}var y=T.prototype;return y.destroy=function(){delete this.psv,delete this.config,delete this.prop},T}(),la=new n.Vector2,Rn=new n.Vector3,zr=new n.Euler(0,0,0,"ZXY"),Zd=function(T){l(y,T);function y(b){return T.call(this,b)||this}var M=y.prototype;return M.fovToZoomLevel=function(c){var v=Math.round((c-this.config.minFov)/(this.config.maxFov-this.config.minFov)*100);return v-2*(v-50)},M.zoomLevelToFov=function(c){return this.config.maxFov+c/100*(this.config.minFov-this.config.maxFov)},M.vFovToHFov=function(c){return n.MathUtils.radToDeg(2*Math.atan(Math.tan(n.MathUtils.degToRad(c)/2)*this.prop.aspect))},M.speedToDuration=function(c,v){if(!c||typeof c!="number"){var P=c?Kt(c):this.config.autorotateSpeed;return v/Math.abs(P)*1e3}else return Math.abs(c)},M.textureCoordsToSphericalCoords=function(c){var v=this.prop.panoData;if(!v)throw new d("Current adapter does not support texture coordinates.");var P=(c.x+v.croppedX)/v.fullWidth*Math.PI*2,U=(c.y+v.croppedY)/v.fullHeight*Math.PI,Q={longitude:P>=Math.PI?P-Math.PI:P+Math.PI,latitude:Math.PI/2-U};return!zr.equals(this.psv.renderer.mesh.rotation)||!zr.equals(this.psv.renderer.meshContainer.rotation)?(this.sphericalCoordsToVector3(Q,Rn),Rn.applyEuler(this.psv.renderer.mesh.rotation),Rn.applyEuler(this.psv.renderer.meshContainer.rotation),this.vector3ToSphericalCoords(Rn)):Q},M.sphericalCoordsToTextureCoords=function(c){var v=this.prop.panoData;if(!v)throw new d("Current adapter does not support texture coordinates.");(!zr.equals(this.psv.renderer.mesh.rotation)||!zr.equals(this.psv.renderer.meshContainer.rotation))&&(this.sphericalCoordsToVector3(c,Rn),Fs(Rn,this.psv.renderer.meshContainer.rotation),Fs(Rn,this.psv.renderer.mesh.rotation),c=this.vector3ToSphericalCoords(Rn));var P=c.longitude/Math.PI/2*v.fullWidth,U=c.latitude/Math.PI*v.fullHeight;return{x:Math.round(c.longitude<Math.PI?P+v.fullWidth/2:P-v.fullWidth/2)-v.croppedX,y:Math.round(v.fullHeight/2-U)-v.croppedY}},M.sphericalCoordsToVector3=function(c,v){return v||(v=new n.Vector3),v.x=w*-Math.cos(c.latitude)*Math.sin(c.longitude),v.y=w*Math.sin(c.latitude),v.z=w*Math.cos(c.latitude)*Math.cos(c.longitude),v},M.vector3ToSphericalCoords=function(c){var v=Math.acos(c.y/Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)),P=Math.atan2(c.x,c.z);return{longitude:P<0?-P:Math.PI*2-P,latitude:Math.PI/2-v}},M.viewerCoordsToVector3=function(c){var v=this.getIntersections(c).filter(function(P){return P.object.userData[I]});return v.length?v[0].point:null},M.vector3ToViewerCoords=function(c){var v=c.clone();return v.project(this.psv.renderer.camera),{x:Math.round((v.x+1)/2*this.prop.size.width),y:Math.round((1-v.y)/2*this.prop.size.height)}},M.sphericalCoordsToViewerCoords=function(c){return this.vector3ToViewerCoords(this.sphericalCoordsToVector3(c,Rn))},M.getIntersections=function(c){return la.x=2*c.x/this.prop.size.width-1,la.y=-2*c.y/this.prop.size.height+1,this.psv.renderer.raycaster.setFromCamera(la,this.psv.renderer.camera),this.psv.renderer.raycaster.intersectObjects(this.psv.renderer.scene.children,!0).filter(function(v){return!!v.object.userData})},M.cleanPosition=function(c){return c.x!==void 0&&c.y!==void 0?this.textureCoordsToSphericalCoords(c):{longitude:vt(c.longitude),latitude:vt(c.latitude,!this.prop.littlePlanet)}},M.cleanSphereCorrection=function(c){return{pan:vt((c==null?void 0:c.pan)||0),tilt:vt((c==null?void 0:c.tilt)||0,!0),roll:vt((c==null?void 0:c.roll)||0,!0,!1)}},M.cleanPanoramaPose=function(c){return{pan:n.MathUtils.degToRad((c==null?void 0:c.poseHeading)||0),tilt:n.MathUtils.degToRad((c==null?void 0:c.posePitch)||0),roll:n.MathUtils.degToRad((c==null?void 0:c.poseRoll)||0)}},y}(ks),Jd=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M33.38 33.2a1.96 1.96 0 0 0 1.5-3.23 10.61 10.61 0 0 1 7.18-17.51c.7-.06 1.31-.49 1.61-1.12a13.02 13.02 0 0 1 11.74-7.43c7.14 0 12.96 5.8 12.96 12.9 0 3.07-1.1 6.05-3.1 8.38-.7.82-.61 2.05.21 2.76.83.7 2.07.6 2.78-.22a16.77 16.77 0 0 0 4.04-10.91C72.3 7.54 64.72 0 55.4 0a16.98 16.98 0 0 0-14.79 8.7 14.6 14.6 0 0 0-12.23 14.36c0 3.46 1.25 6.82 3.5 9.45.4.45.94.69 1.5.69m45.74 43.55a22.13 22.13 0 0 1-5.23 12.4c-4 4.55-9.53 6.86-16.42 6.86-12.6 0-20.1-10.8-20.17-10.91a1.82 1.82 0 0 0-.08-.1c-5.3-6.83-14.55-23.82-17.27-28.87-.05-.1 0-.21.02-.23a6.3 6.3 0 0 1 8.24 1.85l9.38 12.59a1.97 1.97 0 0 0 3.54-1.17V25.34a4 4 0 0 1 1.19-2.87 3.32 3.32 0 0 1 2.4-.95c1.88.05 3.4 1.82 3.4 3.94v24.32a1.96 1.96 0 0 0 3.93 0v-33.1a3.5 3.5 0 0 1 7 0v35.39a1.96 1.96 0 0 0 3.93 0v-.44c.05-2.05 1.6-3.7 3.49-3.7 1.93 0 3.5 1.7 3.5 3.82v5.63c0 .24.04.48.13.71l.1.26a1.97 1.97 0 0 0 3.76-.37c.33-1.78 1.77-3.07 3.43-3.07 1.9 0 3.45 1.67 3.5 3.74l-1.77 18.1zM77.39 51c-1.25 0-2.45.32-3.5.9v-.15c0-4.27-3.33-7.74-7.42-7.74-1.26 0-2.45.33-3.5.9V16.69a7.42 7.42 0 0 0-14.85 0v1.86a7 7 0 0 0-3.28-.94 7.21 7.21 0 0 0-5.26 2.07 7.92 7.92 0 0 0-2.38 5.67v37.9l-5.83-7.82a10.2 10.2 0 0 0-13.35-2.92 4.1 4.1 0 0 0-1.53 5.48C20 64.52 28.74 80.45 34.07 87.34c.72 1.04 9.02 12.59 23.4 12.59 7.96 0 14.66-2.84 19.38-8.2a26.06 26.06 0 0 0 6.18-14.6l1.78-18.2v-.2c0-4.26-3.32-7.73-7.42-7.73z"/><!--Created by AomAm from the Noun Project--></svg>
`,Kd=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 17 79 79"><path fill="currentColor" d="M38.1 29.27c-.24 0-.44.2-.44.45v10.7a.45.45 0 00.9 0v-10.7c0-.25-.2-.45-.45-.45zm10.2 26.66a11.54 11.54 0 01-8.48-6.14.45.45 0 10-.8.41 12.45 12.45 0 009.22 6.62.45.45 0 00.07-.9zm24.55-13.08a23.04 23.04 0 00-22.56-23v7.07l-.01.05a2.83 2.83 0 012.39 2.78v14.03l.09-.02h8.84v-9.22a.45.45 0 11.9 0v9.22h10.35v-.9zm0 27.33V44.66H62.5c-.02 2.01-.52 4-1.47 5.76a.45.45 0 01-.61.18.45.45 0 01-.19-.61 11.54 11.54 0 001.36-5.33h-8.83l-.1-.01a2.83 2.83 0 01-2.83 2.84h-.04-.04a2.83 2.83 0 01-2.83-2.83v-14.9a2.82 2.82 0 012.47-2.8v-7.11a23.04 23.04 0 00-22.57 23v.91h14.72V29.88a8.2 8.2 0 015.02-7.57c.22-.1.5.01.59.24.1.23-.01.5-.24.6a7.3 7.3 0 00-4.47 6.73v13.88h3.9a.45.45 0 110 .9h-3.9v.15a7.32 7.32 0 0011.23 6.17.45.45 0 01.49.76 8.22 8.22 0 01-12.62-6.93v-.15H26.82v25.52a23.04 23.04 0 0023.01 23.01 23.04 23.04 0 0023.02-23.01zm1.8-27.33v27.33A24.85 24.85 0 0149.84 95a24.85 24.85 0 01-24.82-24.82V42.85a24.85 24.85 0 0124.82-24.82 24.85 24.85 0 0124.83 24.82zM57.98 29.88v9.36a.45.45 0 11-.9 0v-9.36a7.28 7.28 0 00-3.4-6.17.45.45 0 01.49-.76 8.18 8.18 0 013.8 6.93z"/><!-- Created by Icon Island from the Noun Project --></svg>
`,hc=0,Ln=1,$d=2,jd=function(T){l(y,T);function y(b){var c;return c=T.call(this,b)||this,c.state={moveThreshold:_*X.pixelRatio,keyboardEnabled:!1,step:hc,mousedown:!1,startMouseX:0,startMouseY:0,mouseX:0,mouseY:0,mouseHistory:[],pinchDist:0,keyHandler:new _i,ctrlKeyDown:!1,dblclickData:null,dblclickTimeout:null,longtouchTimeout:null,twofingersTimeout:null,ctrlZoomTimeout:null},c.__onResize=he(function(){return c.psv.autoSize()},50),c}var M=y.prototype;return M.init=function(){window.addEventListener("resize",this),window.addEventListener("keydown",this,{passive:!1}),window.addEventListener("keyup",this),this.psv.container.addEventListener("mousedown",this),window.addEventListener("mousemove",this,{passive:!1}),window.addEventListener("mouseup",this),this.psv.container.addEventListener("touchstart",this,{passive:!1}),window.addEventListener("touchmove",this,{passive:!1}),window.addEventListener("touchend",this,{passive:!1}),this.psv.container.addEventListener(X.mouseWheelEvent,this,{passive:!1}),X.fullscreenEvent&&document.addEventListener(X.fullscreenEvent,this)},M.destroy=function(){window.removeEventListener("resize",this),window.removeEventListener("keydown",this),window.removeEventListener("keyup",this),this.psv.container.removeEventListener("mousedown",this),window.removeEventListener("mousemove",this),window.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchstart",this),window.removeEventListener("touchmove",this),window.removeEventListener("touchend",this),this.psv.container.removeEventListener(X.mouseWheelEvent,this),X.fullscreenEvent&&document.removeEventListener(X.fullscreenEvent,this),clearTimeout(this.state.dblclickTimeout),clearTimeout(this.state.longtouchTimeout),clearTimeout(this.state.twofingersTimeout),clearTimeout(this.state.ctrlZoomTimeout),delete this.state,T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case"resize":this.__onResize();break;case"keydown":this.__onKeyDown(c);break;case"keyup":this.__onKeyUp();break;case"mousemove":this.__onMouseMove(c);break;case"mouseup":this.__onMouseUp(c);break;case"touchmove":this.__onTouchMove(c);break;case"touchend":this.__onTouchEnd(c);break;case X.fullscreenEvent:this.__fullscreenToggled();break}if(!He(c.target,".psv--capture-event"))switch(c.type){case"mousedown":this.__onMouseDown(c);break;case"touchstart":this.__onTouchStart(c);break;case X.mouseWheelEvent:this.__onMouseWheel(c);break}},M.enableKeyboard=function(){this.state.keyboardEnabled=!0},M.disableKeyboard=function(){this.state.keyboardEnabled=!1},M.__onKeyDown=function(c){this.config.mousewheelCtrlKey&&(this.state.ctrlKeyDown=c.key===Y.Control,this.state.ctrlKeyDown&&(clearTimeout(this.state.ctrlZoomTimeout),this.psv.overlay.hide(J.CTRL_ZOOM)));var v=this.psv.trigger(E.KEY_PRESS,c.key);if(!v.isDefaultPrevented()&&!!this.state.keyboardEnabled){var P=this.config.keyboard[c.key];if(P===B.TOGGLE_AUTOROTATE)this.psv.toggleAutorotate(),c.preventDefault();else if(P&&!this.state.keyHandler.time){switch(P!==B.ZOOM_IN&&P!==B.ZOOM_OUT&&this.psv.__stopAll(),P){case B.ROTATE_LAT_UP:this.psv.dynamics.position.roll({latitude:!1});break;case B.ROTATE_LAT_DOWN:this.psv.dynamics.position.roll({latitude:!0});break;case B.ROTATE_LONG_RIGHT:this.psv.dynamics.position.roll({longitude:!1});break;case B.ROTATE_LONG_LEFT:this.psv.dynamics.position.roll({longitude:!0});break;case B.ZOOM_IN:this.psv.dynamics.zoom.roll(!1);break;case B.ZOOM_OUT:this.psv.dynamics.zoom.roll(!0);break}this.state.keyHandler.down(),c.preventDefault()}}},M.__onKeyUp=function(){var c=this;this.state.ctrlKeyDown=!1,this.state.keyboardEnabled&&this.state.keyHandler.up(function(){c.psv.dynamics.position.stop(),c.psv.dynamics.zoom.stop(),c.psv.resetIdleTimer()})},M.__onMouseDown=function(c){this.state.mousedown=!0,this.state.startMouseX=c.clientX,this.state.startMouseY=c.clientY},M.__onMouseUp=function(c){(this.state.mousedown||this.state.step===Ln)&&this.__stopMove(c.clientX,c.clientY,c.target,c.button===2)},M.__onMouseMove=function(c){if(this.config.mousemove&&(this.state.mousedown||this.state.step===Ln)&&(c.preventDefault(),this.__move(c.clientX,c.clientY)),!be(this.prop.objectsObservers)&&Ne(c.target,this.psv.container)){var v=ye(this.psv.container),P={x:c.clientX-v.left,y:c.clientY-v.top},U=this.psv.dataHelper.getIntersections(P),Q=function(ge,We,Ve){ge.listener.handleEvent(new CustomEvent(Ve,{detail:{originalEvent:c,object:ge.object,data:ge.object.userData[We],viewerPoint:P}}))};$(this.prop.objectsObservers,function(oe,ge){var We=U.find(function(Ve){return Ve.object.userData[ge]});We?(oe.object&&We.object!==oe.object&&(Q(oe,ge,z.LEAVE_OBJECT),delete oe.object),oe.object?Q(oe,ge,z.HOVER_OBJECT):(oe.object=We.object,Q(oe,ge,z.ENTER_OBJECT))):oe.object&&(Q(oe,ge,z.LEAVE_OBJECT),delete oe.object)})}},M.__onTouchStart=function(c){var v=this;c.touches.length===1?(this.state.mousedown=!0,this.state.startMouseX=c.touches[0].clientX,this.state.startMouseY=c.touches[0].clientY,this.prop.longtouchTimeout||(this.prop.longtouchTimeout=setTimeout(function(){var P=c.touches[0];v.__stopMove(P.clientX,P.clientY,P.target,!0),v.prop.longtouchTimeout=null},m))):c.touches.length===2&&(this.state.mousedown=!1,this.__cancelLongTouch(),this.config.mousemove&&(this.__cancelTwoFingersOverlay(),this.__startMoveZoom(c),c.preventDefault()))},M.__onTouchEnd=function(c){if(this.__cancelLongTouch(),this.state.mousedown||this.state.step===Ln){if(c.preventDefault(),this.__cancelTwoFingersOverlay(),c.touches.length===1)this.__stopMove(this.state.mouseX,this.state.mouseY);else if(c.touches.length===0){var v=c.changedTouches[0];this.__stopMove(v.clientX,v.clientY,v.target)}}},M.__onTouchMove=function(c){var v=this;if(this.__cancelLongTouch(),!!this.config.mousemove)if(c.touches.length===1){if(this.config.touchmoveTwoFingers)this.state.mousedown&&!this.prop.twofingersTimeout&&(this.prop.twofingersTimeout=setTimeout(function(){v.psv.overlay.show({id:J.TWO_FINGERS,image:Jd,text:v.config.lang.twoFingers})},x));else if(this.state.mousedown||this.state.step===Ln){c.preventDefault();var P=c.touches[0];this.__move(P.clientX,P.clientY)}}else this.__moveZoom(c),this.__cancelTwoFingersOverlay()},M.__cancelLongTouch=function(){this.prop.longtouchTimeout&&(clearTimeout(this.prop.longtouchTimeout),this.prop.longtouchTimeout=null)},M.__cancelTwoFingersOverlay=function(){this.config.touchmoveTwoFingers&&(this.prop.twofingersTimeout&&(clearTimeout(this.prop.twofingersTimeout),this.prop.twofingersTimeout=null),this.psv.overlay.hide(J.TWO_FINGERS))},M.__onMouseWheel=function(c){var v=this;if(!!this.config.mousewheel){if(this.config.mousewheelCtrlKey&&!this.state.ctrlKeyDown){this.psv.overlay.show({id:J.CTRL_ZOOM,image:Kd,text:this.config.lang.ctrlZoom}),clearTimeout(this.state.ctrlZoomTimeout),this.state.ctrlZoomTimeout=setTimeout(function(){return v.psv.overlay.hide(J.CTRL_ZOOM)},C);return}c.preventDefault(),c.stopPropagation();var P=Te(c).spinY*5*this.config.zoomSpeed;P!==0&&this.psv.dynamics.zoom.step(-P,5)}},M.__fullscreenToggled=function(c){this.prop.fullscreen=c!==void 0?c:Ze(this.psv.container),this.config.keyboard&&(this.prop.fullscreen?this.psv.startKeyboardControl():this.psv.stopKeyboardControl()),this.psv.trigger(E.FULLSCREEN_UPDATED,this.prop.fullscreen)},M.__resetMove=function(){this.state.step=hc,this.state.mousedown=!1,this.state.mouseX=0,this.state.mouseY=0,this.state.startMouseX=0,this.state.startMouseY=0,this.state.mouseHistory.length=0},M.__startMoveZoom=function(c){this.psv.__stopAll(),this.__resetMove();var v={x:c.touches[0].clientX,y:c.touches[0].clientY},P={x:c.touches[1].clientX,y:c.touches[1].clientY};this.state.step=Ln,this.state.pinchDist=lt(v,P),this.state.mouseX=(v.x+P.x)/2,this.state.mouseY=(v.y+P.y)/2,this.__logMouseMove(this.state.mouseX,this.state.mouseY)},M.__stopMove=function(c,v,P,U){P===void 0&&(P=null),U===void 0&&(U=!1),this.state.step===Ln?this.config.moveInertia?(this.__logMouseMove(c,v),this.__stopMoveInertia(c,v)):(this.__resetMove(),this.psv.resetIdleTimer()):this.state.mousedown&&(this.psv.stopAnimation(),this.__click(c,v,P,U),this.__resetMove(),this.psv.resetIdleTimer())},M.__stopMoveInertia=function(c,v){var P=this,U=new n.SplineCurve(this.state.mouseHistory.map(function(Ve){var at=Ve[1],ln=Ve[2];return new n.Vector2(at,ln)})),Q=U.getTangent(1),oe=this.state.mouseHistory.slice(1).reduce(function(Ve,at){var ln=Ve.total,Rt=Ve.prev;return{total:ln+lt({x:Rt[1],y:Rt[2]},{x:at[1],y:at[2]})/(at[0]-Rt[0]),prev:at}},{total:0,prev:this.state.mouseHistory[0]}).total/this.state.mouseHistory.length;if(!oe){this.__resetMove(),this.psv.resetIdleTimer();return}this.state.step=$d;var ge=c,We=v;this.prop.animationPromise=new mi({properties:{speed:{start:oe,end:0}},duration:1e3,easing:"outQuad",onTick:function(at){ge+=at.speed*Q.x*3*X.pixelRatio,We+=at.speed*Q.y*3*X.pixelRatio,P.__applyMove(ge,We)}}),this.prop.animationPromise.then(function(Ve){P.prop.animationPromise=null,Ve&&(P.__resetMove(),P.psv.resetIdleTimer())})},M.__click=function(c,v,P,U){var Q=this;U===void 0&&(U=!1);var oe=this.psv.container.getBoundingClientRect(),ge={rightclick:U,target:P,clientX:c,clientY:v,viewerX:c-oe.left,viewerY:v-oe.top},We=this.psv.dataHelper.getIntersections({x:ge.viewerX,y:ge.viewerY}),Ve=We.find(function(Rt){return Rt.object.userData[I]});if(Ve){var at=this.psv.dataHelper.vector3ToSphericalCoords(Ve.point);ge.longitude=at.longitude,ge.latitude=at.latitude,ge.objects=We.map(function(Rt){return Rt.object}).filter(function(Rt){return!Rt.userData[I]});try{var ln=this.psv.dataHelper.sphericalCoordsToTextureCoords(ge);ge.textureX=ln.x,ge.textureY=ln.y}catch{ge.textureX=NaN,ge.textureY=NaN}this.state.dblclickTimeout?(Math.abs(this.state.dblclickData.clientX-ge.clientX)<this.state.moveThreshold&&Math.abs(this.state.dblclickData.clientY-ge.clientY)<this.state.moveThreshold&&this.psv.trigger(E.DOUBLE_CLICK,this.state.dblclickData),clearTimeout(this.state.dblclickTimeout),this.state.dblclickTimeout=null,this.state.dblclickData=null):(this.psv.trigger(E.CLICK,ge),this.state.dblclickData=Be(ge),this.state.dblclickTimeout=setTimeout(function(){Q.state.dblclickTimeout=null,Q.state.dblclickData=null},g))}},M.__move=function(c,v){this.state.mousedown&&(Math.abs(c-this.state.startMouseX)>=this.state.moveThreshold||Math.abs(v-this.state.startMouseY)>=this.state.moveThreshold)?(this.psv.__stopAll(),this.__resetMove(),this.state.step=Ln,this.state.mouseX=c,this.state.mouseY=v,this.__logMouseMove(c,v)):this.state.step===Ln&&(this.__applyMove(c,v),this.__logMouseMove(c,v))},M.__applyMove=function(c,v){var P={longitude:(c-this.state.mouseX)/this.prop.size.width*this.config.moveSpeed*n.MathUtils.degToRad(this.prop.littlePlanet?90:this.prop.hFov),latitude:(v-this.state.mouseY)/this.prop.size.height*this.config.moveSpeed*n.MathUtils.degToRad(this.prop.littlePlanet?90:this.prop.vFov)},U=this.psv.getPosition();this.psv.rotate({longitude:U.longitude-P.longitude,latitude:U.latitude+P.latitude}),this.state.mouseX=c,this.state.mouseY=v},M.__moveZoom=function(c){if(this.state.step===Ln){c.preventDefault();var v={x:c.touches[0].clientX,y:c.touches[0].clientY},P={x:c.touches[1].clientX,y:c.touches[1].clientY},U=lt(v,P),Q=(U-this.state.pinchDist)/X.pixelRatio*this.config.zoomSpeed;this.psv.zoom(this.psv.getZoomLevel()+Q),this.__move((v.x+P.x)/2,(v.y+P.y)/2),this.state.pinchDist=U}},M.__logMouseMove=function(c,v){var P=Date.now(),U=this.state.mouseHistory.length?this.state.mouseHistory[this.state.mouseHistory.length-1]:[0,-1,-1];U[1]===c&&U[2]===v?U[0]=P:P===U[0]?(U[1]=c,U[2]=v):this.state.mouseHistory.push([P,c,v]);for(var Q=null,oe=0;oe<this.state.mouseHistory.length;)this.state.mouseHistory[oe][0]<P-S?this.state.mouseHistory.splice(oe,1):Q&&this.state.mouseHistory[oe][0]-Q>S/10?(this.state.mouseHistory.splice(0,oe),oe=0,Q=this.state.mouseHistory[oe][0]):(Q=this.state.mouseHistory[oe][0],oe++)},y}(ks),Qd=function(T){l(y,T);function y(b){var c,v;return v=T.call(this,b)||this,v.renderer=new n.WebGLRenderer({alpha:!0,antialias:!0}),v.renderer.setPixelRatio(X.pixelRatio),v.renderer.domElement.className="psv-canvas",v.scene=new n.Scene,v.camera=new n.PerspectiveCamera(50,16/9,.1,2*w),v.mesh=v.psv.adapter.createMesh(),v.mesh.userData=(c={},c[I]=!0,c),v.meshContainer=new n.Group,v.meshContainer.add(v.mesh),v.scene.add(v.meshContainer),v.raycaster=new n.Raycaster,v.timestamp=null,v.ready=!1,v.canvasContainer=document.createElement("div"),v.canvasContainer.className="psv-canvas-container",v.canvasContainer.style.background=v.psv.config.canvasBackground,v.canvasContainer.style.cursor=v.psv.config.mousemove?"move":"default",v.canvasContainer.appendChild(v.renderer.domElement),v.psv.container.appendChild(v.canvasContainer),b.on(E.SIZE_UPDATED,u(v)),b.on(E.ZOOM_UPDATED,u(v)),b.on(E.POSITION_UPDATED,u(v)),b.on(E.CONFIG_CHANGED,u(v)),v.hide(),v}var M=y.prototype;return M.destroy=function(){this.renderer.setAnimationLoop(null),this.__cleanTHREEScene(this.scene),this.psv.container.removeChild(this.canvasContainer),delete this.canvasContainer,delete this.renderer,delete this.scene,delete this.camera,delete this.mesh,delete this.meshContainer,delete this.raycaster,T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case E.SIZE_UPDATED:this.__onSizeUpdated();break;case E.ZOOM_UPDATED:this.__onZoomUpdated();break;case E.POSITION_UPDATED:this.__onPositionUpdated();break;case E.CONFIG_CHANGED:c.args[0].includes("fisheye")&&this.__onPositionUpdated(),c.args[0].includes("mousemove")&&(this.canvasContainer.style.cursor=this.psv.config.mousemove?"move":"default");break}},M.hide=function(){this.canvasContainer.style.opacity=0},M.show=function(){this.canvasContainer.style.opacity=1},M.__onSizeUpdated=function(){this.renderer.setSize(this.prop.size.width,this.prop.size.height),this.camera.aspect=this.prop.aspect,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},M.__onZoomUpdated=function(){this.camera.fov=this.prop.vFov,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},M.__onPositionUpdated=function(){this.camera.position.set(0,0,0),this.camera.lookAt(this.prop.direction),this.config.fisheye&&this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye/2).negate(),this.prop.needsUpdate=!0},M.__renderLoop=function(c){var v=this.timestamp!==null?c-this.timestamp:0;this.timestamp=c,this.psv.trigger(E.BEFORE_RENDER,c,v),$(this.psv.dynamics,function(P){return P.update(v)}),this.prop.idleTime>0&&c-this.prop.idleTime>this.config.autorotateDelay&&this.psv.startAutorotate(),this.prop.needsUpdate&&(this.render(),this.prop.needsUpdate=!1)},M.render=function(){this.renderer.render(this.scene,this.camera),this.psv.trigger(E.RENDER)},M.setTexture=function(c){var v=this;this.prop.panoData=c.panoData,this.psv.adapter.setTexture(this.mesh,c),this.ready||(this.renderer.setAnimationLoop(function(P){return v.__renderLoop(P)}),this.ready=!0),this.psv.needsUpdate(),this.psv.trigger(E.PANORAMA_LOADED,c)},M.setOverlay=function(c,v){this.psv.adapter.setOverlay(this.mesh,c,v),this.psv.needsUpdate()},M.setPanoramaPose=function(c,v){v===void 0&&(v=this.mesh);var P=this.psv.dataHelper.cleanPanoramaPose(c);v.rotation.set(-P.tilt,-P.pan,-P.roll,"ZXY")},M.setSphereCorrection=function(c,v){v===void 0&&(v=this.meshContainer);var P=this.psv.dataHelper.cleanSphereCorrection(c);v.rotation.set(P.tilt,P.pan,P.roll,"ZXY")},M.transition=function(c,v){var P=this,U=k(v),Q="zoom"in v,oe=new n.Group,ge=this.psv.adapter.createMesh(.5);if(this.psv.adapter.setTexture(ge,c,!0),this.psv.adapter.setTextureOpacity(ge,0),this.setPanoramaPose(c.panoData,ge),this.setSphereCorrection(v.sphereCorrection,oe),U){var We=this.psv.dataHelper.cleanPosition(v),Ve=this.psv.getPosition(),at=new n.Vector3(0,1,0);oe.rotateOnWorldAxis(at,We.longitude-Ve.longitude);var ln=new n.Vector3(0,1,0).cross(this.camera.getWorldDirection(new n.Vector3)).normalize();oe.rotateOnWorldAxis(ln,We.latitude-Ve.latitude)}oe.add(ge),this.scene.add(oe);var Rt=new mi({properties:{opacity:{start:0,end:1},zoom:Q?{start:this.psv.getZoomLevel(),end:v.zoom}:void 0},duration:v.transition,easing:"outCubic",onTick:function(es){P.psv.adapter.setTextureOpacity(ge,es.opacity),P.psv.adapter.setTextureOpacity(P.mesh,1-es.opacity),Q&&P.psv.zoom(es.zoom),P.psv.needsUpdate()}});return Rt.then(function(Hs){Hs?(P.setTexture(c),P.psv.adapter.setTextureOpacity(P.mesh,1),P.setPanoramaPose(c.panoData),P.setSphereCorrection(v.sphereCorrection),U&&P.psv.rotate(v)):P.psv.adapter.disposeTexture(c),P.scene.remove(oe),ge.geometry.dispose(),ge.geometry=null}),Rt},M.__cleanTHREEScene=function(c){var v=this;c.traverse(function(P){P.geometry&&P.geometry.dispose(),P.material&&(Array.isArray(P.material)?P.material.forEach(function(U){U.map&&U.map.dispose(),U.dispose()}):(P.material.map&&P.material.map.dispose(),P.material.dispose())),P.dispose&&!(P instanceof n.Scene)&&P.dispose(),P!==c&&v.__cleanTHREEScene(P)})},y}(ks),ef=function(T){l(y,T);function y(b){var c;return c=T.call(this,b)||this,c.loader=new n.FileLoader,c.loader.setResponseType("blob"),c.config.withCredentials&&c.loader.setWithCredentials(!0),c.config.requestHeaders&&typeof c.config.requestHeaders=="object"&&c.loader.setRequestHeader(c.config.requestHeaders),c}var M=y.prototype;return M.destroy=function(){this.abortLoading(),T.prototype.destroy.call(this)},M.abortLoading=function(){},M.loadFile=function(c,v){var P=this;return this.config.requestHeaders&&typeof this.config.requestHeaders=="function"&&this.loader.setRequestHeader(this.config.requestHeaders(c)),new Promise(function(U,Q){var oe=0;v==null||v(oe),P.loader.load(c,function(ge){oe=100,v==null||v(oe),U(ge)},function(ge){if(ge.lengthComputable){var We=ge.loaded/ge.total*100;We>oe&&(oe=We,v==null||v(oe))}},function(ge){Q(ge)})})},M.loadImage=function(c,v){return this.loadFile(c,v).then(function(P){return new Promise(function(U,Q){var oe=document.createElementNS("http://www.w3.org/1999/xhtml","img");oe.onload=function(){URL.revokeObjectURL(oe.src),U(oe)},oe.onerror=Q,oe.src=URL.createObjectURL(P)})})},M.preloadPanorama=function(c){return this.psv.adapter.supportsPreload(c)?this.psv.adapter.loadTexture(c):Promise.resolve()},y}(ks),Qt={NONE:0,SHOWING:1,HIDING:2,READY:3},uc=function(T){l(y,T);function y(b,c){var v;return v=T.call(this,b,"psv-tooltip")||this,v.prop=a({},v.prop,c,{state:Qt.NONE,width:0,height:0,pos:"",config:null,data:null}),v.content=document.createElement("div"),v.content.className="psv-tooltip-content",v.container.appendChild(v.content),v.arrow=document.createElement("div"),v.arrow.className="psv-tooltip-arrow",v.container.appendChild(v.arrow),v.container.addEventListener("transitionend",u(v)),v.container.style.top="-1000px",v.container.style.left="-1000px",v}var M=y.prototype;return M.destroy=function(){delete this.arrow,delete this.content,T.prototype.destroy.call(this)},M.handleEvent=function(c){switch(c.type){case"transitionend":this.__onTransitionEnd(c);break}},M.toggle=function(){throw new d("Tooltip cannot be toggled")},M.show=function(c){if(this.prop.state!==Qt.NONE)throw new d("Initialized tooltip cannot be re-initialized");c.className&&G(this.container,c.className),this.content.innerHTML=c.content;var v=this.container.getBoundingClientRect();this.prop.width=v.right-v.left,this.prop.height=v.bottom-v.top,this.prop.state=Qt.READY,this.move(c),this.prop.data=c.data,this.prop.state=Qt.SHOWING,this.psv.trigger(E.SHOW_TOOLTIP,this.prop.data,this),this.__waitImages()},M.move=function(c){if(this.prop.state!==Qt.SHOWING&&this.prop.state!==Qt.READY)throw new d("Uninitialized tooltip cannot be moved");c.box||(c.box={width:0,height:0}),this.config=c;var v=this.container,P=this.arrow,U={posClass:bn(c.position,{allowCenter:!1,cssOrder:!1})||["top","center"],width:this.prop.width,height:this.prop.height,top:0,left:0,arrowTop:0,arrowLeft:0};this.__computeTooltipPosition(U,c);var Q=null,oe=null;if(U.top<0?Q="bottom":U.top+U.height>this.psv.prop.size.height&&(Q="top"),U.left<0?oe="right":U.left+U.width>this.psv.prop.size.width&&(oe="left"),oe||Q){var ge=dt(U.posClass);Q&&(U.posClass[ge?0:1]=Q),oe&&(U.posClass[ge?1:0]=oe),this.__computeTooltipPosition(U,c)}v.style.top=U.top+"px",v.style.left=U.left+"px",P.style.top=U.arrowTop+"px",P.style.left=U.arrowLeft+"px";var We=U.posClass.join("-");We!==this.prop.pos&&(v.classList.remove("psv-tooltip--"+this.prop.pos),this.prop.pos=We,v.classList.add("psv-tooltip--"+this.prop.pos))},M.hide=function(){this.container.classList.remove("psv-tooltip--visible"),this.prop.state=Qt.HIDING,this.psv.trigger(E.HIDE_TOOLTIP,this.prop.data)},M.__onTransitionEnd=function(c){if(c.propertyName==="transform")switch(this.prop.state){case Qt.SHOWING:this.container.classList.add("psv-tooltip--visible"),this.prop.state=Qt.READY;break;case Qt.HIDING:this.prop.state=Qt.NONE,this.destroy();break}},M.__computeTooltipPosition=function(c,v){var P=this.prop.arrow,U=v.top,Q=c.height,oe=v.left,ge=c.width,We=P+this.prop.border,Ve=v.box.width/2+P*2,at=v.box.height/2+P*2;switch(c.posClass.join("-")){case"top-left":c.top=U-at-Q,c.left=oe+We-ge,c.arrowTop=Q,c.arrowLeft=ge-We-P;break;case"top-center":c.top=U-at-Q,c.left=oe-ge/2,c.arrowTop=Q,c.arrowLeft=ge/2-P;break;case"top-right":c.top=U-at-Q,c.left=oe-We,c.arrowTop=Q,c.arrowLeft=P;break;case"bottom-left":c.top=U+at,c.left=oe+We-ge,c.arrowTop=-P*2,c.arrowLeft=ge-We-P;break;case"bottom-center":c.top=U+at,c.left=oe-ge/2,c.arrowTop=-P*2,c.arrowLeft=ge/2-P;break;case"bottom-right":c.top=U+at,c.left=oe-We,c.arrowTop=-P*2,c.arrowLeft=P;break;case"left-top":c.top=U+We-Q,c.left=oe-Ve-ge,c.arrowTop=Q-We-P,c.arrowLeft=ge;break;case"center-left":c.top=U-Q/2,c.left=oe-Ve-ge,c.arrowTop=Q/2-P,c.arrowLeft=ge;break;case"left-bottom":c.top=U-We,c.left=oe-Ve-ge,c.arrowTop=P,c.arrowLeft=ge;break;case"right-top":c.top=U+We-Q,c.left=oe+Ve,c.arrowTop=Q-We-P,c.arrowLeft=-P*2;break;case"center-right":c.top=U-Q/2,c.left=oe+Ve,c.arrowTop=Q/2-P,c.arrowLeft=-P*2;break;case"right-bottom":c.top=U-We,c.left=oe+Ve,c.arrowTop=P,c.arrowLeft=-P*2;break}},M.__waitImages=function(){var c=this,v=this.content.querySelectorAll("img");if(v.length>0){var P=[];v.forEach(function(U){P.push(new Promise(function(Q){U.onload=Q,U.onerror=Q}))}),Promise.all(P).then(function(){if(c.prop.state===Qt.SHOWING||c.prop.state===Qt.READY){var U=c.container.getBoundingClientRect();c.prop.width=U.right-U.left,c.prop.height=U.bottom-U.top,c.move(c.config)}})}},y}(Ae),tf=function(T){l(y,T);function y(b){var c;c=T.call(this,b)||this;var v=new uc(c.psv,{arrow:0,border:0});return c.size={arrow:parseInt(pe(v.arrow,"borderTopWidth"),10),border:parseInt(pe(v.container,"borderTopLeftRadius"),10)},v.destroy(),c}var M=y.prototype;return M.destroy=function(){delete this.size,T.prototype.destroy.call(this)},M.create=function(c){var v=new uc(this.psv,this.size);return v.show(c),v},y}(ks);n.Cache.enabled=!0;var nf=function(T){l(y,T);function y(b){var c;if(c=T.call(this)||this,X.load(),!X.isWebGLSupported)throw new d("WebGL is not supported.");if(X.maxTextureWidth===0)throw new d("Unable to detect system capabilities");return c.prop={ready:!1,uiRefresh:!1,needsUpdate:!1,fullscreen:!1,direction:new n.Vector3(0,0,w),vFov:null,hFov:null,aspect:null,autorotateEnabled:!1,animationPromise:null,loadingPromise:null,littlePlanet:!1,idleTime:-1,objectsObservers:{},size:{width:0,height:0},panoData:{fullWidth:0,fullHeight:0,croppedWidth:0,croppedHeight:0,croppedX:0,croppedY:0,poseHeading:0,posePitch:0,poseRoll:0}},c.config=kd(b),c.parent=typeof b.container=="string"?document.getElementById(b.container):b.container,c.parent[R]=u(c),c.container=document.createElement("div"),c.container.classList.add("psv-container"),c.parent.appendChild(c.container),c.adapter=new c.config.adapter[0](u(c),c.config.adapter[1]),c.children=[],c.plugins={},c.renderer=new Qd(u(c)),c.textureLoader=new ef(u(c)),c.eventsHandler=new jd(u(c)),c.dataHelper=new Zd(u(c)),c.loader=new Gd(u(c)),c.navbar=new Hd(u(c)),c.panel=new qd(u(c)),c.tooltip=new tf(u(c)),c.notification=new Vd(u(c)),c.overlay=new Wd(u(c)),c.dynamics={zoom:new D(function(v){c.prop.vFov=c.dataHelper.zoomLevelToFov(v),c.prop.hFov=c.dataHelper.vFovToHFov(c.prop.vFov),c.trigger(E.ZOOM_UPDATED,v)},c.config.defaultZoomLvl,0,100),position:new q({longitude:new D(null,c.config.defaultLong,0,2*Math.PI,!0),latitude:c.prop.littlePlanet?new D(null,c.config.defaultLat,0,Math.PI*2,!0):new D(null,c.config.defaultLat,-Math.PI/2,Math.PI/2)},function(v){c.dataHelper.sphericalCoordsToVector3(v,c.prop.direction),c.trigger(E.POSITION_UPDATED,v)})},c.__updateSpeeds(),c.eventsHandler.init(),c.__resizeRefresh=he(function(){return c.refreshUi("resize")},500),c.resize(c.config.size),c.config.plugins.forEach(function(v){var P=v[0],U=v[1];c.plugins[P.id]=new P(u(c),U)}),$(c.plugins,function(v){return v.init==null?void 0:v.init()}),c.navbar.setButtons(c.config.navbar),c.config.panorama&&c.setPanorama(c.config.panorama),ze(c.container,"psv--is-touch",X.isTouchEnabled.initial),X.isTouchEnabled.promise.then(function(v){return ze(c.container,"psv--is-touch",v)}),c.once(E.RENDER,function(){c.config.navbar&&(c.container.classList.add("psv--has-navbar"),c.navbar.show()),Ie(c.config.autorotateDelay)||(c.prop.idleTime=performance.now()),c.prop.ready=!0,setTimeout(function(){c.refreshUi("init"),c.trigger(E.READY)},0)}),c}var M=y.prototype;return M.destroy=function(){this.__stopAll(),this.stopKeyboardControl(),this.exitFullscreen(),$(this.plugins,function(c){return c.destroy()}),delete this.plugins,this.children.slice().forEach(function(c){return c.destroy()}),this.children.length=0,this.eventsHandler.destroy(),this.renderer.destroy(),this.textureLoader.destroy(),this.dataHelper.destroy(),this.adapter.destroy(),this.parent.removeChild(this.container),delete this.parent[R],delete this.parent,delete this.container,delete this.loader,delete this.navbar,delete this.panel,delete this.tooltip,delete this.notification,delete this.overlay,delete this.dynamics,delete this.config},M.refreshUi=function(c){var v=this;!this.prop.ready||(this.prop.uiRefresh?this.prop.uiRefresh!=="new"&&(this.prop.uiRefresh="new",setTimeout(function(){v.prop.uiRefresh=!1,v.refreshUi(c)})):(this.prop.uiRefresh=!0,this.children.every(function(P){return P.refreshUi(),v.prop.uiRefresh===!0}),this.prop.uiRefresh=!1))},M.getPlugin=function(c){if(typeof c=="string")return this.plugins[c];var v=Pe(c,Bs);return v?this.plugins[v.id]:void 0},M.getPosition=function(){return this.dataHelper.cleanPosition(this.dynamics.position.current)},M.getZoomLevel=function(){return this.dynamics.zoom.current},M.getSize=function(){return a({},this.prop.size)},M.isAutorotateEnabled=function(){return this.prop.autorotateEnabled},M.isFullscreenEnabled=function(){return X.fullscreenEvent?Ze(this.container):this.prop.fullscreen},M.needsUpdate=function(){this.prop.needsUpdate=!0},M.autoSize=function(){(this.container.clientWidth!==this.prop.size.width||this.container.clientHeight!==this.prop.size.height)&&(this.prop.size.width=Math.round(this.container.clientWidth),this.prop.size.height=Math.round(this.container.clientHeight),this.prop.aspect=this.prop.size.width/this.prop.size.height,this.prop.hFov=this.dataHelper.vFovToHFov(this.prop.vFov),this.trigger(E.SIZE_UPDATED,this.getSize()),this.__resizeRefresh())},M.setPanorama=function(c,v){var P,U=this;v===void 0&&(v={}),this.textureLoader.abortLoading(),(P=this.prop.transitionAnimation)==null||P.cancel(),this.prop.ready||["sphereCorrection","panoData","overlay","overlayOpacity"].forEach(function(Ve){Ve in v||(v[Ve]=U.config[Ve])}),(v.transition===void 0||v.transition===!0)&&(v.transition=p),v.showLoader===void 0&&(v.showLoader=!0),v.caption===void 0&&(v.caption=this.config.caption),v.description===void 0&&(v.description=this.config.description),!v.panoData&&typeof this.config.panoData=="function"&&(v.panoData=this.config.panoData);var Q=k(v),oe="zoom"in v;(Q||oe)&&this.__stopAll(),this.hideError(),this.config.panorama=c,this.config.caption=v.caption,this.config.description=v.description;var ge=function(at){if(U.loader.hide(),U.prop.loadingPromise=null,ft(at))return!1;if(at)throw U.navbar.setCaption(""),U.showError(U.config.lang.loadError),console.error(at),at;return U.resetIdleTimer(),U.setOverlay(v.overlay,v.overlayOpacity),U.navbar.setCaption(U.config.caption),!0};this.navbar.setCaption("<em>"+(this.config.loadingTxt||"")+"</em>"),(v.showLoader||!this.prop.ready)&&this.loader.show();var We=this.adapter.loadTexture(this.config.panorama,v.panoData).then(function(Ve){if(Ve.panorama!==U.config.panorama)throw U.adapter.disposeTexture(Ve),Qe();return Ve});return!v.transition||!this.prop.ready||!this.adapter.supportsTransition(this.config.panorama)?this.prop.loadingPromise=We.then(function(Ve){U.renderer.show(),U.renderer.setTexture(Ve),U.renderer.setPanoramaPose(Ve.panoData),U.renderer.setSphereCorrection(v.sphereCorrection),oe&&U.zoom(v.zoom),Q&&U.rotate(v)}).then(ge,ge):this.prop.loadingPromise=We.then(function(Ve){return U.loader.hide(),U.prop.transitionAnimation=U.renderer.transition(Ve,v),U.prop.transitionAnimation}).then(function(Ve){if(U.prop.transitionAnimation=null,!Ve)throw Qe()}).then(ge,ge),this.prop.loadingPromise},M.setOverlay=function(c,v){var P=this;return v===void 0&&(v=1),c?this.adapter.constructor.supportsOverlay?this.adapter.loadTexture(c,function(U){var Q=P.prop.panoData,oe=U.width/Q.croppedWidth;return{fullWidth:oe*Q.fullWidth,fullHeight:oe*Q.fullHeight,croppedWidth:oe*Q.croppedWidth,croppedHeight:oe*Q.croppedHeight,croppedX:oe*Q.croppedX,croppedY:oe*Q.croppedY}},!1).then(function(U){P.renderer.setOverlay(U,v)}):Promise.reject(new d(this.adapter.constructor.id+" adapter does not supports overlay")):(this.adapter.constructor.supportsOverlay&&this.renderer.setOverlay(null,0),Promise.resolve())},M.setOptions=function(c){var v=this,P=a({},this.config,c);$(c,function(U,Q){if(Ur[Q]){ot(Ur[Q]);return}if(!Object.prototype.hasOwnProperty.call(mn,Q))throw new d("Unknown option "+Q);if(lc[Q])throw new d(lc[Q]);switch(Br[Q]?v.config[Q]=Br[Q](U,P):v.config[Q]=U,Q){case"overlay":case"overlayOpacity":v.setOverlay(v.config.overlay,v.config.overlayOpacity);break;case"caption":case"description":v.navbar.setCaption(v.config.caption);break;case"size":v.resize(U);break;case"sphereCorrection":v.renderer.setSphereCorrection(U);break;case"navbar":case"lang":v.navbar.setButtons(v.config.navbar);break;case"moveSpeed":case"zoomSpeed":v.__updateSpeeds();break;case"minFov":case"maxFov":v.dynamics.zoom.setValue(v.dataHelper.fovToZoomLevel(v.prop.vFov)),v.trigger(E.ZOOM_UPDATED,v.getZoomLevel());break;case"canvasBackground":v.renderer.canvasContainer.style.background=v.config.canvasBackground;break;case"autorotateIdle":v.resetIdleTimer();break}}),this.needsUpdate(),this.refreshUi("set options"),this.trigger(E.CONFIG_CHANGED,Object.keys(c))},M.setOption=function(c,v){var P;this.setOptions((P={},P[c]=v,P))},M.resetIdleTimer=function(){this.prop.idleTime=this.config.autorotateIdle?performance.now():-1},M.disableIdleTimer=function(){this.prop.idleTime=-1},M.startAutorotate=function(c){c===void 0&&(c=!1),!(c&&!this.isAutorotateEnabled())&&(!c&&this.isAutorotateEnabled()||(c||this.__stopAll(),this.dynamics.position.roll({longitude:this.config.autorotateSpeed<0},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.dynamics.position.goto({latitude:this.config.autorotateLat},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.config.autorotateZoomLvl!==null&&this.dynamics.zoom.goto(this.config.autorotateZoomLvl),this.prop.autorotateEnabled=!0,c||this.trigger(E.AUTOROTATE,!0)))},M.stopAutorotate=function(){this.isAutorotateEnabled()&&(this.dynamics.position.stop(),this.dynamics.zoom.stop(),this.prop.autorotateEnabled=!1,this.trigger(E.AUTOROTATE,!1))},M.toggleAutorotate=function(){this.isAutorotateEnabled()?this.stopAutorotate():this.startAutorotate()},M.showError=function(c){this.overlay.show({id:J.ERROR,image:Yd,text:c,dissmisable:!1})},M.hideError=function(){this.overlay.hide(J.ERROR)},M.rotate=function(c){var v=this.trigger(E.BEFORE_ROTATE,c);if(!v.isDefaultPrevented()){var P=this.change(O.GET_ROTATE_POSITION,this.dataHelper.cleanPosition(c));this.dynamics.position.setValue(P)}},M.animate=function(c){var v=this;this.__stopAll();var P=k(c),U=c.zoom!==void 0,Q={},oe;if(P){var ge=this.change(O.GET_ANIMATE_POSITION,this.dataHelper.cleanPosition(c)),We=this.getPosition(),Ve=ct(We.longitude,ge.longitude);Q.longitude={start:We.longitude,end:We.longitude+Ve},Q.latitude={start:We.latitude,end:ge.latitude},oe=this.dataHelper.speedToDuration(c.speed,F(We,ge))}if(U){var at=Math.abs(c.zoom-this.getZoomLevel());Q.zoom={start:this.getZoomLevel(),end:c.zoom},oe||(oe=this.dataHelper.speedToDuration(c.speed,Math.PI/4*at/100))}return oe?(this.prop.animationPromise=new mi({properties:Q,duration:oe,easing:"inOutSine",onTick:function(Rt){P&&v.rotate(Rt),U&&v.zoom(Rt.zoom)}}),this.prop.animationPromise.then(function(){v.prop.animationPromise=null,v.resetIdleTimer()}),this.prop.animationPromise):(P&&this.rotate(c),U&&this.zoom(c.zoom),new mi)},M.stopAnimation=function(){return this.prop.animationPromise?(this.prop.animationPromise.cancel(),this.prop.animationPromise):Promise.resolve()},M.zoom=function(c){this.dynamics.zoom.setValue(c)},M.zoomIn=function(c){c===void 0&&(c=1),this.dynamics.zoom.step(c)},M.zoomOut=function(c){c===void 0&&(c=1),this.dynamics.zoom.step(-c)},M.resize=function(c){var v=this;["width","height"].forEach(function(P){c&&c[P]&&(/^[0-9.]+$/.test(c[P])&&(c[P]+="px"),v.parent.style[P]=c[P])}),this.autoSize()},M.enterFullscreen=function(){X.fullscreenEvent?re(this.container):(this.container.classList.add("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!0))},M.exitFullscreen=function(){this.isFullscreenEnabled()&&(X.fullscreenEvent?ie():(this.container.classList.remove("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!1)))},M.toggleFullscreen=function(){this.isFullscreenEnabled()?this.exitFullscreen():this.enterFullscreen()},M.startKeyboardControl=function(){this.eventsHandler.enableKeyboard()},M.stopKeyboardControl=function(){this.eventsHandler.disableKeyboard()},M.observeObjects=function(c,v){var P=this;return this.prop.objectsObservers[c]={listener:v},function(){delete P.prop.objectsObservers[c]}},M.__stopAll=function(){return this.trigger(E.STOP_ALL),this.disableIdleTimer(),this.stopAutorotate(),this.stopAnimation()},M.__updateSpeeds=function(){this.dynamics.zoom.setSpeed(this.config.zoomSpeed*50),this.dynamics.position.setSpeed(n.MathUtils.degToRad(this.config.moveSpeed*50))},y}(i.EventEmitter);t.AbstractAdapter=f,t.AbstractButton=Oe,t.AbstractComponent=Ae,t.AbstractPlugin=Bs,t.CONSTANTS=H,t.DEFAULTS=mn,t.EquirectangularAdapter=ne,t.PSVError=d,t.SYSTEM=X,t.Viewer=nf,t.registerButton=cc,t.utils=V,Object.defineProperty(t,"__esModule",{value:!0})})})(dc,dc.exports);export{dc as p};
